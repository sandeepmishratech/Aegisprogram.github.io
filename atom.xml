<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rem Blue</title>
  
  <subtitle>繁华三千异世界,只取一瓢真爱蓝。</subtitle>
  <link href="https://example.github.io/atom.xml" rel="self"/>
  
  <link href="https://example.github.io/"/>
  <updated>2021-07-27T04:09:24.658Z</updated>
  <id>https://example.github.io/</id>
  
  <author>
    <name>Aegisprogram</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>扩展分享</title>
    <link href="https://example.github.io/posts/d5f09ca9.html"/>
    <id>https://example.github.io/posts/d5f09ca9.html</id>
    <published>2021-07-27T02:51:29.000Z</published>
    <updated>2021-07-27T04:09:24.658Z</updated>
    
    <content type="html"><![CDATA[<p>浏览器中的扩展能够帮助我们获得更好的上网体验，可以说没有扩展的浏览器就没得灵魂。但是有一个很尴尬的事情就是，现在很多人对插件和扩展两者混为一谈，事实上二者天差地别。</p><h3 id="插件和扩展"><a href="#插件和扩展" class="headerlink" title="插件和扩展"></a>插件和扩展</h3><p>插件：在功能上，插件通常是用来渲染页面里的 &lt;object&gt; 或 &lt;embed&gt; 标签。<br>插件通常用操作系统的本地代码（也叫“原生代码”）编写，可以调用操作系统的 API。<br>形式上，插件以动态库（Windows 上就是 DLL 文件）的方式，加载到浏览器的进程内。由于使用本地代码编写，<br>插件通常依赖于特定的操作系统（不同系统的插件不能混用）。</p><span id="more"></span><p>举例：<br>Flash 插件<br>媒体播放器插件<br>PDF 插件<br>Java 插件<br>各种网银控件</p><p>扩展：　扩展，顾名思义，是用来扩展浏览器自身的功能。所以，<br>扩展可以调用浏览器自身的 API，但是扩展通常不能调用操作系统的 API。<br>一般来说，扩展是跟操作系统无关的。比如 Firefox 的大部分扩展，<br>既可以用于 Windows 平台的 Firefox，也可以用于 Linux 和 Mac OS X 的 Firefox。</p><p>还有，当我们在Chrome中分别输入<code>Chrome://plugins</code>和<code>Chrome://extensions</code>时候给我们的页面也完全不一样。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E6%8F%92%E4%BB%B61.17y8fei0elvg.png" alt="image"></p><center>这是输入plugins后给出的页面</center><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E6%89%A9%E5%B1%95.5s9r5wcohds0.png" alt="image"></p><center>这是输入extensions后给出的页面</center><br><p>很显然，现在Chrome已经停止了对于类似于Flash这类插件的支持，但是扩展功能支持一直都在。所以插件和扩展是完完全全的两码事儿。</p><h3 id="我的扩展"><a href="#我的扩展" class="headerlink" title="我的扩展"></a>我的扩展</h3><p>下面我说说自己浏览器上那些离不开的扩展吧！</p><h4 id="ADguard"><a href="#ADguard" class="headerlink" title="ADguard"></a><a href="https://chrome.google.com/webstore/detail/adguard-adblocker/bgnkhhnnamicmpeenaelnjfhikgbkllg">ADguard</a></h4><p>这是一个广告过滤扩展，能够帮你过滤掉网站上你不想看到的广告，当然，也可以完美过滤YouTube视频中的广告（本人亲测有效）。广告过滤扩展那么多，有这一个就够了。</p><h4 id="Dark-Reader"><a href="#Dark-Reader" class="headerlink" title="Dark Reader"></a><a href="https://chrome.google.com/webstore/detail/dark-reader/eimadpbcbfnmbkopoojfekhnkhdbieeh">Dark Reader</a></h4><p>这是一个“护眼扩展”，通过这个扩展你可以轻松的将大部分网页渲染成黑色，以此来达到降低夜间白色背景光对眼睛的刺激。</p><h4 id="bitwarden"><a href="#bitwarden" class="headerlink" title="bitwarden"></a><a href="https://github.com/bitwarden">bitwarden</a></h4><p>这是一款开源的密码管理软件。开源的密码软件不在少数，但是这个上手就比较简单。跨平台，无论你是Windows，MacOS，Linux，都可以使用，扩展几乎覆盖所有的主流浏览器，IOS和Android还有对应的客户端。</p><h4 id="privacy-Badger"><a href="#privacy-Badger" class="headerlink" title="privacy Badger"></a><a href="https://chrome.google.com/webstore/detail/privacy-badger/pkehgijcmpdhfbdbbnkijodmdjhbjlgp?hl=zh-CN">privacy Badger</a></h4><p>这是一个自动学习并且能够阻止网页上不可见追踪器的扩展。</p><h4 id="Randrom-User-Agent"><a href="#Randrom-User-Agent" class="headerlink" title="Randrom User-Agent"></a><a href="https://chrome.google.com/webstore/detail/random-user-agent/einpaelgookohagofgnnkcfjbkkgepnp">Randrom User-Agent</a></h4><p>自动随机的改变用户的浏览器头部信息，减少被刻画用户画像的风险。</p><h4 id="Pocket"><a href="#Pocket" class="headerlink" title="Pocket"></a><a href="https://chrome.google.com/webstore/detail/save-to-pocket/niloccemoadcdkdjlinkgdfekeahmflj">Pocket</a></h4><p>将自己想要稍后阅读或者是自己喜欢的文章，网页收藏起来。算是一个收集箱，不开源。</p><h4 id="PopupOFF"><a href="#PopupOFF" class="headerlink" title="PopupOFF"></a><a href="https://chrome.google.com/webstore/detail/popupoff-popup-and-overla/ifnkdbpmgkdbfklnbfidaackdenlmhgh">PopupOFF</a></h4><p>阻止顽固的网页弹窗和多余的页面边缘元素，提升阅读和浏览体验。</p><h4 id="Clearurls"><a href="#Clearurls" class="headerlink" title="Clearurls"></a><a href="https://chrome.google.com/webstore/detail/clearurls/lckanjgmijmafbedllaakclkaicjfmnk">Clearurls</a></h4><p>一款开源扩展，去除url中的跟踪元素，保护个人隐私。</p><h4 id="Tampermonkey"><a href="#Tampermonkey" class="headerlink" title="Tampermonkey"></a><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo">Tampermonkey</a></h4><p>浏览器中功能最强大的扩展，能够配合<a href="https://greasyfork.org/">Greasy fork</a>这个脚本网站实现各种各样的功能，逐渐不开源。</p><h4 id="Disconnet"><a href="#Disconnet" class="headerlink" title="Disconnet"></a><a href="https://chrome.google.com/webstore/detail/disconnect/jeoacafpbcihiomhlakheieifhpjdfeo">Disconnet</a></h4><p>能够提升网页的响应速度，阻止网页追踪器，保护上网安全。</p><h4 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a><a href="http://internetdownloadmanager.com/">IDM</a></h4><p>这是一个多线程的下载扩展（需要付费），能够自动嗅探资源，断点恢复下载，多线程 高速下载，下载大文件用它就对了，不开源。</p><h4 id="WebRTC-Leak-Prevent"><a href="#WebRTC-Leak-Prevent" class="headerlink" title="WebRTC Leak Prevent"></a><a href="https://chrome.google.com/webstore/detail/webrtc-leak-prevent/eiadekoaikejlgdbkbdfeijglgfdalml?hl=en-US">WebRTC Leak Prevent</a></h4><p>禁用自己浏览器上的webRTC，保护自己的真实IP不泄露。</p><p><a href="https://ip.voidsec.com/">webRTC检测</a> ——一个用来检测webRTC有没有泄露你真实IP的网站，没有泄露则webRTC处没有IP显示。 网站管理员可以轻易地通过WebRTC看到用户的真实IP地址，即使用户使用VPN来隐藏自己的IP，也可以被追踪到。</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>Mozilla Firefox</p><p>在地址栏输入 “about:config”，搜“media.peerconnection.enabled” 并双击将值改为 “false”，WebRTC 将被关闭。</p><p>Google Chrome</p><p>在谷歌应用商店安装谷歌官方扩展 “WebRTC Leak Prevent”，在扩展选项里找到 “IP handling  policy”选择第三项 “Disable non-proxied UDP”，并点击下方 “Apply  settings”。只要是采用chromium内核的浏览器都可以使用此方法。</p><p>当然，最后你还可以对你的浏览器进行一波儿<a href="https://coveryourtracks.eff.org/">指纹独特性测试</a>，无论结果是什么都仅供参考。</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>以上这些扩展基本都可以在chrome的网上商店中找到（IDM除外），只要是采用了chromium内核的浏览器都可以使用。现在主流的浏览器中采用chromium内核的有：Chrome，Microsoft Edge，Brave，Yandex，Opera，Vivaldi，Firefox可以直接在扩展商店搜索名字。</p><p>以上扩展多为开源扩展，非开源扩展我已经特别说明了。</p><p>不要过分相信这些外在的工具，他们的作用毕竟是有限的，只有不断强大自身，学会远离危险，保护自己，才是最好，最有效的措施。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;浏览器中的扩展能够帮助我们获得更好的上网体验，可以说没有扩展的浏览器就没得灵魂。但是有一个很尴尬的事情就是，现在很多人对插件和扩展两者混为一谈，事实上二者天差地别。&lt;/p&gt;
&lt;h3 id=&quot;插件和扩展&quot;&gt;&lt;a href=&quot;#插件和扩展&quot; class=&quot;headerlink&quot; title=&quot;插件和扩展&quot;&gt;&lt;/a&gt;插件和扩展&lt;/h3&gt;&lt;p&gt;插件：在功能上，插件通常是用来渲染页面里的 &amp;lt;object&amp;gt; 或 &amp;lt;embed&amp;gt; 标签。&lt;br&gt;插件通常用操作系统的本地代码（也叫“原生代码”）编写，可以调用操作系统的 API。&lt;br&gt;形式上，插件以动态库（Windows 上就是 DLL 文件）的方式，加载到浏览器的进程内。由于使用本地代码编写，&lt;br&gt;插件通常依赖于特定的操作系统（不同系统的插件不能混用）。&lt;/p&gt;</summary>
    
    
    
    <category term="分享" scheme="https://example.github.io/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="扩展" scheme="https://example.github.io/tags/%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>Git学习（一）</title>
    <link href="https://example.github.io/posts/a91eaa72.html"/>
    <id>https://example.github.io/posts/a91eaa72.html</id>
    <published>2021-07-24T09:50:12.000Z</published>
    <updated>2021-07-27T03:39:07.887Z</updated>
    
    <content type="html"><![CDATA[<p>Git是一个分布式的版本控制系统，早期为了管理Linux内核的开发而开发，现在被广泛用于其他项目的开发和管理，在GitHub上开发尤其流行。</p><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>假如有一个文档你现在需要修改，但是你怕日后需要原文档，所以你不得不复制一遍文档，然后在新复制的文档上进行修改。但是这样的修改过程可能不止一次，次数多了你可能忘记某一个阶段自己修改了什么内容。如果这个文档是多人协作的话，那就更加伤脑经，因为每一次的修改你都需要告诉别人修改的内容，而且你修改好的内容可能是被某个协作人无意之中覆盖掉。这样一来，消耗大量的人力和时间之后，事情还不一定能做好。所以人们在想有没有一种工具能够记录每次文档的修改内容，还可以进行多人的协作。于是乎，Git出现了。</p><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/git.5oorlnbt1tw0.png" alt="image" title="修改变动清晰可见"></p><h3 id="诞生"><a href="#诞生" class="headerlink" title="诞生"></a>诞生</h3><p>同生活中的许多伟大事物一样，Git 诞生于一个极富纷争大举创新的年代。</p><p>Linux 内核开源项目有着为数众多的参与者。 绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上（1991－2002年间）。 到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。</p><p>到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。 这就迫使 Linux 开源社区（特别是 Linux 的缔造者 Linus Torvalds）基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。</p><p>自诞生于 2005 年以来，Git 日臻成熟完善，在高度易用的同时，仍然保留着初期设定的目标。 它的速度飞快，极其适合管理大项目，有着令人难以置信的非线性分支管理系统。</p><p>这里值得一提的是，虽然当时已经有了CVS,SVN这样的版本控制软件，但是Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。甚至有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。所以Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1.与集中式的版本控制软件不同，Git不需要联网就可以在本地直接编写。</p><p>2.跨平台，可在Linux，Mac OS，Unix、Solaris和Windows上面使用。</p><p>3.处理速度快，设计简单，对非线性开发模式的强力支持（允许成千上万个并行开发的分支）。</p><p>4.有能力高效管理类似 Linux 内核一样的超大规模项目。</p><p>5.完全分布式，每个人的电脑都是一个完整的版本库，减少备份负担。</p><p>6.能够记录每一次的文件变化</p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>下面的内容就需要安装好Git之后才能更加好理解，因为Git是跨平台的工具，所以根据你自己当前的系统选择对应的安装方式。</p><p><a href="https://git-scm.com/downloads">Git官方网站下载</a></p><p><a href="https://github.com/git/git">GitHub仓库</a></p><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496">Git下载安装教程——Linux，Mac OS,Windows</a></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>初次使用Git，自然免不了对它进行一些配置，当然在此之前你需要先执行 <code>git init</code>。</p><h4 id="gitconfig"><a href="#gitconfig" class="headerlink" title="gitconfig"></a>gitconfig</h4><p>Git 自带一个 <code>git config</code> 的工具来帮助设置控制 Git 外观和行为的配置变量。 这些变量存储在三个不同的位置：</p><ol><li><code>/etc/gitconfig</code> 文件: 包含系统上每一个用户及他们仓库的通用配置。 如果在执行 <code>git config</code> 时带上 <code>--system</code> 选项，那么它就会读写该文件中的配置变量。 （由于它是系统配置文件，因此你需要管理员或超级用户权限来修改它。）</li><li><code>~/.gitconfig</code> 或 <code>~/.config/git/config</code> 文件：只针对当前用户。 你可以传递 <code>--global</code> 选项让 Git 读写此文件，这会对你系统上 所有 的仓库生效。</li><li>当前使用仓库的 Git 目录中的 <code>config</code> 文件（即 <code>.git/config</code>）：针对该仓库。 你可以传递 <code>--local</code> 选项让 Git 强制读写此文件，虽然默认情况下用的就是它。。 （当然，你需要进入某个 Git 仓库中才能让该选项生效。）</li></ol><p>你可以通过以下命令查看所有的配置以及它们所在的文件：</p><p><code>git config --list --show-origin</code></p><h4 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h4><p>设置你的用户名和邮件地址。 这一点很重要，因为每一个 Git 提交都会使用这些信息，它们会写入到你的每一次提交中，不可更改：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;John Doe&quot;</span><br><span class="line">git config --global user.email johndoe@example.com</span><br></pre></td></tr></table></figure><p>如果使用了 <code>--global</code> 选项，那么该命令只需要运行一次，因为之后无论你在该系统上做任何事情， Git 都会使用那些信息。 当你想针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行没有 <code>--global</code> 选项的命令来配置。</p><p>你还可以设置让Git命令显示颜色</p><p><code>git config --global color.ui true</code></p><p>这样，Git会适当地显示不同的颜色</p><p>你甚至可以给Git设置命令的别名，以<code>git status</code>为例</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.st status</span><br></pre></td></tr></table></figure><p>这样设置别名之后，我们之后就可以输入<code>git st</code>来代替<code>git status</code>。</p><p>如果你是Windows直接下载的Git的.exe文件安装的Git，那么上面的操作未必有效。你可以参考我之前<a href="https://aegisprogram.github.io/posts/93b9d9fa.html">alias命令博客</a>来进行设置。</p><p>这样你就可以设置你想要的别名来提高你的工作效率。</p><h4 id="检查配置信息"><a href="#检查配置信息" class="headerlink" title="检查配置信息"></a>检查配置信息</h4><p>如果想要检查你的配置，可以使用 <code>git config --list</code> 命令来列出所有 Git 当时能找到的配置。</p><p>如果想要检查全局配置，可以使用<code>git config --global --list</code>命令来列出所有的全局配置。</p><p>你可能会看到重复的变量名，因为 Git 会从不同的文件中读取同一个配置（例如：<code>/etc/gitconfig</code> 与 <code>~/.gitconfig</code>）。 这种情况下，Git 会使用它找到的每一个变量的最后一个配置。</p><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><h4 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h4><p><code>git init</code>初始化Git(建立本地的Git仓库)</p><p>Git的本地仓库由三部分组成，分别是：工作目录，index暂存区和HEAD。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">工作目录：持有实际的工作文件，肉眼可见的工作目录。</span><br><span class="line">index(称为暂存区或者是索引)：保存文件的临时改动。</span><br><span class="line">HEAD：指向最后一次的提交结果</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95.1hb6ele5kzi8.png" alt="image" title="工作流"></p><p>如果想看 HEAD 指向，可以通过 cat .git/HEAD 查看，<br>如果 HEAD 指向的是一个引用，还可以用 git symbolic-ref HEAD 查看它的指向</p><p>版本库：工作区有一个隐藏目录 .git，这个不算工作区，而是 Git 的版本库。</p><p>下面以hexo博客为例：</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E7%9B%AE%E5%BD%95.5y207o4vn7k0.png" alt="image"></p><center>这是hexo博客本地的工作目录</center><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E7%B4%A2%E5%BC%95.1g9kbtmbnirk.png" alt="索引"></p><center>这是本地的索引（暂存区）</center><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E7%89%88%E6%9C%AC%E5%BA%93.6ymympw4zl00.png" alt="image"></p><center>这是本地的版本库</center><br><p>当执行<code>git add &lt;branch-name&gt;</code>之后，工作区修改变动的目录树就会被添加到索引区当中。当执行<code>git commit</code>之后，索引区的目录树写到版本库（对象库）中。关系如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E5%8C%BA%E5%88%AB.w7bx8t1jte8.png" alt="image"></p><center>工作区、版本库中的索引区和版本库之间的关系</center><br><h4 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h4><p><code>git branch &lt;filename&gt;</code>建立新的分支</p><p>几乎每一种版本控制系统都以某种形式支持分支。使用分支意味着你可以从开发主线上分离开来，然后在不影响主线的同时继续工作。</p><p>进一步具体的解释就是：</p><p>假设你准备开发一个新功能，但是需要两周才能完成，第一周你写了50%的代码，如果立刻提交，由于代码还没写完，不完整的代码库会导致别人不能干活了。如果等代码全部写完再一次提交，又存在丢失每天进度的巨大风险。</p><p>现在有了分支，就不用怕了。你创建了一个属于你自己的分支，别人看不到，还继续在原来的分支上正常工作，而你在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，又不影响别人工作。</p><p>而Git对于分支的创建又是十分的便捷，可以说正是由于创建分支十分的便捷，才让Git从众多的版本控制工具中脱颖而出，成为现在最热门的版本控制工具。</p><h4 id="help"><a href="#help" class="headerlink" title="help"></a>help</h4><p>在Linux系统中，如果我们不清楚一个命令如何的使用，那么我们可以执行<code>man keyword</code>或者是<code>info keyword</code>来获取文档中的帮助，里面的内容十分的详细，只要你掌握并熟悉一些英文你就能明白其中的意思。在Git中同样的，也有很详细的帮助文档。当你需要详细的文档的时候，你可以执行<code>git help config</code>来获取文档。</p><p>如果你不需要全面的手册，只需要可用选项的快速参考，那么你可以执行<code>git keyword -h</code>就可以获取该关键词的用法。好消息是：执行这些命令获取帮助文档完全不需要联网，这意味着你可以随时随地的获取帮助。另一个消息是：要求Git使用者掌握，熟悉英语，否则帮助文档也帮不了你。</p><h3 id="入门总结"><a href="#入门总结" class="headerlink" title="入门总结"></a>入门总结</h3><p>Git作为一个高效，流行，便捷的版本控制工具，简单上手还是不难的。并且有着很多自己独一无二的优势，这也是为什么在当下它如此的流行。如果自己有心做一个开源项目，那么了解并掌握使用Git就是你基本功。当然，如果你现在没有做开源项目的想法，但是现在自己又想锻炼一下自己的能力，那么我建议不妨自己搭建一个静态博客，在搭建博客的过程中你不可避免的就要使用到Git的相关命令。这并不是你学习，实践Git的唯一方法。事实上你可以尝试一下<a href="https://learngitbranching.js.org/">Try Git</a></p><p>TryGit是一个开源的GitHub项目，目的就是给学习Git的新人一个友好的学习平台。网站采用的是交互式的学习界面，生动形象，肉眼可见的变化过程，可选中文但是默认是英文。</p><p>如果你是一个编程的爱好者，那么学习Git对你来说应该是有帮助的。Git学习需要耐心和实践，请不要轻易放弃。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>1.<a href="https://git-scm.com/">Git-Scm文档</a></p><p>2.<a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰网站Git学习</a></p><p>3.<a href="https://www.runoob.com/manual/git-guide/">Git简明指南</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Git是一个分布式的版本控制系统，早期为了管理Linux内核的开发而开发，现在被广泛用于其他项目的开发和管理，在GitHub上开发尤其流行。&lt;/p&gt;
&lt;h3 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h3&gt;&lt;p&gt;假如有一个文档你现在需要修改，但是你怕日后需要原文档，所以你不得不复制一遍文档，然后在新复制的文档上进行修改。但是这样的修改过程可能不止一次，次数多了你可能忘记某一个阶段自己修改了什么内容。如果这个文档是多人协作的话，那就更加伤脑经，因为每一次的修改你都需要告诉别人修改的内容，而且你修改好的内容可能是被某个协作人无意之中覆盖掉。这样一来，消耗大量的人力和时间之后，事情还不一定能做好。所以人们在想有没有一种工具能够记录每次文档的修改内容，还可以进行多人的协作。于是乎，Git出现了。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://example.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Git" scheme="https://example.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>除了自建博客之外，还有这些选择</title>
    <link href="https://example.github.io/posts/fa60794d.html"/>
    <id>https://example.github.io/posts/fa60794d.html</id>
    <published>2021-07-21T09:45:19.000Z</published>
    <updated>2021-07-21T09:55:43.806Z</updated>
    
    <content type="html"><![CDATA[<p>除了搭建博客之外，你还可以选择以下这些平台来进行你的写作。</p><h3 id="Blogger"><a href="#Blogger" class="headerlink" title="Blogger"></a><a href="https://www.blogger.com/about/?bpli=1">Blogger</a></h3><p>Blogger是目前全球使用者数量最多的个人<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E5%BF%97">网志</a>服务提供商，目前是Google旗下的一项服务，完全免费使用</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/blogger.3wyummnuxfa0.png" alt="image"></p><span id="more"></span><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>1.Blogger提供免费主机Blogspot.com存放部落格，使用者不必写任何代码或者安装伺服器软体或指令码。</p><p>2.所见即所得的写作方式，用户可以轻松地建立、发布、维护和修改自己的网志。</p><p>3.使用者可以自行设计部落格介面，其模板支援使用HTML和CSS进行编辑。</p><p>4.当前Blogger已经推出了完整的中文介面，具有成熟的中文部落格书写和发布功能。</p><h4 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h4><p>Blogger的后缀域名.blogspot.com被GFW阻断，大陆地区用户无法正常使用和访问</p><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a><a href="https://github.com/">GitHub</a></h3><p>GitHub是现在最流行的代码托管网站，用户可以建立自己的仓库存储自己的东西，使用者可以利用仓库的README页面或者是issues来写自己的内容。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/github1.3zjlqmx5q9w0.png" alt="image"></p><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><p>1.界面美观，功能强大，能够很好的支持Markdown语法。</p><p>2.用户可以利用仓库很方便的管理自己的内容。</p><h4 id="不足-1"><a href="#不足-1" class="headerlink" title="不足"></a>不足</h4><p>对于非编程人员来说需要一定的时间来熟悉GitHub的使用方法</p><h3 id="Mastodon"><a href="#Mastodon" class="headerlink" title="Mastodon"></a><a href="https://m.cmx.im/">Mastodon</a></h3><p>Mastodon是一个免费开源的<a href="https://zh.wikipedia.org/wiki/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96">去中心化</a>的<a href="https://zh.wikipedia.org/wiki/%E5%88%86%E6%95%A3%E5%BC%8F%E7%A4%BE%E4%BA%A4%E7%B6%B2%E8%B7%AF">分布式</a>微博客社交网络，由于Mastodon是一个去中心化的社区，所以我这里推荐的Mastodon的长毛象中文社区。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/Mastodon.z0csfjydw1s.png" alt="image"></p><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><p>1.整个社交网络是开源免费的，使用者可以完全免费使用。</p><p>2.社区互动方式友好，上手简单。</p><p>3.可以搭建自己的社区。</p><h4 id="不足-2"><a href="#不足-2" class="headerlink" title="不足"></a>不足</h4><p>1.Mastodon更像是一个社交的网络平台，而非一个个人的写作平台</p><p>2.文章有500字符的限制，不适合“长篇大论”。</p><p>3.部分社区域名需要具备自由上网能力。</p><h3 id="telegraph"><a href="#telegraph" class="headerlink" title="telegraph"></a><a href="https://telegra.ph/">telegraph</a></h3><p><strong>Telegraph</strong>是即时聊天软件Telegram的开发商推出的一个内容发布网站</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/telegraph.3e5t8qqlviq0.png" alt="image"></p><h4 id="优点-3"><a href="#优点-3" class="headerlink" title="优点"></a>优点</h4><p>1.它允许用户匿名发布文章。</p><p>2.telegraph还能帮助用户创建丰富的内容，同时集成照片以及各类可嵌入的流媒体内容。</p><p>3.很好的支持了主流的Markdown书写方法。</p><p>4.简单易上手，傻瓜式操作。</p><h4 id="不足-3"><a href="#不足-3" class="headerlink" title="不足"></a>不足</h4><p>大陆地区无法正常使用和访问</p><h3 id="Sigle"><a href="#Sigle" class="headerlink" title="Sigle"></a><a href="https://www.sigle.io/">Sigle</a></h3><p>Sigle是一个基于区块链技术的去中心化的博客项目，且开源免费。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/sigle.57jw12hqq400.png" alt="image"></p><h4 id="优点-4"><a href="#优点-4" class="headerlink" title="优点"></a>优点</h4><p>1.基于区块链技术，去中心化。</p><p>2.别人无法删除你的文章，除非他获得了你的私钥。</p><p>3.容易上手写作，免费开源使用。</p><h4 id="不足-4"><a href="#不足-4" class="headerlink" title="不足"></a>不足</h4><p>1.刚接触的使用者可能需要了解相关的知识，例如区块链技术，私钥等。</p><p>2.私钥是用户的唯一凭证，失去或者忘记了自己的私钥，那么你就会失去对该博客的控制权。</p><h3 id="WriteFreely"><a href="#WriteFreely" class="headerlink" title="WriteFreely"></a><a href="https://writefreely.org/">WriteFreely</a></h3><p>WriteFreely是免费的开放源代码软件，可用于在Web上构建写作空间，提供简洁无干扰的书写环境。你可以发表公开或私有的作品，与其他 WriteFreely 和联邦宇宙社区联系。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/writefreely.41xnt7hrico0.png" alt="image"></p><h4 id="优点-5"><a href="#优点-5" class="headerlink" title="优点"></a>优点</h4><p>1.界面友好，没有过多的干扰元素，能让使用者专注于内容写作。</p><p>2.作者可以从一个帐户无缝创建多个博客，以实现不同的笔名或目的，而无需公开透露其关联。</p><p>3.可以搭建属于自己的社区。</p><h4 id="不足-5"><a href="#不足-5" class="headerlink" title="不足"></a>不足</h4><p>需要一定的时间来了解其运作的方式</p><h3 id="TypeDream"><a href="#TypeDream" class="headerlink" title="TypeDream"></a><a href="https://typedream.com/">TypeDream</a></h3><p>一个搭建网站的 Nocode 工具，编辑器界面几乎和 Notion 一摸一样。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/Typedream.463pxuu8ddy0.png" alt="image"></p><h4 id="优点-6"><a href="#优点-6" class="headerlink" title="优点"></a>优点</h4><p>1.只需要掌握简单的Markdown语法就可以开始写作</p><p>2.界面美观，个人使用可以选择免费计划</p><h4 id="不足-6"><a href="#不足-6" class="headerlink" title="不足"></a>不足</h4><p>1.使用者需要付费才能自定义域名。</p><p>2.网站为纯英文，提高了使用者的门槛。</p><h3 id="gitbook"><a href="#gitbook" class="headerlink" title="gitbook"></a><a href="https://app.gitbook.com/">gitbook</a></h3><p>GitBook 可以将您的内容作为网站（可定制和可扩展）或电子书（PDF，ePub或Mobi）输出,使用 GitBook 格式创建和托管图书的在线平台。它提供托管，协作功能和易于使用的编辑器。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/gitbook.454v45ajf4a0.png" alt="image"></p><h4 id="优点-7"><a href="#优点-7" class="headerlink" title="优点"></a>优点</h4><p>1.易于写作和管理，Space可以设置为私有或者公开</p><p>2.可以同步到GitHub仓库</p><h4 id="不足-7"><a href="#不足-7" class="headerlink" title="不足"></a>不足</h4><p>1.需要一定的时间了解使用</p><p>2.个人最多可以有10个Space</p><p>3.大陆地区访问GitBook网站不稳定</p><h3 id="HashNode"><a href="#HashNode" class="headerlink" title="HashNode"></a><a href="https://hashnode.com/">HashNode</a></h3><p>这是一个专为开发者提供的写作平台，在这里可以很快的生成自己的站点，开始写自己的博客。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/hashnode.70lnq879yb00.png" alt="image"></p><h4 id="优点-8"><a href="#优点-8" class="headerlink" title="优点"></a>优点</h4><p>1.使用者能够自定义自己的域名。</p><p>2.文章将会发布到域名上并且与社区成员共享。</p><p>3.完全免费使用，并且不展现任何的广告。</p><h3 id="NotesHub"><a href="#NotesHub" class="headerlink" title="NotesHub"></a><a href="https://www.noteshub.app/notebooks">NotesHub</a></h3><p>这是一个利用GitHub做在线笔记的网站，在GitHub建立一个私有或者是公开的仓库来存放和同步你的笔记，然后将GitHub与noteshub关联起来。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/noteshub.572gm7r91ow0.png" alt="image"></p><h4 id="优点-9"><a href="#优点-9" class="headerlink" title="优点"></a>优点</h4><p>1.网站界面较为友好，简洁大方，没有无关因素的干扰。</p><p>2.利于整理自己的笔记，可以选择公开和私密。</p><h4 id="不足-8"><a href="#不足-8" class="headerlink" title="不足"></a>不足</h4><p>对于没有接触过GitHub的人来说需要一定的学习时间</p><h3 id="附"><a href="#附" class="headerlink" title="附"></a>附</h3><p>1.<a href="https://github.com/phodal/github">GitHub 漫游指南</a></p><p>2.<a href="https://docs.o3o.ca/">Mastodon中文用户使用文档</a></p><p>3.<a href="https://zhuanlan.zhihu.com/p/343212233">GitBook使用指南</a></p><p>4.<a href="https://writee.org/salt/qu-zhong-xin-hua-bo-ke-writefreely-da-jian-zhi-nan">去中心化博客 WriteFreely使用指南</a></p><p>5.<a href="https://www.youtube.com/watch?v=o2_jpG5x-q8">没有人可以封你的账号! 免费开源的文章写作平台sigle</a></p><p>6.<a href="https://telegra.ph/tips-for-telegraph-04-01">如何优雅地使用 Telegraph 发布匿名的精美文章</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;除了搭建博客之外，你还可以选择以下这些平台来进行你的写作。&lt;/p&gt;
&lt;h3 id=&quot;Blogger&quot;&gt;&lt;a href=&quot;#Blogger&quot; class=&quot;headerlink&quot; title=&quot;Blogger&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.blogger.com/about/?bpli=1&quot;&gt;Blogger&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Blogger是目前全球使用者数量最多的个人&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%BD%91%E5%BF%97&quot;&gt;网志&lt;/a&gt;服务提供商，目前是Google旗下的一项服务，完全免费使用&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/blogger.3wyummnuxfa0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="分享" scheme="https://example.github.io/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="写作平台" scheme="https://example.github.io/tags/%E5%86%99%E4%BD%9C%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>Windows的奇技淫巧</title>
    <link href="https://example.github.io/posts/aa796245.html"/>
    <id>https://example.github.io/posts/aa796245.html</id>
    <published>2021-07-21T03:21:55.000Z</published>
    <updated>2021-07-21T05:33:13.965Z</updated>
    
    <content type="html"><![CDATA[<p>了解一些Windows系统使用的奇淫技巧不仅能让你在别人面前显得更加得牛X，而且对于自己的工作和学习也是十分得有帮助的。</p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>此文章中的内容是对于<strong>零度解说</strong>——Win10/Win11电脑上十个奇葩实用的小技巧！你都用过吗？YouTube视频内容的整理，并非原创，仅作个人学习之用。原视频我也已经贴在了下方，可以观看原视频。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/ONoeAg7PuBo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>YouTube视频内容的整理，并非原创，仅作个人学习之用。<span id="more"></span><h3 id="3D相册"><a href="#3D相册" class="headerlink" title="3D相册"></a>3D相册</h3><p><a href="/download/3d.rar">3D相册代码文件下载</a></p><p>想要创建一个哄女朋友开心的3D相册，需要执行以下步骤。</p><p>1.在桌面上创建一个.txt文件，然后把文件中的HTML代码复制进去，保存。接着将文件的后缀名改为<code>index.html</code></p><p>2.在桌面创建一个css文件夹，再在里面创建一个.txt文件，然后将文件中的CSS代码复制进去，保存。将文件名改为<code>index.css</code></p><p>3.在桌面上创建一个img文件夹，然后将你女朋友或者老婆的照片放置进去即可。</p><p>4.最后，你只需要点击桌面上的<code>index.html</code>就可以看到3D相册的效果了。</p><h3 id="电脑上微信多开"><a href="#电脑上微信多开" class="headerlink" title="电脑上微信多开"></a>电脑上微信多开</h3><p>这个操作需要你先找到微信的路径，寻找方式如下：</p><p>找到微信图标右键点击属性-快捷方式-目标-复制目标路径（注意不要复制到目标中的引号）</p><p>之后我们在桌面建立一个.txt文本，输入<code>start “” “C:\Program Files (x86)\Tencent\WeChat\WeChat.exe”</code>（微信路径根据自己的情况进行调整，如果你想增加多开的数量那就多复制几行），最后我们将文件重命名为<code>WeChat.bat</code>,然后点击bat就可以实现微信多开了。</p><h3 id="查看电脑文件操作记录"><a href="#查看电脑文件操作记录" class="headerlink" title="查看电脑文件操作记录"></a>查看电脑文件操作记录</h3><p><code>win+r</code>打开运行框，在里面输入recent，然后回车。之后你就能看到你电脑上的文件在哪一个具体的时间被打开过。</p><h3 id="QQ-微信消息轰炸"><a href="#QQ-微信消息轰炸" class="headerlink" title="QQ,微信消息轰炸"></a>QQ,微信消息轰炸</h3><p>先在电脑上新建一个.txt文件，然后输入</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">set wshshell=wscript.createobject(&quot;wscript.shell&quot;) </span><br><span class="line">wshshell.AppActivate&quot;对方昵称&quot; </span><br><span class="line">for i=1 to 1000   (轰炸信息条数)</span><br><span class="line">wscript.sleep 100 </span><br><span class="line">wshshell.sendKeys &quot;^v&quot; </span><br><span class="line">wshshell.sendKeys &quot;%s&quot; </span><br><span class="line">next</span><br></pre></td></tr></table></figure><p>保存之后将文件重名为轰炸.VBS。我们只需要在聊天的输入框里面输入你想说的内容，然后剪切下来双击VBS就可以实现轰炸效果。</p><h3 id="解除联网速度限制"><a href="#解除联网速度限制" class="headerlink" title="解除联网速度限制"></a>解除联网速度限制</h3><p>1.首先我们使用<code>win+r</code>打开运行框，输入<code>gpedit.msc</code>，然后回车</p><p>2.进入之后我们点击左侧的管理模板，接着点击右边的网络，点击Qos数据包计划程序，打开限制可保留带宽</p><p>3.进入之后我们将未配置改为已启用，然后将下面的宽带限制改为0，之后点击应用，确定，重启电脑。</p><h3 id="提升硬盘的读写速度"><a href="#提升硬盘的读写速度" class="headerlink" title="提升硬盘的读写速度"></a>提升硬盘的读写速度</h3><p>我们通过<code>win+i</code>打开设置，进入系统-关于-设备管理器-磁盘驱动器-选择你需要优化的固态硬盘-右键属性-点击策略-点击更好性能-点击确定。</p><p>机械硬盘只需要在策略中开启写入缓存策略即可。</p><p>修改完成之后，重启电脑即可。</p><h3 id="找到家里的WIFI密码"><a href="#找到家里的WIFI密码" class="headerlink" title="找到家里的WIFI密码"></a>找到家里的WIFI密码</h3><p>如果你忘记了家里的WIFI密码的话，那么你可以使用下面的方法进行操作。</p><p>打开控制面板-点击网络和intel-网络和共享中心-找到当前的WIFI连接-双击打开-点击无线属性-点击上方的安全-点击勾选显示密钥。之后你就可以看到家里的WIFI密码了。</p><h3 id="提升电脑的运行速度"><a href="#提升电脑的运行速度" class="headerlink" title="提升电脑的运行速度"></a>提升电脑的运行速度</h3><p><code>win+q</code>打开搜索框，搜索cmd，然后选择以管理员身份运行，接下来输入以下命令</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chkdsk  等待扫描完成</span><br><span class="line">sfc /scannow  等待扫描完成</span><br><span class="line">最后重启电脑</span><br></pre></td></tr></table></figure><h3 id="整人的无限弹窗"><a href="#整人的无限弹窗" class="headerlink" title="整人的无限弹窗"></a>整人的无限弹窗</h3><p><font color='00d00'>请不要在自己电脑真实环境下测试，可在虚拟机中玩玩，也不要随意恶搞他人</font></p><p>我们先在桌面新建一个.txt文本，然后输入</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:start</span><br><span class="line">start cmd</span><br><span class="line">goto start</span><br></pre></td></tr></table></figure><p>然后保存，然后改为后缀名为.bat的文件即可。双击运行就会触发无限的弹窗效果。</p><h3 id="微信优雅表白"><a href="#微信优雅表白" class="headerlink" title="微信优雅表白"></a>微信优雅表白</h3><p>如果你的微信好友中有一个自己暗恋的人，但是你俩之间只隔着一层窗户纸，那么你可以使用下面这个优雅的方式进行表白。</p><p>找到暗恋对象的聊天窗口，然后发送：<code>love.wazf.top/S94</code></p><p>具体的效果可在视频中观看。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;了解一些Windows系统使用的奇淫技巧不仅能让你在别人面前显得更加得牛X，而且对于自己的工作和学习也是十分得有帮助的。&lt;/p&gt;
&lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;p&gt;此文章中的内容是对于&lt;strong&gt;零度解说&lt;/strong&gt;——Win10/Win11电脑上十个奇葩实用的小技巧！你都用过吗？YouTube视频内容的整理，并非原创，仅作个人学习之用。原视频我也已经贴在了下方，可以观看原视频。&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ONoeAg7PuBo&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;YouTube视频内容的整理，并非原创，仅作个人学习之用。</summary>
    
    
    
    <category term="文字博客" scheme="https://example.github.io/categories/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="教程" scheme="https://example.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Windows" scheme="https://example.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>谷歌商店无法下载或更新应用程序怎么办</title>
    <link href="https://example.github.io/posts/b28186e0.html"/>
    <id>https://example.github.io/posts/b28186e0.html</id>
    <published>2021-07-20T05:41:04.000Z</published>
    <updated>2021-07-20T08:59:10.373Z</updated>
    
    <content type="html"><![CDATA[<p>下列内容来自iYouPort的文章——<a href="https://iyouport.substack.com/p/google-play">Google Play商店无法下载或更新应用程序怎么办？</a>查看原文请戳链接。</p><h3 id="Google-Play商店无法下载或更新应用程序怎么办？"><a href="#Google-Play商店无法下载或更新应用程序怎么办？" class="headerlink" title="Google Play商店无法下载或更新应用程序怎么办？"></a>Google Play商店无法下载或更新应用程序怎么办？</h3><p>谷歌应用商店是在安卓设备上安装应用程序的最安全和最快的媒介。每个安卓用户都知道如何使用 Play Store，但不是每个人都知道当该应用商店出现问题时该怎么做。</p><p>如果 Play Store 不能在您的设备上下载或更新应用程序，请参考下面的解决方案。</p><hr><span id="more"></span><h4 id="检查您的互联网连接"><a href="#检查您的互联网连接" class="headerlink" title="检查您的互联网连接"></a>检查您的互联网连接</h4><p>您需要一个强大的移动数据或Wi-Fi连接，才能从 Play Store 下载应用程序。当点击安装或更新按钮时，应用程序是否卡在 “下载等待” 阶段？确认您的互联网是否正常。启动浏览器，随机访问一个网站，如果网页无法加载，很可能是您的网络连接出现了问题。启用飞行模式再关闭它。</p><p>如果您不能通过移动数据网络连接下载应用程序，请切换到Wi-Fi连接。如果在Wi-Fi上问题仍然存在，重新启动或重置您的路由器，再试一次。VPN连接也会影响 Google Play 的性能。</p><h4 id="更新日期和时间"><a href="#更新日期和时间" class="headerlink" title="更新日期和时间"></a>更新日期和时间</h4><p>一些系统服务和第三方应用程序可能因数据设置不正确而出现故障。前往系统设置菜单（设置&gt;系统&gt;日期和时间），确保您的设备正在使用网络提供的日期时间。您还应该启用 “使用网络提供时区” 选项的切换。</p><h4 id="停用您的设备的蓝牙"><a href="#停用您的设备的蓝牙" class="headerlink" title="停用您的设备的蓝牙"></a>停用您的设备的蓝牙</h4><p>虽然这听起来有点奇怪，但许多在谷歌商店遇到类似问题的安卓用户证实，禁用蓝牙是一个有效的解决办法。从通知中心禁用您设备上的蓝牙，或进入设置&gt;连接的设备&gt;连接偏好&gt;蓝牙，以切换关闭蓝牙。</p><h4 id="释放存储空间"><a href="#释放存储空间" class="headerlink" title="释放存储空间"></a>释放存储空间</h4><p>当您的设备存储空间不足时，一些系统功能将变得不可用。例如， Play Store 可能无法下载新的应用程序或更新旧的应用程序。一些应用程序也可能开始运行缓慢，在使用过程中偶尔会崩溃。</p><p>虽然安卓系统在设备内部存储空间不足时（或可用空间不足1GB时）会显示通知，但请进入设置&gt;存储空间，以了解设备是否有足够的存储空间来容纳新的应用程序。</p><p>您应该可以看到您已经使用了多少存储空间，还剩下多少。如果存储空间很低，点击释放空间按钮，使用内置的安卓清理器，从您的设备上删除垃圾、重复文件和长期不使用的应用程序。</p><h4 id="清除-Play-Store-缓存和数据"><a href="#清除-Play-Store-缓存和数据" class="headerlink" title="清除 Play Store 缓存和数据"></a>清除 Play Store 缓存和数据</h4><p>进入 “设置” &gt;“应用程序和通知” &gt;“应用程序信息” （或 “查看所有应用程序” ）&gt; “Google Play商店” &gt; “存储和缓存” ，然后点 “清除缓存” 。</p><p>清除Play商店的缓存后，尝试下载您想要的应用。如果问题仍然存在，请返回Play商店的存储页面，然后点击 Clear storage。</p><h4 id="重置下载管理器"><a href="#重置下载管理器" class="headerlink" title="重置下载管理器"></a>重置下载管理器</h4><p>Google Play 商店通过 Android 下载管理器在您的设备上下载应用程序。如果这个内置下载器被禁用或出现故障，您就无法安装或更新应用程序。重置下载管理器可以帮助解决 Play Store 下载失败的问题。按照下面的步骤来完成。</p><p>首先进入设置&gt;应用程序信息（或查看所有应用程序），然后点击右上角的三点菜单图标。</p><p>然后选择显示系统。滚动浏览应用程序，然后点击下载管理器。</p><p>选择存储和缓存。点击清除缓存，然后清除存储。</p><p>然后启动 Play Store，检查您现在是否可以下载和更新应用程序。</p><h4 id="重置谷歌Play服务"><a href="#重置谷歌Play服务" class="headerlink" title="重置谷歌Play服务"></a>重置谷歌Play服务</h4><p>Google Play 服务是一个核心的安卓系统，为所有谷歌应用程序和服务提供动力。如果您在 Play Store 下载应用程序时遇到问题，而且您所尝试的一切都被证明是失败的，那就试试重置。</p><p>进入 “设置” &gt; “应用程序和通知” &gt; “应用程序信息”（或 “查看所有应用程序”）&gt;“Google Play服务” ，点击 “清除缓存”。之后，点击清除存储，在下一页选择清除所有数据。</p><p>您的设备将下载运行Google Play服务所需的一些系统应用程序。设置完成后，打开Play商店，然后检查重置 Google Play 服务是否可以解决问题。</p><h4 id="重装"><a href="#重装" class="headerlink" title="重装"></a>重装</h4><p>安卓系统会在后台自动更新谷歌Play商店。虽然这些更新中有些是没问题的，但其他的更新有时会出现导致性能问题的错误。</p><p>首先长按 Play Store 应用图标，点击信息（i）图标。</p><p>点击三点菜单图标。</p><p>选择卸载更新。</p><p>在提示上点击确定以继续。</p><p>之后，您应该将 Google Play 商店更新为最新版本。启动Play商店，点击菜单图标，然后转到 “设置” &gt; “ Play商店版本”。您的设备将在后台下载并安装最新版本的Google Play Store。</p><h4 id="重新启动您的设备"><a href="#重新启动您的设备" class="headerlink" title="重新启动您的设备"></a>重新启动您的设备</h4><p>当Google Play商店无法下载时，给您的设备断电是另一个值得尝试的故障排除技巧。按住电源键，在电源选项上点击重新启动。</p><p>连接到一个强大的Wi-Fi或移动数据连接，重新尝试下载。</p><h4 id="更新您的设备"><a href="#更新您的设备" class="headerlink" title="更新您的设备"></a>更新您的设备</h4><p>安装最新的安卓系统更新可以解决阻止 Play Store 处理应用程序下载和更新的问题。进入设置&gt;系统&gt;高级&gt;系统更新，检查您的设备是否有软件更新。</p><h4 id="重新加入您的谷歌账户"><a href="#重新加入您的谷歌账户" class="headerlink" title="重新加入您的谷歌账户"></a>重新加入您的谷歌账户</h4><p>这需要退出您的谷歌账户并重新登录。虽然这可能会解决Play Store的问题，但请注意，删除您的账户可能会删除您已经同步到谷歌账户的一些数据（联系人、信息、日历事件等）。</p><p>要退出谷歌账户，请进入设置&gt;账户，选择连接到Play Store的谷歌账户。之后点击移除账户。在 “账户” 菜单上，选择 “添加账户”，按照提示重新添加账户。</p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>1.不同型号的手机操作各异，自行摸索，仅作为参考方案，不作为最终的解决方案。</p><p>2.如果身处大陆地区，那么可能需要更多的额外步骤来突破GFW封锁才能实现操作效果。</p><p>3.再次声明，本文并非原创，而是转载自iYouPort的文章——<font color="00dd00">Google Play商店无法下载或更新应用程序怎么办？</font>我已在文章开头标明原文章地址。有关于Google Play的更多解决方法可以前往<a href="https://www.online-tech-tips.com/google-softwaretips/how-to-fix-google-play-issues/">How To Fix Google Play Issues</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;下列内容来自iYouPort的文章——&lt;a href=&quot;https://iyouport.substack.com/p/google-play&quot;&gt;Google Play商店无法下载或更新应用程序怎么办？&lt;/a&gt;查看原文请戳链接。&lt;/p&gt;
&lt;h3 id=&quot;Google-Play商店无法下载或更新应用程序怎么办？&quot;&gt;&lt;a href=&quot;#Google-Play商店无法下载或更新应用程序怎么办？&quot; class=&quot;headerlink&quot; title=&quot;Google Play商店无法下载或更新应用程序怎么办？&quot;&gt;&lt;/a&gt;Google Play商店无法下载或更新应用程序怎么办？&lt;/h3&gt;&lt;p&gt;谷歌应用商店是在安卓设备上安装应用程序的最安全和最快的媒介。每个安卓用户都知道如何使用 Play Store，但不是每个人都知道当该应用商店出现问题时该怎么做。&lt;/p&gt;
&lt;p&gt;如果 Play Store 不能在您的设备上下载或更新应用程序，请参考下面的解决方案。&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="分享" scheme="https://example.github.io/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="文字博客" scheme="https://example.github.io/tags/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="google play store" scheme="https://example.github.io/tags/google-play-store/"/>
    
  </entry>
  
  <entry>
    <title>编程开发资源</title>
    <link href="https://example.github.io/posts/4e0b09d6.html"/>
    <id>https://example.github.io/posts/4e0b09d6.html</id>
    <published>2021-07-19T08:42:47.000Z</published>
    <updated>2021-07-21T05:10:09.332Z</updated>
    
    <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>以上资源整理自<a href="https://t.me/tieliu">黑洞资源笔记</a>，此外，本篇中英文资源数量较多。</p><h3 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h3><p>1.<a href="https://loremipsum.io/">Lorem Ipsum</a>    Lorem Ipsum发生器</p><p>2.<a href="https://realfavicongenerator.net/">RealFaviconGenerator</a>     图标生成器</p><p>3.<a href="https://formito.com/tools/favicon">Favicon Maker</a>    免费的Favicon制造商</p><p>4.<a href="https://metatags.io/">Meta Tags</a>     元标记生成器，预览您的网页在Google，Facebook，Twitter等上的外观</p><p>5.<a href="https://bennettfeely.com/clippy/">Clippy</a>     CSS剪切路径生成器</p><p>6.<a href="https://regex101.com/">Regex101</a>    在线正则表达式测试器</p><p>7.<a href="https://webcode.tools/">Web代码工具</a>     生成HTML5，CSS3，微数据，JSON-LD，Twitter卡，Open Graph等</p><p>8.<a href="https://carbon.now.sh/">Carbon</a>     创建并共享您来源的精美图像</p><p>9.<a href="https://grid.layoutit.com/">CSS网格生成器</a>    快速设计网页布局，并获取HTML和CSS代码。直观地学习CSS Grid，并使用我们的交互式CSS Grid Generator构建Web布局</p><span id="more"></span><h3 id="web开发资源"><a href="#web开发资源" class="headerlink" title="web开发资源"></a>web开发资源</h3><h4 id="开发者的roadmaps"><a href="#开发者的roadmaps" class="headerlink" title="开发者的roadmaps"></a>开发者的roadmaps</h4><p>1.<a href="https://roadmap.sh/frontend">Frontend</a>    前端开发路线图</p><p>2.<a href="https://roadmap.sh/backend">Backend</a>     后端开发路线图</p><p>3.<a href="https://roadmap.sh/react">React</a>     React开发路线图</p><p>4.<a href="https://roadmap.sh/android">Andriod</a>     Android开发路线图</p><p>5.<a href="https://roadmap.sh/devops">DevOps</a>    DevOps路线图</p><h4 id="文档和备忘单"><a href="#文档和备忘单" class="headerlink" title="文档和备忘单"></a>文档和备忘单</h4><p>1.<a href="https://developer.mozilla.org/en-US/">MDN Web Docs</a>     MDN Web Docs网站提供有关Open Web技术的信息，包括网站和渐进式Web应用程序的HTML，CSS和API</p><p>2.<a href="https://devdocs.io/https://devdocs.io/">DevDocs</a>    为开发人员提供的快速，离线和免费的文档浏览器。在一个Web应用程序中搜索100多个文档</p><p>3.<a href="https://devhints.io/">DEVHINTS</a>    命令查询备忘单</p><p>4.<a href="https://flexbox.malven.co/">FLEX - Malven</a>     用于CSS flex布局的可视备忘单</p><p>5.<a href="https://grid.malven.co/">GRID - Malven</a>      CSS网格布局的可视备忘单</p><h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><h4 id="互联网"><a href="#互联网" class="headerlink" title="互联网"></a>互联网</h4><p>1.<a href="https://www.youtube.com/watch?v=x3c1ih2NJEg">互联网的工作原理视频</a>      互联网如何运作</p><p>2.<a href="https://www.youtube.com/playlist?list=PLzdnOPI1iJNfMRZm5DDxco3UdsFegvuB7">互联网的工作原理简短视频</a>     关于互联网如何工作的简要说明</p><p>3.<a href="https://howdns.works/">域名解析</a>    DNS如何工作</p><p>4.<a href="https://howhttps.works/">HTTPS</a>     HTTPS如何工作</p><p>5.<a href="https://httpstatuses.com/">HTTP状态代码</a>     HTTP状态代码目录，其中包含定义，详细信息和有用的代码参考</p><h4 id="HTML和CSS"><a href="#HTML和CSS" class="headerlink" title="HTML和CSS"></a>HTML和CSS</h4><p>1.<a href="https://www.freecodecamp.org/learn">freeCodeCamp</a>    学习Web开发的免费课程</p><p>2.<a href="https://www.internetingishard.com/">Interneting Is Hard</a>     面向完整初学者的友好的Web开发教程</p><p>3.<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element">HTML Elements</a>     由MDN引用的HTML元素</p><p>4.<a href="https://css-tricks.com/snippets/html/glyphs/">HTML Entity</a>      CSS技巧的HTML实体参考</p><p>5.<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Referencehttps://developer.mozilla.org/en-US/docs/Web/CSS/Reference">CSS3属性</a>      MDN引用的CSS</p><p>6.<a href="https://cssreference.io/">CSS参考</a>      CSS的免费视觉指南</p><p>7.<a href="https://flexboxfroggy.com/">Flexbox Froggy</a>      一款可帮助您学习CSS Flex的游戏</p><p>8.<a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS技巧</a>     Flexbox  -Flexbox完整指南</p><p>9.<a href="https://cssgridgarden.com/">网格花园</a>     一个学习CSS网格的游戏</p><p>10.<a href="https://css-tricks.com/snippets/css/complete-guide-grid/">CSS TRICKS - A Complete Guide to Grid</a>     CSS网格的全面指南，着重于网格父容器和网格子元素的所有设置</p><p>11.<a href="https://learncssgrid.com/">学习CSS网格</a>      Jonathan Suh撰写的综合指南，可帮助了解和学习CSS网格布局</p><p>12.<a href="https://caniuse.com/">Can I Use</a>      最新的浏览器支持表，以支持台式机和移动Web浏览器上的前端Web技术。</p><p>13.<a href="https://emilkowalski.github.io/css-effects-snippets/">CSS Effects</a>     CSS动画</p><p>14.<a href="https://keyframes.app/">Keyframes</a>      使用可视时间轴编辑器创建基本或复杂的CSS</p><p>15.<a href="https://animista.net/">Animista</a>     CSS动画的集合</p><p>16.<a href="https://9elements.com/bem-cheat-sheet">BEM</a>     BEM命名备忘单</p><p>17.<a href="https://autoprefixer.github.io/">Autoprefixer</a>     一个PostCSS插件，可解析您的CSS并添加供应商前缀</p><p>18.<a href="https://www.cleancss.com/css-beautify/">CSS Formatter</a>    在线CSS Formatter，CSS Beautifier</p><p>19.<a href="https://placeholder.com/">Placeholder</a>     如何使用我们的占位符。只需在我们的URL后指定图像大小，将获得一个占位符图像</p><h4 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h4><p>1.<a href="https://www.freecodecamp.org/learn">freeCodeCamp</a>     最好的免费资源，用于以交互方式学习JavaScript</p><p>2.<a href="https://www.codecademy.com/learn/introduction-to-javascript">Codecademy</a>    免费课程，以交互方式学习JavaScript</p><p>3.<a href="https://javascript.info/">JavaScript.info</a>      现代JavaScript教程</p><p>4.<a href="https://eloquentjavascript.net/">Eloquent JavaScript</a>    这是一本有关JavaScript，编程和数字奇迹的书。您可以在此处在线阅读</p><p>5.J<a href="https://javascript30.com/">avaScript30</a>    30天香草JS编码挑战。在30天内使用30个教程构建30件事</p><p>6.<a href="https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5">JavaScript的工作方式</a>  </p><p>7.<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference">MDN的JavaScript参考</a></p><p>8.<a href="https://developer.mozilla.org/en-US/docs/Web/Events">JavaScript事件参考</a></p><p>9.<a href="http://youmightnotneedjquery.com/">DOM操作参考</a></p><p>10.<a href="https://addyosmani.com/resources/essentialjsdesignpatterns/book/">JavaScript设计模式</a></p><p>11.<a href="https://javascript.info/">JavaScript资讯</a>     现代JavaScript教程</p><h4 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h4><p>1.<a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9jsz4LDYc6kv3ymONOKxwBU">Node.js教程</a>     Net Ninja编写的Node.js速成课程教程</p><p>2.<a href="https://github.com/goldbergyoni/nodebestpractices">最佳实践</a>     大量的构建节点应用程序的最佳实践。对于大型项目很重要。</p><p>3.<a href="http://thenodeway.io/">The Node Way</a>     Node.js最佳实践的完整哲学和指导原则，用于编写可维护的模块，可伸缩的应用程序和易于阅读的代码</p><p>4.<a href="https://github.com/sindresorhus/awesome-nodejs">Awesome Nodejs</a>    令人愉快的Node.js软件包和资源</p><p>5.<a href="https://www.freecodecamp.org/news/express-js-security-tips/">Express.js安全提示</a>      如何保存和保护应用程序</p><p>6.<a href="https://github.com/azat-co/you-dont-know-node">你不知道Node.js</a></p><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p>1.<a href="https://www.codecademy.com/learn/learn-python">Codecademy</a>    免费课程，以交互方式学习Python</p><p>2.<a href="https://www.programiz.com/python-programming">Programiz</a>     学习Python编程</p><p>3.<a href="https://github.com/vinta/awesome-python">Awesome Python</a>     精选的Python框架，库，软件和资源的精选清单</p><p>4.<a href="https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world">Flask教程</a>      Miguel Grinberg编写的Flask Mega-Tutorial</p><p>5.<a href="https://realpython.com/">Real Python</a>     在线学习Python：面向所有技能水平的开发人员的Python教程，Python书籍和课程，Python新闻，代码示例，文章等</p><h4 id="APIS"><a href="#APIS" class="headerlink" title="APIS"></a>APIS</h4><p>1.<a href="https://public-apis.io/">公共API</a>     面向开发人员的1000多种免费的公共和开放REST API的汇总列表</p><p>2.<a href="https://jsonplaceholder.typicode.com/">JSONPlaceholder</a>    免费使用伪造的在线REST API进行测试和原型制作</p><p>3.<a href="https://openweathermap.org/guide">OpenWeather</a>    来自OpenWeatherMap的简单，快速，免费的天气API，您可以访问当前的天气数据，每小时，5天和16天的天气预报</p><p>4.<a href="https://swapi.dev/">SWAPI</a>     星际大战API</p><p>5.<a href="http://quotes.rest/">Quotes REST API</a>    这是世界上最大的此类数据库。Quotes API提供了一种简单的方法来访问数据</p><h3 id="开发者工具"><a href="#开发者工具" class="headerlink" title="开发者工具"></a>开发者工具</h3><p>1.<a href="https://www.postman.com/">Postman</a>      使API开发变得容易。简化构建API的每个步骤并简化协作，以便您可以更快地创建更好的API</p><p>2.<a href="https://insomnia.rest/">Insomnia</a>      领先的开源API客户端，以及用于GraphQL和REST的协作API设计平台</p><p>3.<a href="https://github.com/typicode/json-server">JSON Server</a>       在不到30秒的时间内（严重）获得具有零编码的完全伪造的REST API。供需要快速后端进行原型制作和模拟的前端开发人员使用。</p><p>4.<a href="https://www.npmtrends.com/">npm trends</a>      您应该使用哪个NPM软件包？比较一段时间内的NPM软件包下载统计信息。找出趋势，选出赢家</p><p>5.<a href="https://bundlephobia.com/">BUNDLEPHOBIA</a>    查找将npm软件包添加到软件包中的成本</p><p>6.<a href="https://www.figma.com/">Figma</a>     Figma帮助团队从头到尾创建，测试和交付更好的设计</p><p>7.<a href="https://www.adobe.com/products/xd.html">Adobe XD</a>    通过外观和感觉像真实事物的设计分享您的故事。线框，动画，原型，协作等等—一切都在这里，一站式完成。</p><p>8.<a href="https://www.sketch.com/">Sketch</a>     使用超过100万人使用的设计平台，从自由职业者到全球最大的团队，创建，制作原型，进行协作并将您的想法变为现实</p><p>9.<a href="https://whimsical.com/">Whimsical</a>     以思想的速度进行视觉交流–协作流程图，线框，便签和思维导图。</p><p>10.<a href="https://resumegenius.com/">ResumeGenius</a>      唯一可以吸引您面试的在线简历构建器。在几分钟之内创建一份专业的简历，下载并打印</p><p>11.<a href="https://resume.io/">resume.io</a>      免费的在线简历制作工具，可让您在数分钟内创建完美的简历</p><p>12.<a href="https://www.resume-now.com/resume/builder">Resume Now</a>      只需要几分钟,在线简历制作者应该花很长时间使用,我们免费的简历制作者不需要</p><p>13.<a href="https://www.canva.com/create/resumes/">Canva</a>     使用Canva的免费简历生成器，可以轻松快捷地申请理想的工作。从数百种免费中选择</p><p>14.<a href="https://novoresume.com/">novoresume</a>      在2020年制作完美的简历，并使用免费的简历生成器获得理想的工作。选择一个模板。个性化它</p><p>15.<a href="https://rx-resume.web.app/">RX-Resume</a>      轻松建立您的简历</p><p>16.<a href="https://mailsac.com/">mailsac</a>    一次性测试电子邮件收件箱服务</p><p>17.<a href="https://tiny-helpers.dev/">Tiny Helpers</a>     面向Web开发人员的免费的单用途在线工具集合</p><p>18.<a href="https://free-for.dev/#/">Free for Developers</a>     这是为开发人员提供免费套餐的软件和其他产品的列表</p><h3 id="在线学习资源"><a href="#在线学习资源" class="headerlink" title="在线学习资源"></a>在线学习资源</h3><p>1.<a href="https://www.w3schools.com/">w3schools</a>      世界上最大的Web开发人员网站。教程参考，示例，实践，证书</p><p>2.<a href="https://www.codecademy.com/">Codecademy</a>      学习所需工作所需的技术技能。作为在线教育和学习编码的领导者</p><p>3.<a href="https://www.studytonight.com/">Study Tonight</a>      学习-通过手写的简单教程，测试和视频教程学习诸如Java，C ++，DBMS，数据结构等工程主题的最佳场所</p><p>4.<a href="https://www.programiz.com/">Programiz</a>      通过我们易于遵循的教程，示例，在线编译器和参考资料，学习使用Python，C / C ++，Java和其他流行的编程语言进行编码</p><p>5.<a href="https://dev.to/iamismile/command-line-tutorial-58km">命令行教程</a>      UNIX基本命令教程</p><p>6.<a href="https://try.github.io/">Try Git</a>      一系列互动的挑战，以学习和尝试Git。恢复</p><p>7.<a href="https://devresourc.es/">Dev Resources</a>     开发资源可为您的开发者之旅提供一切，所有内容均列在精选列表中</p><h3 id="开发者站点"><a href="#开发者站点" class="headerlink" title="开发者站点"></a>开发者站点</h3><p>1.<a href="https://dev.to/">DEV</a>    一个建设性和包容性的社交网络。开源且完全透明</p><p>2.<a href="https://medium.com/">Medium</a>     媒介是一个开放的平台，读者可以在其中找到动态思维，专家和未被发现的声音可以在任何主题上分享他们的作品</p><p>3.<a href="https://github.com/iamismile/web-dev-resources/blob/main/news.ycombinator.com">Hacker News</a>     从Hacker News获取最新信息</p><p>4.<a href="https://hackernoon.com/">Hacker Noon</a>     Hacker Noon用真实的技术专家撰写的不受束缚的故事和观点反映了技术行业</p><p>5.<a href="https://www.smashingmagazine.com/">Smashing Magazine</a>      适用于Web设计师和开发人员</p><p>6.<a href="https://hashnode.com/">Hashnode</a>    一个免费的内容创建平台和社区，允许您在自己的域上发布文章</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;p&gt;以上资源整理自&lt;a href=&quot;https://t.me/tieliu&quot;&gt;黑洞资源笔记&lt;/a&gt;，此外，本篇中英文资源数量较多。&lt;/p&gt;
&lt;h3 id=&quot;生成器&quot;&gt;&lt;a href=&quot;#生成器&quot; class=&quot;headerlink&quot; title=&quot;生成器&quot;&gt;&lt;/a&gt;生成器&lt;/h3&gt;&lt;p&gt;1.&lt;a href=&quot;https://loremipsum.io/&quot;&gt;Lorem Ipsum&lt;/a&gt;    Lorem Ipsum发生器&lt;/p&gt;
&lt;p&gt;2.&lt;a href=&quot;https://realfavicongenerator.net/&quot;&gt;RealFaviconGenerator&lt;/a&gt;     图标生成器&lt;/p&gt;
&lt;p&gt;3.&lt;a href=&quot;https://formito.com/tools/favicon&quot;&gt;Favicon Maker&lt;/a&gt;    免费的Favicon制造商&lt;/p&gt;
&lt;p&gt;4.&lt;a href=&quot;https://metatags.io/&quot;&gt;Meta Tags&lt;/a&gt;     元标记生成器，预览您的网页在Google，Facebook，Twitter等上的外观&lt;/p&gt;
&lt;p&gt;5.&lt;a href=&quot;https://bennettfeely.com/clippy/&quot;&gt;Clippy&lt;/a&gt;     CSS剪切路径生成器&lt;/p&gt;
&lt;p&gt;6.&lt;a href=&quot;https://regex101.com/&quot;&gt;Regex101&lt;/a&gt;    在线正则表达式测试器&lt;/p&gt;
&lt;p&gt;7.&lt;a href=&quot;https://webcode.tools/&quot;&gt;Web代码工具&lt;/a&gt;     生成HTML5，CSS3，微数据，JSON-LD，Twitter卡，Open Graph等&lt;/p&gt;
&lt;p&gt;8.&lt;a href=&quot;https://carbon.now.sh/&quot;&gt;Carbon&lt;/a&gt;     创建并共享您来源的精美图像&lt;/p&gt;
&lt;p&gt;9.&lt;a href=&quot;https://grid.layoutit.com/&quot;&gt;CSS网格生成器&lt;/a&gt;    快速设计网页布局，并获取HTML和CSS代码。直观地学习CSS Grid，并使用我们的交互式CSS Grid Generator构建Web布局&lt;/p&gt;</summary>
    
    
    
    <category term="分享" scheme="https://example.github.io/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="开发资源" scheme="https://example.github.io/tags/%E5%BC%80%E5%8F%91%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>如何使用hugo+github pages搭建一个个人博客</title>
    <link href="https://example.github.io/posts/975b52b0.html"/>
    <id>https://example.github.io/posts/975b52b0.html</id>
    <published>2021-07-16T03:23:44.000Z</published>
    <updated>2021-07-21T03:28:25.290Z</updated>
    
    <content type="html"><![CDATA[<p>除了可以使用hexo来搭建个人博客之外，我们还可以使用hugo博客框架来搭建自己的个人博客。hugo和hexo相比搭建过程更加的简单快捷，需要的依赖较少，搭建过程不容易出错，对于新手来说更加的友好一些。所以如果你还没能成功搭建起hexo博客的话，那么不妨试试hugo+github pages搭建。</p><span id="more"></span><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>hugo是一个基于GO语言开发的博客框架，相比于hexo来说hugo的生成静态资源网页的速度更快。支持Markdown语法，也有较多的主题可以选择，搭建个人博客不失为一个好的选择。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>其实hugo的搭建不需要借助过多的工具，仅仅需要你的电脑上有一个Git环境（工具），一个GitHub账号。嫌弃麻烦的话可以直接下载使用cmder或者是Git Bash，如果你也是使用的Windows Terminal的话，那么可以参考我之前的<a href="https://aegisprogram.github.io/posts/f5bc5ed5.html#more">Windows Terminal配置</a>中关于将Git Bash集成到Windows Terminal上的博客。下面的操作我将在Windows Terminal上进行。前面说到的其他工具也可以，命令没有什么差别。</p><h3 id="下载hugo"><a href="#下载hugo" class="headerlink" title="下载hugo"></a>下载hugo</h3><p>第一次搭建我建议下载二进制文件，而不是其他命令行方式下载，这样做是为了减少出错的概率。先去GitHub下载<a href="https://github.com/gohugoio/hugo/tags">hugo</a>，根据自己的系统下载对应的二进制文件即可。这里需要注意的是，hugo和hugo_extended是有些区别的，部分主题会指定使用hugo_extended。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/hugo.5t5uqj8xpdc0.png" alt="image"></p><p>所以你在使用主题的时候，或者说你在下载版本的时候要考虑清楚。在电脑上新建一个文件夹，之后在里面再新建一个bin文件夹，然后将下载的二进制文件解压过去，保证bin下载只有hugo的二进制文件，没有再往下的目录，即<code>D:\hugo\bin\hugo.exe</code>这样的方式。然后在系统环境变量中找到path将二进制文件的路径添加进去。在终端输入<code>hugo version</code>，如果显示版本号则表示环境变量配置正确，否则就要进行检查。</p><h3 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h3><p>我们进入hugo的文件夹中执行<code>hugo new site blog</code>建立站点文件夹（blog只是一个例子，你可以随意取什么名字），进入blog文件夹中我们会发现里面内容如下：</p><blockquote><p>archetypes:配置文章元数据</p><p>content:博客文章所在目录</p><p>data:用来存放数据文件，一般是json文件</p><p>layouts:网站布局</p><p>static:一些静态的内容，例如图片等</p><p>themes:博客主题</p><p>config.yml:站点配置文件,支持yml.toml和json三种格式的</p></blockquote><h3 id="下载配置主题"><a href="#下载配置主题" class="headerlink" title="下载配置主题"></a>下载配置主题</h3><p>这时候我们先去选择一个自己喜欢的主题然后将其克隆下来，我以PaperMod为例。</p><p>我们找到主题仓库，然后在blog下执行</p><p><code>git clone https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod</code></p><p>这个时候我们就会看到themes下面多了一个叫做PaperMod的文件夹，里面存放的就是主题资源。</p><p>这里需要注意的是：不同的主题之前的配置方式是不同的，甚至会对hugo的版本有限制，所以配置主题的时候一定要仔细查阅主题文档。有些主题下面有一个exampleSite文件夹，那么你主要找到下面的config文件，然后复制到blog下面，将原本的config文件替换掉。之后你再对config文件进行自己的配置。</p><p>还有一种主题，例如我这里使用的PaperMod下面就没有exampleSite，所以就需要自己在官方文档中找到示例的配置然后复制到blog下的config中。特别要说明的是必须要在theme中指明主题名称，否则hugo会找不到该主题模块。</p><p>如果没能克隆到主题，那么你需要先执行一次<code>git init</code>。</p><h3 id="部署到GitHub-Pages"><a href="#部署到GitHub-Pages" class="headerlink" title="部署到GitHub Pages"></a>部署到GitHub Pages</h3><p>在GitHub上新建一个仓库，命名方式为<code>你的GitHub用户名+github.io</code>,勾选第一个添加README文件，点击创建。</p><p>我们完成上述的配置之后，我们接下来在blog下执行<code>hugo</code>,这个时候我们会看到blog中多了一个public文件夹。我们先在blog下执行<code>hugo new post/first.md</code>生成一个Markdown文件，vi进去之后我们先输入hello world然后保存退出。我们接着输入<code>hugo -t 主题名</code>生成静态资源文件，输入<code>hugo server -D</code>先在本地预览一下效果，没有问题之后我们进入public文件夹，依次执行以下命令:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git init(初始化git)</span><br><span class="line">git add . (添加静态文件到缓存区)</span><br><span class="line">git branch -M master (新建一个master分支)</span><br><span class="line">git commit -m &#x27;initial commit&#x27;(提交说明随便写)</span><br><span class="line">git remote add origin git@github.com:username/username.github.io.git</span><br><span class="line">(这是ssh提交方法， 需要生成Token搭配GitHub Actions自动发布）。</span><br><span class="line">git remote add origin https://github.com/ilemonEllen/ilemonEllen.github.io.git</span><br><span class="line">(这是采用https方法提交，通过本地的public连接远程仓库提交).二者任选其一就可以。</span><br><span class="line">git push -u origin master (提交到master上)</span><br></pre></td></tr></table></figure><p>然后我们去仓库中点击<code>setting-----pages----GitHub Pages</code>下将发布分支改为master.等待一会儿，不出意外的话很快就能看到你的博客了。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/hugo/hugo2.hm80koga1o0.png" alt="image"></p><h3 id="注意问题"><a href="#注意问题" class="headerlink" title="注意问题"></a>注意问题</h3><p>1.如果你的博客已经成功提交但是没有显示内容</p><p>只需要将文章元数据的draft的true改为false，然后提交就可以了。</p><p>2.git 提交上去的是blog下的文件夹，但是GitHub Pages显示404</p><p>提交博客都是在public文件夹中提交的，在提交之前要也特别注意要先执行<code>hugo -t 主题名</code>操作，生成静态资源文件。在public中提交时，要执行<code>git init</code>，不然会出现无法提交或者是只提交上去一个public文件夹。</p><p>3.remote  origin already exists怎么解决</p><p>这是因为你之前于该分支的关联没有解除，所以你需要执行<code>git remote rm origin</code>，然后再与远程仓库分支建立连接。</p><p>4.出现LF will be replaced by CRLF警告</p><p>出现这个现象的原因是在Windows中使用CRLF标识一行的结束，而在Linux/UNIX系统中只使用LF标识一行的结束，其实这对于博客部署来说没有什么影响。如果要去掉的话我们只需要执行以下命令：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">查看core.autocrlf属性</span><br><span class="line">git config --global --get core.autocrlf</span><br><span class="line">git config --get core.autocrlf</span><br><span class="line">true</span><br><span class="line">设置core.autocrlf属性</span><br><span class="line">git config core.autocrlf false</span><br><span class="line">git config --get core.autocrlf</span><br><span class="line">false</span><br></pre></td></tr></table></figure><p>到此hugo+github pages的搭建就结束了。至于使用自动脚本+GitHub Actions 自动发布网上的教程有很多，我就不在这里赘述了。</p><h3 id="常用的命令"><a href="#常用的命令" class="headerlink" title="常用的命令"></a>常用的命令</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hugo -t + 主题名 本地生成静态资源</span><br><span class="line">hugo server -D 本地预览</span><br><span class="line">hugo new post/xxx.md  新建博客文章</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;提交说明&quot;</span><br><span class="line">git push</span><br><span class="line">git remote -v 查看分支连接</span><br><span class="line">git branch -a 查看远程分支</span><br><span class="line">git push origin --delete <span class="xml"><span class="tag">&lt;<span class="name">branchName</span>&gt;</span></span> 删除远程分支</span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>1.<a href="https://blog.csdn.net/taiyangdao/article/details/78629107">Git中的“LF will be replaced by CRLF”警告详解</a></p><p>2.<a href="https://adityatelange.github.io/hugo-PaperMod/">PaperMod</a></p><p>3.<a href="https://zhuanlan.zhihu.com/p/350977057">Hugo的基本安装｜网站生成｜托管至Github Pages</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;除了可以使用hexo来搭建个人博客之外，我们还可以使用hugo博客框架来搭建自己的个人博客。hugo和hexo相比搭建过程更加的简单快捷，需要的依赖较少，搭建过程不容易出错，对于新手来说更加的友好一些。所以如果你还没能成功搭建起hexo博客的话，那么不妨试试hugo+github pages搭建。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://example.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="教程" scheme="https://example.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="hugo" scheme="https://example.github.io/tags/hugo/"/>
    
  </entry>
  
  <entry>
    <title>关于telegram那些不得不说的事儿</title>
    <link href="https://example.github.io/posts/43320da.html"/>
    <id>https://example.github.io/posts/43320da.html</id>
    <published>2021-07-10T12:22:19.000Z</published>
    <updated>2021-07-11T10:35:11.185Z</updated>
    
    <content type="html"><![CDATA[<p>Telegram已经成为我打开次数最多的APP了，新闻资讯，娱乐搞怪，学习交流，聊天水群。可以说一个telegram就能替代我手机上面很多的应用了。但是软件本身在中国大陆是无法使用的，所以需要具备突破GFW封锁的能力。正是由于这个限制，所以身边很多的亲戚还是使用着微信（微信有多烂我已经不想吐槽了）。但是我还是打算写下一些telegram的使用技巧和简单介绍，以便将来自己身边的人有机会接触到telegram的时候能够快速入门了解。</p><span id="more"></span><h3 id="Telegram的介绍"><a href="#Telegram的介绍" class="headerlink" title="Telegram的介绍"></a>Telegram的介绍</h3><p>先对telegram进行简单的介绍，因为这个软件真的很有“故事”也很有“个性”。</p><h4 id="诞生"><a href="#诞生" class="headerlink" title="诞生"></a>诞生</h4><p>Telegram在2013年由杜罗夫兄弟（Nikolai·Durov与Pavel·Durov）正式发布。杜罗夫兄弟同时也是俄罗斯最大的社交网络服务<a href="https://zh.wikipedia.org/wiki/VKontakte">VKontakte</a>的创始者。Telegram Messenger LLP是独立的非营利公司，设立在柏林（这只是对外的说法，公司总部在哪儿没有人知道），并且承诺与VKontakte毫无关系。Nikolai为这个工具设计了加密协议和架构，同时Pavel的数字堡垒公司提供资金与基础设施，这就是Telegram，除此之外，telegram将保持公司独立运营，不受其他任何第三方势力的影响。所以，Telegram是为了隐私和安全而生的，和一些工程和产品团队开发的通讯工具不一样，它是真正由数学家主导的项目，坚实可靠，由于采用基于 256 位对称 AES 加密、2048 位 RSA 加密和 Diffie– Hellman 安全密钥交换，因此官方承诺任何人声称自己可以拦截破译telegram消息的可以获取30万美元的奖励。</p><p>关于Pavel Durov的个人传奇经历，可以在哔哩哔哩上观看这个视频——<a href="https://www.bilibili.com/video/BV1Ct4y1z7qy?share_source=copy_web">街头撒币，硬刚总统，Telegram创始人的传奇故事【差评君】</a>，不得不说他是一个很有个性和想法的计算机天才和企业家。telegram这款软件也有着他个人十分鲜明的个性和特点在上面。</p><h4 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h4><p>1.提供一种适用于地球上任何地方的安全通信方式。</p><p>2.保护用户的私人对话免受窥探（如官员，雇主的伤害），保护用户的个人数据免受第三方（如营销人员，广告商的伤害）。</p><p>3.不对telegram上的内容进行审查，尊重用户的隐私和自由。</p><p>4.不接受任何广告商，任何政府机构的介入，也不接受其他公司的投资，只接受捐赠，盈利不是telegram的目标，保持公司的独立运营并且忠于自己的信仰。</p><p>5.不会使用用户数据来展示广告，只存储telegram需要作为安全且功能丰富的消息服务所需的数据。</p><p>6.用户的个人数据只属于自己，用户可以随时拿回自己的数据或者一键永久删除账户。</p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>telegram官方网站：<a href="https://telegram.org/">https://telegram.org/</a></p><p>官方网站可以找到所有客户端的下载入口，下载客户端请前往官方网站。</p><p>PC客户端下载也可以前往<a href="https://github.com/telegramdesktop/tdesktop/tags">GitHub</a>（但是GitHub没有Android的APK文件）</p><h4 id="web端入口"><a href="#web端入口" class="headerlink" title="web端入口"></a>web端入口</h4><p><a href="https://webk.telegram.org/">webk</a>:界面美观，功能较为齐全，动画流畅，字体偏小偏粗。</p><p><a href="https://webz.telegram.org/">webz</a>:功能性上和webK差不多，字体较大。</p><p><a href="https://web.telegram.org/">原生web</a>:功能性上缺失较多，不推荐使用。</p><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>官方网站需要突破GFW的封锁才能访问，但是GitHub一般可以正常访问。我个人极为不推荐使用第三方客户端，特别是因为汉化问题，很多人转向各种各样的第三方。这里再次说明，telegram不会向用户收取任何的费用，软件本身也不会有任何的广告，但凡是不符合条件的第三方都应该统统舍弃。这些承诺都在他们的用户条款里面白纸黑字的写着——<a href="https://telegram.org/privacy">telegram privacy</a></p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>telegram作为一款极为优秀的IM软件，本身有很多的过人之处，稍微列举几项。</p><p>1.软件本身免费开源，且没有任何广告;跨平台应用，用户可以在Android,IOS,Windows,MacOS,Linux，还有web端使用他，基本支持现在所有的操作系统平台。</p><p>2.软件里面的任何内容都将不会被审查，你有极大的自由言论空间。（所以上面也就成了一些罪犯的滋生的地方，比如著名的韩国N号房事件就是发生在上面）。</p><p>（2018年8月，Telegram修改隐私政策，如果执法调查单位能够证明特定用户的身份为恐怖分子，将配合法院要求提供该用户的IP、电话号码等资料。）</p><p>3.秘密聊天的内容全部都是以直接的<a href="https://zh.wikipedia.org/wiki/%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86">端到端加密</a>来传输。这代表只有你与秘密聊天的对方，才能读取到这些聊天消息 － 没有任何其他人可以破解它们，包含Telegram团队本身。</p><p>4.发出的消息支持无限期撤回，私密聊天支持自动删除聊天记录（GitHub有telegram desktop防撤回插件，但是Telegram Desktop 桌面版 v2.8.5 更新限制插件使用。）</p><p>5.聊天历史无缝同步到所有设备上，所有的聊天记录都保存在云端，不必保存在本地，用户也可以选择随时删除远端数据，导出数据以及直接一键永久删除账户。</p><p>6.拥有海量的表情贴纸，高清而富有趣味；支持自制表情包，并用 Emoji 调用。</p><p>7.有众多功能强大的机器人供用户管理群组和频道，也支持用户自建机器人。</p><p>8.文本输入支持Markdown语法，无限消息置顶，记忆聊天浏览记录，消息链接和外部链接内容预览，@消息的快速定位和快速回复指定消息。</p><p>9.telegram支持全局搜索聊天记录，群组和频道（中文检索稍微差一点儿，但是无关紧要）。</p><p>10.发出的消息是一个√，对方已经阅读的消息是两个√，给予用户清晰明确的反馈。</p><h3 id="注册使用"><a href="#注册使用" class="headerlink" title="注册使用"></a>注册使用</h3><p>telegram的下载方式前面已经说过了，去指定地址下载即可，接下来是注册使用telegram。由于遭到GFW的封锁，我们在注册账号的时候需要准备好翻墙的工具（请自行准备，不多阐述）。接下来以telegram desktop为例。</p><h4 id="SOCKS5代理注册"><a href="#SOCKS5代理注册" class="headerlink" title="SOCKS5代理注册"></a>SOCKS5代理注册</h4><p>打开翻墙工具之后，打开 Telegram Desktop 桌面版客户端的代理设置，新建代理，选择 SOCKS5，地址设置为 127.0.0.1 ，端口设置为 10808 。</p><p>如果代理显示connected，表示成功，可以开始注册及正常使用。  如果一直显示connecting，表明此代理可能有问题，请尝试更换其他代理。</p><h4 id="MTP代理注册"><a href="#MTP代理注册" class="headerlink" title="MTP代理注册"></a>MTP代理注册</h4><p>打开 Telegram Desktop 桌面客户端后，点击左下角转动的圆圈来配置代理。再点击 use custom proxy 来添加自定义代理。 选择 MRProto 代理方式，依次输入 Hostname（服务器地址）、Port（端口）和 Secret（密码），最后点击 Save 保存。 </p><p>如果代理显示connected，表示成功，可以开始注册及正常使用。  如果一直显示connecting，表明此代理可能有问题，请尝试更换其他代理。</p><p>更多的客户端注册使用方法请前往——<a href="https://www.notion.so/Telegram-95a6c23f0bb1466892b55f9ec8c755fd">telegram教程全指南</a></p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>1.telegram必须用电话号码才能注册，但是大陆用户我建议使用<a href="https://zh.wikipedia.org/wiki/Google_Voice">google voice</a>来注册telegram。原因不过以下两个方面：</p><ul><li>86号码不能主动私聊他人（这都“归功”于数字货币圈曾经大量发送spam还有疯狂拉人进群，最终导致 Telegram 官方开始限制中国大陆+86手机号的私聊功能。）如果要解除私聊就要去寻找Spam Info Bot。</li><li>中国手机号码是实名制而google voice是一个虚拟号码，与用户本身没有过多的信息连结，有利于进一步保护自己的隐私安全。google voice更多的介绍和使用方法请前往——<a href="https://www.newlearner.site/2019/06/15/google-voice.html">Google Voice简介及使用&amp;保号</a></li></ul><p>2.telegram虽说是一个较为安全的IM软件，但是我们还是需要对其中的一些方面进行设置（以下是telegram desktop设置方法，其他客户端设置方法大同小异，如果不清楚的话就参考上面的telegram教程全指南。</p><ul><li>在设置-隐私和安全中把电话号码进行隐藏，任何人拉你进群聊和频道选项关闭，隐藏自己的上线时间，阻止通过转发消息寻人，启用两步验证，创建一个云端密码，降低被盗号的风险。</li><li>在设置-隐私和安全中，将删除账户的时间改为一年。（telegram会将指定时间内没有一次上线的账户进行销毁，默认时长是6个月）。</li><li>在设置-高级-自动下载媒体文件中找到私聊会话，群组，频道，禁止自动下载私聊会话，群组，频道中的文件。（起码要禁止自动下载私聊会话的文件，因为telegram存在专门针对86号码进行发送病毒文件的机器人账号）。</li><li>最好设置一个用户名，这样别人可以在不知道你电话号码的情况下通过用户名找你。</li></ul><p>3.若用户在 24 小时内访问超过 200 个群组或频道的链接（点击打开就算访问，不需要加入），就会被禁止访问24 小时。禁闭期间，无法通过链接访问新的群组或频道（点击链接一直转圈而无法访问）。</p><p>4.telegram只有私密会话才是端对端加密的（在群聊中和普通的私聊中是不加密的），所以请在群聊和私聊中保护好自己的个人隐私，特别是你发送的照片中包含了大量的元数据，别有用心的人可以通过<a href="https://zh.wikipedia.org/zh-cn/Exif">EXIF</a>编辑工具来轻易找到您的位置。</p><ul><li><p>要在iPhone上启动秘密聊天，请点击“聊天”标签右上角的新消息图标，然后选择“新建秘密聊天”。 选择您要与其发起秘密聊天的联系人，然后在下一个屏幕上，它将显示您已邀请他们加入。 请注意，他们需要在您的联系人列表中才能与他们进行秘密聊天。</p></li><li><p>要在Android手机上启动秘密聊天，有两种方法可以解决。  对于第一种方法（下面是左侧的GIF），请点击三行的侧边栏菜单图标，然后点击“新建秘密聊天”，然后点击联系人姓名。  对于第二种方式（下面的GIF右边），点击“聊天”屏幕右下角的新消息图标，选择“新秘密聊天”，然后选择联系人的姓名。</p><p>无论哪种方式，在下一个屏幕上，它将显示您已邀请他们加入。 请注意，他们需要在您的联系人列表中才能与他们进行秘密聊天。</p></li></ul><p>关于更多加密聊天的消息可以参考——<a href="https://bynss.com/apps/405706.html">Telegram怎样开启端到端加密（E2EE）</a></p><p>5.虽然说官方不会审查telegram中任何群组和频道的任何内容，但是你一旦被他人多次举报，账户就会受到使用限制，直至封号处理。所以，请不要随意私聊他人和发送垃圾消息。</p><p>6.telegram支持传输单个最大文件为2GB，下载和传输的速度取决于你的本地网络状况（或者说你的翻墙工具）。</p><p>7.telegram上每一个用户最多可以创建10个公开的频道或者群组，最多申请创建20个机器人，一个账号可以加入的频道和超级群组数量：包括你拥有的频道和群组在内，一共可以加入最多500个。</p><p>8.telegram无法避免别人私聊你，所以如果你不想理他的话，直接点击右上角的举报+拉黑。此外，telegram也没有添加好友这一说法，因为任何人都可以私聊你。</p><p>最近6月份的telegram更新，官方增加更多的限制说明，以便于用户了解，可以参考——<a href="https://t.me/TGgeek/868">已知的telegram限制</a>，或者参考<a href="https://limits.tginfo.me/en">telegram info</a></p><h3 id="telegram的功能详细介绍"><a href="#telegram的功能详细介绍" class="headerlink" title="telegram的功能详细介绍"></a>telegram的功能详细介绍</h3><p>telegram的功能十分丰富，等你真正接触体验一段时间的telegram之后就会发现自己已经情不自禁的爱上他。而且有人已经为此做过详细的讲解和功能介绍了，我就不再赘述。若有兴趣的话我推荐前往</p><p>1.<a href="https://www.notion.so/Telegram-95a6c23f0bb1466892b55f9ec8c755fd">Telegram 教程全指南</a></p><p>2.<a href="https://tingtalk.me/telegram">Telegram（电报）：新手指南、使用教程及频道推荐</a></p><p>3.<a href="https://congcong0806.github.io/">聪聪Blog</a></p><p>这三个博客和教程总结的都很详细，到位，值得认真阅读。</p><h3 id="频道推荐"><a href="#频道推荐" class="headerlink" title="频道推荐"></a>频道推荐</h3><p>我个人比较青睐于添加频道而不是群组，telegram上面有很多的优质内容的频道，在这里列举几个个人认为不错的。</p><p>1.<a href="https://t.me/durov">Durov’s Channel</a>  Pavel Durov（创始人）的官方频道</p><p>2.<a href="https://t.me/TGgeek">TGgeek</a>  发布 Telegram 教程、技巧、资讯、更新等信息。</p><p>3.<a href="https://t.me/iyouport">Iyouport</a>  自由港 新闻包和工具箱</p><p>4.<a href="https://t.me/zh_secretary">SE-索引公告板</a>  发现更多优质好频道</p><p>5.<a href="https://t.me/XiaoZhangDuBao">校长读报</a>  每天为你带来一篇精选的报刊内容和时事资讯</p><p>6.<a href="https://t.me/NewlearnerChannel">Newlearnerの自留地</a>  不定期推送IT资讯</p><p>7.<a href="https://t.me/bigcrowdev">乌鸦观察</a>  不定期推送新闻和杂谈</p><p>8.<a href="https://t.me/opencfdchannel">开源社区频道</a>  科技人文资讯</p><p>当然，要是你乐意的话，你可以在我的博客首页找到我的telegram频道并加入，我会为此感到很高兴的。</p><h3 id="机器人推荐"><a href="#机器人推荐" class="headerlink" title="机器人推荐"></a>机器人推荐</h3><p>不得不说，机器人在telegram中扮演的角色也是十分的重要，使用各种bot，可以让用户更加轻松的管理群组和频道，寻找资源和服务。但是注意的是，机器人分为内联机器人和第三方机器人。内联机器人就是你在任何的频道和群组中可以直接调用而无需添加进来，第三方机器人（也称为外联机器人）的使用需要添加到频道或者群组中才能实行调用。这里推荐几个个人觉得还不错的机器人。</p><p>1.<a href="https://t.me/discussbot">DiscussBot</a>  官方出的评论机器人, 可以在频道每条消息下面点击添加评论</p><p>2.<a href="https://t.me/VerifyBot">VerifyBot</a> 官方认证账号的机器人</p><p>3.<a href="https://t.me/SpamBot">SpamBot</a> 官方处理 spam 事务的机器人，例如解除86私聊限制</p><p>4.<a href="https://t.me/Stickers">Stickers</a> 使用此机器人创建贴纸并获取贴纸的使用统计数据.</p><p>5.<a href="https://t.me/keyword_reply_bot">这个我知道</a> 本机器人能够自动回复关键词对应的内容</p><p>6.<a href="https://t.me/GIFDownloader_bot">TG Downloader</a> GIF和贴纸下载</p><p>7.<a href="https://t.me/creationdatebot">Creation Date</a> 查询你的tg ID和注册时间</p><p>8.<a href="https://t.me/zlibrarybot">zlibrary</a> 搜书机器人</p><p>9.<a href="https://t.me/CorsaBot">InstantViewBot</a> 可以把文章都生成支持Instant View</p><p>10.<a href="https://t.me/CommentsBot">CommentsBot</a> 留言/评论机器人</p><p>11.<a href="https://t.me/storebot">storebot</a> 机器人商店,索引了各种机器人,可以寻找自己感兴趣的</p><p>12.@fanyi_bot  为全世界语言提供中英翻译。支持私聊、群组、行内请求。开源地址：<a href="https://github.com/reycn/fanyi_bot">https://github.com/reycn/fanyi_bot</a></p><p>现在telegram上机器人也是数不胜数，所以只能简单罗列几个，更多有趣好玩儿的机器人还等着你去发现和创造呢。</p><h3 id="telegraph神器"><a href="#telegraph神器" class="headerlink" title="telegraph神器"></a>telegraph神器</h3><p><strong>Telegraph</strong>是即时聊天软件Telegram的开发商推出的一个内容发布网站，它允许用户匿名发布文章。除此之外，telegraph还能帮助用户创建丰富的内容，同时集成照片以及各类可嵌入的流媒体内容。在输入文章标题和作者姓名之后，用户即可随意创作。我们发布文章之后，就能够获得这篇文章的独立网址。</p><h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4><p>访问和使用Telegraph不需要注册账号与下载软件，只需在网页浏览器中访问 <a href="https://telegra.ph/">https://telegra.ph/</a>  便可看到简约的界面，填入要发布的内容即可匿名发布，（支持Markdown语法和快速插入图片）。内容发布之后，只要清除浏览器的缓存，便无法再编辑文章。内容发布之后，不能追溯到文章作者和发布者。内容同样不会受到任何的审核和监视，给予用户最大的自由空间。</p><p>在telegram上我们只需要找到telegraph，然后用telegram登陆上去，就会看到你用该账号写过的所有的文章内容，而且你还可以在任何的群组和频道中调出你的文章，分享给其他人。所以如果你正在寻找一个自由，简单易用的写作的平台，那么telegraph是一个不错的选择，只需要掌握简单的Markdown语法就能驾驭它。</p><h3 id="滥用和指责"><a href="#滥用和指责" class="headerlink" title="滥用和指责"></a>滥用和指责</h3><p>Pavel Durov的初衷是打造一个自由的社交通讯软件，绕开政府和其他互联网公司的监视。但是正是因为telegram中高度的自由和隐秘，这里也就成了一些犯罪分子的“窝点”。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">2015年11月，由于伊斯兰国（ISIS）相关组织使用频繁，</span><br><span class="line">Telegram移除了近250个所使用广播频道，并屏蔽其所属账号并且持续每天移除近百频道</span><br><span class="line">强调不鼓励色情内容、侵犯著作权的内容存在。</span><br><span class="line">但用户举报的色情组群、频道仅会于iOS、macOS设备（App Store版）无法观看，</span><br><span class="line">官方并不会审查或下架相关频道。 </span><br><span class="line">2018年下半年至2020年3月间，韩国境内有人通过Telegram组建多个聊天室并收取费用，</span><br><span class="line">进行了有组织的、大规模的性虐待事件，即震惊韩国社会的N号房事件。 </span><br></pre></td></tr></table></figure><p>韩国N号房事件发生之后，2018年8月，Telegram修改隐私政策，如果执法调查单位能够证明特定用户的身份为恐怖分子，将配合法院要求提供该用户的IP、电话号码等资料。</p><p>正是因为telegram极度强调自由且不受监管，容易被犯罪分子利用来传播暴力，血腥内容，世界各地的媒体对telegram纷纷进行指责。一时之间，Pavel Durov成为了众矢之的。但是Pavel Durov还是坚持自己的做法，并且他认为：恐怖主义是社会问题，通过对技术的限制并不能解决社会问题。所以他和他的团队开始了<del>旅游式办公</del>(流亡生活)，走到哪儿，团队就带到哪儿。就算面临着外界的舆论压力，当地政府的干预，他还是忠于自己的信仰，他始终坚信言论自由，不受其他因素的干扰是我们当今社会的人们的一项基本权利。偏执，自信，崇尚自由，富有才华，极度自律，这些都是他身上的特质，正是因为他选择让telegram公司保持独立且自由，给予大众隐私和自由的承诺，人们也就逐渐相信这个男人的想法。不可否认的是，telegram的活跃用户还在稳步上升当中，或许有一天他能够成功的超越whatsapp，成为社交软件中的龙头。</p><h3 id="telegram和微信"><a href="#telegram和微信" class="headerlink" title="telegram和微信"></a>telegram和微信</h3><p>说实话，这两个东西压根不是一个层面上的。如果你使用过telegram，那么你就会很难再适应微信那种反人类的设计和操作。微信能有现在的活跃人数单纯是因为国内没有可替代的社交软件，QQ被打上小朋友的标签，钉钉办公人士使用较多，不然一般都不会接触，微博是一个娱乐饭圈平台，热搜全靠卖，其他的什么贴吧，豆瓣，小红书之类的就更别说了。</p><p>正是因为国内同时期没有可替代的产品，所以微信靠着早期QQ的引流逐渐庞大起来。这也就造成微信再社交领域的一家独大，也就越来越肆无忌惮的挑战用户的底线。发自内心的的说，我也建议我身边的人逃离微信去拥抱telegram，天下已经苦微信久矣。对于我来说微信最大的毛病主要有以下方面：</p><p>1.微信会审查所有用户的聊天内容和朋友圈信息，过滤相关信息（你以为你发出去的朋友圈其实只有你自己能看到，你以为发给对方的消息，其实也只有你自己才能看到），采取删帖和封禁用户账号的事情也就不在话下。</p><p>2.切断大部分的外部链接，形成资源信息壁垒。例如之前字节跳动就说微信封杀抖音的链接。</p><p>3.设计简陋，功能欠缺的同时臃肿不堪，专断独行，随意窃取用户的个人信息。（一次最多发9张照片，一次最大只能发送200MB文件，消息不能云端同步）。在腾讯微信软件许可及服务协议你还可以看到这么一条条款：</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E5%BE%AE%E4%BF%A1.3pbu9pfoy2i0.png" alt="image"></p><p>你只有账号的使用权，所以你觉得在微信面前我们还能有自己的隐私吗？在2021年2月3号，深圳市南山法院一审判决认定：微信好友关系不属于用户隐私。</p><p>关于微信其他令人发指的方面我就不一一列举了，有兴趣的可以看看<a href="https://github.com/TomBener/stay-away-from-wechat"> stay-away-from-wechat</a>，上面对于微信那些霸道的描述都比较清楚，当然这个作者可能本身有一些较为强烈的主观倾向，那么你可以看看这个——<a href="https://imzm.im/my-thoughts-on-wechat-ten-years/">微信十年的产品思考</a></p><p>总而言之，我个人对于telegram和微信之间的选择十分的清晰，后面不及前者的百分之一。何况，微信的这些情况，telegram上都不存在。我这么说也并非是指telegram是完美无缺的产品，它也有它自身的不足。我也列举几个方面：</p><p>1.telegram只有秘密私聊才会使用端对端加密，群组和频道内容则没有，且端对端加密需要用户手动开启而非自动开启。</p><p>2.只能通过手机号码进行注册，这对于一些手机号码必须实名的国家所在用户来说简直就是噩梦。这无法保障他们的隐私安全。</p><p>3.服务器是闭源的，虽然telegram软件本身是开源的，MTP也开源，但是服务器没有开源，我们对于telegram如何保存，使用我们的数据一无所知。我们只能选择相信Pavel Durov的为人。</p><p>4.我们无法限制别人私聊自己，同时软件本身对于中文搜索支持不友好。</p><p>没有什么完美的产品，但是telegram作为一家不以盈利为目的独立运营的公司却在用行动来展示他们很关注用户的使用体验。在产品的打磨和对待用户的态度上面，微信是完全比不过的。也许telegram不是最好的选择，最安全的聊天社交软件，但是它坚持做自己，拥抱用户。如果微信不知道如何尊重用户，那么自然很难获得用户的尊重。</p><p>在telegram和微信这个板块内容中我确实夹杂了更多的主观倾向，看到这篇帖子的你或许认同，或许不认同，不管你的态度是什么，我都希望你不要急于相信我或者是否决我的观点，不妨自己去感受一下，思考一下。微信的不足是客观事实，telegram的不足也是客观事实，在客观事实的基础上自己去探索答案才是一个最好的选择。</p><p>telegram的故事还在继续，它生于“乱世”（斯诺登曝光美国监控丑闻之后当下的我们急需要一个保障我们安全，隐私的社交工具），也终将不平凡。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/dimitri-karastelev-EhNLOlxlOXI-unsplash.qviu7t46c80.jpg" alt="image"></p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>1.<a href="https://congcong0806.github.io/">聪聪Blog</a></p><p>2.<a href="https://tingtalk.me/telegram">Telegram（电报）：新手指南、使用教程及频道推荐</a></p><p>3.<a href="https://www.notion.so/Telegram-95a6c23f0bb1466892b55f9ec8c755fd">Telegram 教程全指南</a></p><p>4.<a href="https://www.newlearner.site/2019/06/15/google-voice.html">Google Voice简介及使用&amp;保号</a></p><p>5.<a href="https://zh.wikipedia.org/wiki/Telegram">telegram维基百科</a></p><p>6.<a href="https://www.iyouport.org/%E5%BE%AE%E4%BF%A1-is-watching-you/">微信 Is Watching You</a></p><p>7.<a href="https://telegram.org/faq">Telegram FAQ</a></p><p>8.<a href="https://telegram.org/privacy">telegram privacy</a></p><p>9.<a href="https://weixin.qq.com/cgi-bin/readtemplate?lang=zh_CN&t=weixin_agreement&s=default">腾讯微信软件许可及服务协议</a></p><p>10.<a href="https://bynss.com/apps/405706.html">Telegram怎样开启端到端加密（E2EE）</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Telegram已经成为我打开次数最多的APP了，新闻资讯，娱乐搞怪，学习交流，聊天水群。可以说一个telegram就能替代我手机上面很多的应用了。但是软件本身在中国大陆是无法使用的，所以需要具备突破GFW封锁的能力。正是由于这个限制，所以身边很多的亲戚还是使用着微信（微信有多烂我已经不想吐槽了）。但是我还是打算写下一些telegram的使用技巧和简单介绍，以便将来自己身边的人有机会接触到telegram的时候能够快速入门了解。&lt;/p&gt;</summary>
    
    
    
    <category term="文字博客" scheme="https://example.github.io/categories/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="文字博客" scheme="https://example.github.io/tags/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="telegram" scheme="https://example.github.io/tags/telegram/"/>
    
  </entry>
  
  <entry>
    <title>alias命令使用以及apt源的更换</title>
    <link href="https://example.github.io/posts/93b9d9fa.html"/>
    <id>https://example.github.io/posts/93b9d9fa.html</id>
    <published>2021-07-08T11:27:25.000Z</published>
    <updated>2021-07-25T09:52:33.642Z</updated>
    
    <content type="html"><![CDATA[<p>对于过于冗长的Linux或者是git命令，我想要一个快速得出结果的过程，所以学会自定义alias就很必要了。</p><p>之前我自己在电脑上给Windows Terminal配置了Vim和Git Bash，相关的过程也就在<a href="https://aegisprogram.github.io/posts/f5bc5ed5.html#more">这里</a>了，这样我平时操作一些文件的时候更加“爽”，万一需要执行什么命令，我基本上可以用WindowsTerminal来取代<code>Windows powerShell</code>和<code>cmd</code>。为了进一步提升自己的使用体验，我决定对一些命令设置自定义的别名。</p><span id="more"></span><h3 id="alias命令"><a href="#alias命令" class="headerlink" title="alias命令"></a>alias命令</h3><h4 id="Git-Bash"><a href="#Git-Bash" class="headerlink" title="Git Bash"></a>Git Bash</h4><p>可以这样对于WindowsTerminal中的git bash 进行设置命令别名。</p><p> 临时别名</p><p>当不需要设置永久别名的时候，可以直接使用alias命令进行设置。例如：</p><p><code>alias gc=&quot;git commit&quot;</code></p><p>这样当我需要使用git commit命令时，我们就可以使用gc来代替它。不过，一旦关闭了终端，那么下次再重新登录的时候，该别名就失效了。所以这只是临时的。</p><p>永久别名</p><p>先在用户目录下(系统盘/User/用户名)看看有没有.bashrc文件，没有就新建一个。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim .bashrc</span><br><span class="line">编辑你想要设置的别名</span><br><span class="line">alias lsl=&quot;ls -lh&quot;</span><br><span class="line">alias lm=&quot;ls -lah&quot;</span><br><span class="line">保存退出</span><br><span class="line">然后 source ~/.bashrc，使其生效.</span><br></pre></td></tr></table></figure><p>如果单纯完成到这里的话，你可能当前能够使用别名，但是当关闭终端再打开之后就会发现命令未找到了，所以我们需要进一步的配置。</p><p>接着查看用户名下面有没有<code>.bash_profile</code>文件，如果没有就新建。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim .bash<span class="emphasis">_profile</span></span><br><span class="line"><span class="emphasis">在里面输入</span></span><br><span class="line"><span class="emphasis">source ~/.bashrc</span></span><br><span class="line"><span class="emphasis">保存退出</span></span><br><span class="line"><span class="emphasis">然后 source ~/.bash_</span>profile</span><br></pre></td></tr></table></figure><p>这样就算关闭终端之后再次启动我还是能够使用 我自己设置好的命令别名。</p><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>在Linux中的临时设置变量和上面的一样，主要是在Linux中设置永久的命令别名。永久设置别名只要按照如下操作即可：</p><p>1.cd/home/用户名，然后使用<code>ls -a</code>列出隐藏的文件</p><p>2.找到下面的.bashrc或者是bash.bashrc，对其进行vi编辑。</p><p>例如：<code>alias lsl=&quot;ls -lrt&quot;</code></p><p>3.使其立即生效：<code>source ~/.bashrc</code></p><p>这样我们可以使用lsl来代替之前的<code>ls -lrt</code>（按时间排序，以列表的方式显示目录项）</p><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>查看我们的命令别名列表只需要直接输入<code>alias</code></p><p>删除别名：<code>alias 别名</code></p><p>删除所有别名：<code>unalias -a</code></p><h3 id="apt源的更换"><a href="#apt源的更换" class="headerlink" title="apt源的更换"></a>apt源的更换</h3><p>有时候内置的apt源比较慢，那么就需要对它进行更换，以此来提高访问的速度。</p><p>首先：先将sources.list进行备份<code>sudo cp /etc/apt/sources.list /etc/apt/sources.list.bat</code></p><p>然后查看自己Linux系统发行版的版本号：<code>lsb_release -c</code>，版本号在编辑源的时候会用到。</p><p>下一步开始编辑源文件：<code>sudo vim /etc/apt/sources/list</code>，编辑源文件的时候需要按照自己的版本号进行编辑，例如我的是Ubuntu18.04,对应的版本号就是bionic。参照以下的源文件修改为自己的发行版版本号即可，使用的为阿里云。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"> </span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"> </span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"> </span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"> </span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"> </span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"> </span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"> </span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"> </span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"> </span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>最后执行</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update(更新源)</span><br><span class="line">sudo apt-get upgrade(更新软件列表)</span><br><span class="line">sudo apt-get clean &amp;&amp; sudo apt-get autoclean (清理无用包)</span><br></pre></td></tr></table></figure><p>到此，工作就完成了。</p><h4 id="常用的apt命令"><a href="#常用的apt命令" class="headerlink" title="常用的apt命令"></a>常用的apt命令</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update  更新源</span><br><span class="line">sudo apt-get install package 安装包</span><br><span class="line">sudo apt-get remove package 删除包</span><br><span class="line">sudo apt-cache search package 搜索软件包</span><br><span class="line">sudo apt-cache show package  获取包的相关信息，如说明、大小、版本等</span><br><span class="line">sudo apt-get install package --reinstall  重新安装包</span><br><span class="line">sudo apt-get -f install  修复安装</span><br><span class="line">sudo apt-get remove package --purge 删除包，包括配置文件等</span><br><span class="line">sudo apt-get build-dep package 安装相关的编译环境</span><br><span class="line">sudo apt-get upgrade 更新已安装的包</span><br><span class="line">sudo apt-get dist-upgrade 升级系统</span><br><span class="line">sudo apt-cache depends package 了解使用该包依赖那些包</span><br><span class="line">sudo apt-cache rdepends package 查看该包被哪些包依赖</span><br><span class="line">sudo apt-get source package  下载该包的源代码</span><br><span class="line">sudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包</span><br><span class="line">sudo apt-get check 检查是否有损坏的依赖</span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://zhuanlan.zhihu.com/p/84306720">配置一个永久生效的alias</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对于过于冗长的Linux或者是git命令，我想要一个快速得出结果的过程，所以学会自定义alias就很必要了。&lt;/p&gt;
&lt;p&gt;之前我自己在电脑上给Windows Terminal配置了Vim和Git Bash，相关的过程也就在&lt;a href=&quot;https://aegisprogram.github.io/posts/f5bc5ed5.html#more&quot;&gt;这里&lt;/a&gt;了，这样我平时操作一些文件的时候更加“爽”，万一需要执行什么命令，我基本上可以用WindowsTerminal来取代&lt;code&gt;Windows powerShell&lt;/code&gt;和&lt;code&gt;cmd&lt;/code&gt;。为了进一步提升自己的使用体验，我决定对一些命令设置自定义的别名。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://example.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Linux" scheme="https://example.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>搜索引擎列表</title>
    <link href="https://example.github.io/posts/3038875764.html"/>
    <id>https://example.github.io/posts/3038875764.html</id>
    <published>2021-07-05T14:27:04.000Z</published>
    <updated>2021-07-09T16:11:58.691Z</updated>
    
    <content type="html"><![CDATA[<p>搜索引擎已经成为我们上网活动中必不可少的一部分，像大家熟知的国外的Google，中国的百度，这些都已经成为人们从网上获取信息的重要工具。很多人苦于百度的广告，但是又对国内无法使用Google搜索而感到无奈（科学上网有一定的门槛，所以只有少部分人才会的）。搜索引擎发展至今，到现在搜索引擎市场也诞生了不少的“优秀分子”，下面我将对这些搜索引擎进行盘点。</p><p>提示：下面的搜索引擎盘点中并不会包含百度等其他的一些国内的乱七八糟的搜索引擎，国内百度并不是说不能用，只是觉得我要的信息是要在广告里面找出来的，这很耽误时间。其他的像360搜索之类的搜索服务做的还不如百度，也就没有列举的必要了。</p><span id="more"></span><h2 id="Magi"><a href="#Magi" class="headerlink" title="Magi"></a><a href="https://magi.com/">Magi</a></h2><p>Magi 是由 Peak Labs研发的基于机器学习的信息抽取和检索系统，它能将任何领域的自然语言文本中的知识提取成结构化的数据，通过终身学习持续聚合和纠错，进而为人类用户和其他人工智能提供<strong>可解析</strong>、<strong>可检索</strong>、<strong>可溯源</strong>的知识体系。</p><p>总而言之一句话，基于机器学习的搜索引擎。提供结果的同时还会列举出自己的学习来源。在国内来说值得一试。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/magi.242eccywj7wg.png" alt="image"></p><h2 id="bing"><a href="#bing" class="headerlink" title="bing"></a>bing</h2><p>国内版/大陆国际版：<a href="https://cn.bing.com/">https://cn.bing.com</a></p><p>原生bing：<a href="https://www.bing.com/">https://www.bing.com</a></p><p>相信你已经看出来了，是的，bing虽说有三个版本，但是上面两个版本是大陆的定制版，搜索页面下方是有公安备案的，海外原生bing是没有备案的，这是两者外观上很显著的差别。当大陆地区使用bing的时候，就会被强制重定向到cn.bing.com——也就是国内定制版bing。但是，虽说是大陆定制版，搜索的效率和结果比百度逊色不了多少，而且结果中广告更少。在国内不失为一个好用的搜索引擎。</p><p>关于两者的域名问题可以查阅<a href="https://zh.wikipedia.org/zh-cn/Microsoft_Bing#%E5%9F%9F%E5%90%8D">这里</a></p><p>两者之间的区别则可以查阅<a href="https://zh.wikipedia.org/zh-cn/Microsoft_Bing#%E7%BD%91%E7%BB%9C%E5%AE%A1%E6%9F%A5">这里</a></p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/bing.72texs8qw440.png" alt="image"></p><p>注意：下面的搜索引擎大多数国内都无法访问，如果点击链接没有打开页面，那就证明已经被GFW拦截了。</p><h2 id="Google"><a href="#Google" class="headerlink" title="Google"></a><a href="https://www.google.com/">Google</a></h2><p>海外使用人数最大的搜索引擎，搜索引擎界的老大哥。搜索效率高，广告少，准确率高。但是国内大陆地区无法访问和使用。但是会追踪用户，分析用户行为，收集用户信息用于投放广告。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/google.247io1p259ds.png" alt="image"></p><h2 id="DuckDuckgo"><a href="#DuckDuckgo" class="headerlink" title="DuckDuckgo"></a><a href="https://duckduckgo.com/">DuckDuckgo</a></h2><p>注重用户隐私，及避免<a href="https://zh.wikipedia.org/wiki/%E4%B8%AA%E6%80%A7%E5%8C%96%E6%A3%80%E7%B4%A2">个性化检索</a>所致的<a href="https://zh.wikipedia.org/wiki/%E9%81%8E%E6%BF%BE%E6%B0%A3%E6%B3%A1">过滤气泡</a>，它与其他搜索引擎不同的地方在于其不会分析自己的用户、对所有使用同一组关键词的用户显示同样的结果。它也强调返回最佳结果，而不是最多网站链接的结果。之前国内的多吉搜索也是这般倡导不打扰，不追踪，但是在今年两会期间就凉了，类似的还有秘迹搜索。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/duckduckgo.3n8bhbvjyjk0.png" alt="image"></p><h2 id="Startpage"><a href="#Startpage" class="headerlink" title="Startpage"></a><a href="https://www.startpage.com/">Startpage</a></h2><p>Startpage为一荷兰公司Startpage B.V.所推出的搜寻引擎服务,Startpage后台使用Google搜索API，所以具有跟Google本身相同的搜索质量。但是它发给Google服务器的只有搜索关键字，Google不会获取到除此以外的<a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5">头字段</a>和<a href="https://zh.wikipedia.org/wiki/Cookie">cookie</a>等信息。因此，startpage在用户隐私保护方面同样出色。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/startpage.43l4t8mgf140.png" alt="image"></p><h2 id="Qwant"><a href="#Qwant" class="headerlink" title="Qwant"></a><a href="https://www.qwant.com/">Qwant</a></h2><p>Qwant是由法国打造专业搜索引擎的法国企业Pertimm和信息安全专家ÉricLeandri合作创建的一个搜索引擎，以15种语言面向35个国家开放。Qwant执行非常严格的隐私条例，保证绝不获取使用者的任何信息，也不会在用户浏览网站时，搭载任何可能泄露使用者身份及位置的Cookies（小型文本）文件。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/qwant.1wkib4tta1ds.png" alt="image"></p><h2 id="Ecosia"><a href="#Ecosia" class="headerlink" title="Ecosia"></a><a href="https://www.ecosia.org/">Ecosia</a></h2><p>Ecosia是一个总部位于德国柏林的搜索引擎，他们将至少80%的利润捐赠给非营利利组织，用于种植树木。Ecosia致力于保护用户隐私。搜索会被加密，不会永久存储，Ecosia也不会将数据出售给第三方广告商。Ecosia在隐私政策中声明，它不创建基于搜索历史记录的个人配置文件，也不使用任何诸如<a href="https://zh.wikipedia.org/wiki/Google%E5%88%86%E6%9E%90">Google分析</a>的外部跟踪工具。截止2020年7月，Ecosia种植的树木总数已超过1亿株，每月从大气中吸收超过5万吨的二氧化碳。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/ecosia.14vmmg743oh.png" alt="image"></p><h2 id="Metager"><a href="#Metager" class="headerlink" title="Metager"></a><a href="https://metager.org/">Metager</a></h2><p>MetaGer是基于德国的基于隐私的搜索引擎。与“startpage”一样，MetaGer也使用代理服务器技术在访问网站时隐藏用户的位置。在MetaGer上搜索字词时，用户会在每个结果下方看到一个名为“匿名打开”的附加选项。”单击后，MetaGer将设置代理服务器并通过它定向到你想要的网站。因为MetaGer是查询的来源，所以用户的访问仍然是匿名的,同时MetaGer是以捐赠为支持的非营利组织。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/metager.2q8xw6no3a80.png" alt="image"></p><h2 id="peeker"><a href="#peeker" class="headerlink" title="peeker"></a><a href="https://peekier.com/">peeker</a></h2><p> Peeker 是一种搜索网页的新方法。 在尊重你隐私的搜索引擎上快速安全地查看搜索结果。与一般搜索引擎不同的是，peeker采用宫格图方式展现搜索结果，这样的方式有利于用户预览网页内容。同时也是具有严格的隐私政策。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/peeker.646yj12q8ao0.png" alt="image"></p><h2 id="Searx"><a href="#Searx" class="headerlink" title="Searx"></a>Searx</h2><p>Searx，一个基于<code>Python</code>的完全开源免费搜索引擎平台，为你提供来自Google、Bing、Yahoo等<code>70</code>多种各大视频、图片、搜索、磁力等网站结果展示，并对搜索结果进行优化，同时不会存储你的任何搜索信息。支持用户自行<a href="https://searx.github.io/searx/">安装搭建</a>。如果自己暂时没有这个想法或者能力地话，那么这里有一份searx的<a href="https://searx.space/">公开站台</a>可以使用。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/Searx.2k6cnfg74du0.png" alt="image"></p><h2 id="Yacy"><a href="#Yacy" class="headerlink" title="Yacy"></a><a href="https://yacy.net/">Yacy</a></h2><p>YaCy是一个基于<a href="https://zh.wikipedia.org/zh/%E5%B0%8D%E7%AD%89%E7%B6%B2%E8%B7%AF">p2p</a>的分布式开源免费的网页搜索引擎系统，任何人都可以用YaCy为自己建立个人的搜索门户，以实现信息的自由共享。YaCy采用多种机制保护用户的隐私，YaCy网络基于<a href="https://zh.wikipedia.org/wiki/%E7%82%B9%E5%AF%B9%E7%82%B9">点对点</a>连接，而不是通过中央服务器进行搜索查询，保证内容不被审查，而且所有的搜索请求都被加密，搜索结果不会被中央服务器记录和分析。由于该搜索引擎是基于Java语言进行开发的，所以安装Yacy程序之前必须保证自己的电脑已经安装了Java。总的来说，这个搜索引擎对于新手极为不友好，上手难度高，门槛高，但是搜索能力和隐私保护能力却是一流的。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/yacy.cam0rp26uls.png" alt="image"></p><h2 id="Yandex"><a href="#Yandex" class="headerlink" title="Yandex"></a><a href="https://yandex.com/">Yandex</a></h2><p>Yandex搜索引擎是俄罗斯Yandex公司开发的一款搜索引擎，Yandex是目前世界第五大搜索引擎，在俄国内拥有逾60%的市场占有率，也是欧洲市场上较为流行的搜索引擎。由于搜索引擎结果经常会混杂大量的俄语，所以对于中文用户来说体验并不算太好。但是，国内似乎可以正常地访问。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/Yandex.6qn1wyl5n0c0.png" alt="image"></p><h2 id="OneSearch"><a href="#OneSearch" class="headerlink" title="OneSearch"></a><a href="https://www.onesearch.com/">OneSearch</a></h2><p>OneSearch实际上并不是一款全新的搜索引擎，相反，它是一个基于微软Bing定制的搜索引擎。 这款引擎的主要亮点是它不会对用户进行追踪、储存他们的数据或跟广告商分享用户个人或搜索数据。换言之，用户的个人信息基本不会被出售第三方。但是OneSearch也依赖广告盈利。不过它不是根据cookie或用户浏览历史而是通过搜索关键字等因素显示情景广告。如果使用了高级隐私模式的用户，该搜索引擎的结果链接将会在一小时后失效。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/onesearch.2uuk33zgnu00.png" alt="image"></p><h2 id="BraveSearch"><a href="#BraveSearch" class="headerlink" title="BraveSearch"></a><a href="https://search.brave.com/">BraveSearch</a></h2><p>这是brave公司刚推出不久的搜索引擎，目前还是beta阶段，对于中文的部分检索词不是很准确。但是界面美观，没有明显的广告，不分析用户行为，也不追踪用户，也是一款注重用户隐私的搜索引擎。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/brave.2d9fmzrypglc.png" alt="image"></p><h2 id="Oscobo"><a href="#Oscobo" class="headerlink" title="Oscobo"></a><a href="https://www.oscobo.com/">Oscobo</a></h2><p>Oscobo是专门为了保护用户隐私而创立的搜索引擎，它不会跟踪用户信息。对用户的搜索字词完全加密，因此只有用户自己知道搜索的内容，对于中文搜索也算还可以，值得试试。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/oscobo.4kp4hbvgdsw0.png" alt="image"></p><h2 id="Discrete-Search"><a href="#Discrete-Search" class="headerlink" title="Discrete Search "></a><a href="https://www.discretesearch.com/">Discrete Search </a></h2><p>Discrete Search 是一种元搜索引擎，不会跟踪任何可识别的信息。对于那些以干净和用户友好的形式寻求快速结果的人来说，这是一个不错的选择。它使用端到端加密来使您的搜索尽可能保密。但是对于中文搜索极为不友好，不适合用来检索中文关键词。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/discretes.9io5a2lowag.png" alt="image"></p><h2 id="Swisscows"><a href="#Swisscows" class="headerlink" title="Swisscows"></a><a href="https://swisscows.com/">Swisscows</a></h2><p>这是一款由瑞士Hulbee AG 科技公司开发的语义搜索引擎，它使用人工智能和机器学习来评估用户搜索的上下文，同时与前面的隐私保护搜索引擎一样，它并不会收集用户的任何信息，对于中文关键词检索的支持也很友好。唯一的问题就是搜索引擎主页有广告。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/swisscows.gmhadb26sns.png" alt="image"></p><h2 id="gibiru"><a href="#gibiru" class="headerlink" title="gibiru"></a><a href="https://gibiru.com/">gibiru</a></h2><p>Gibiru 是从改进的 Google 算法中获取搜索结果，为用户提供可靠的结果。它不会在您的系统上安装各种个性化和跟踪 cookie。同样也是注重用户隐私的搜索引擎。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/gibiru.37gkptk7mmu0.png" alt="image"></p><h2 id="Search-Encrypt"><a href="#Search-Encrypt" class="headerlink" title="Search Encrypt"></a><a href="https://www.searchencrypt.com/home">Search Encrypt</a></h2><p>Search Encrypt 使用本地加密来保护您的搜索。它结合了 AES-256 加密和安全套接字层加密。搜索加密然后从其搜索合作伙伴网络中检索您的搜索结果。完成搜索后，即使其他人可以访问您的计算机，您的搜索字词也会过期，因此它们是私密的，用户无需担心自己的搜索内容被他人窥探。唯一的不足就是搜索引擎主页有广告存在。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/search.264xomzokly8.png" alt="image"></p><p>从效率上来说：在海量信息时代，一个优秀的搜索引擎总是能让我们事半功倍。</p><p>从安全隐私上来说：在互联网公司虎视眈眈下，一个注重用户隐私的搜索引擎能在我们保护个人隐私时助我们一臂之力。</p><p>我没法说哪一个搜索引擎是最优秀的，因为它们各有千秋，我们各取所需。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>相关词条参考于维基百科同名词条以及各自的官方说明文档/博客。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;搜索引擎已经成为我们上网活动中必不可少的一部分，像大家熟知的国外的Google，中国的百度，这些都已经成为人们从网上获取信息的重要工具。很多人苦于百度的广告，但是又对国内无法使用Google搜索而感到无奈（科学上网有一定的门槛，所以只有少部分人才会的）。搜索引擎发展至今，到现在搜索引擎市场也诞生了不少的“优秀分子”，下面我将对这些搜索引擎进行盘点。&lt;/p&gt;
&lt;p&gt;提示：下面的搜索引擎盘点中并不会包含百度等其他的一些国内的乱七八糟的搜索引擎，国内百度并不是说不能用，只是觉得我要的信息是要在广告里面找出来的，这很耽误时间。其他的像360搜索之类的搜索服务做的还不如百度，也就没有列举的必要了。&lt;/p&gt;</summary>
    
    
    
    <category term="分享" scheme="https://example.github.io/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="搜索引擎" scheme="https://example.github.io/tags/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>WSL2、Windows Terminal 完整配置以及docker desktop安装</title>
    <link href="https://example.github.io/posts/f5bc5ed5.html"/>
    <id>https://example.github.io/posts/f5bc5ed5.html</id>
    <published>2021-07-03T05:25:33.000Z</published>
    <updated>2021-07-27T02:47:53.069Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间微软总算把Linux系统“搬到”Windows上来了。WSL2与之前的版本相比，提高了文件系统性能并增加系统调用的完全兼容性。所以，给人的感觉就是WSL2更加的成熟一些。但是你在使用WSL2服务的时候，你还是无法使用虚拟机的。下面我将介绍如何将WSL2与Windows Terminal结合使用。</p><p>注意： WSL 2 仅适用于 Windows 10 版本18917或更高版本，如果你不清楚自己的版本号，那么你可以通过打开设置-系统-关于中的设备参数中查看，或者使用命令<code>systeminfo | find &quot;System Type&quot;</code>输出自己PC的版本号。</p><span id="more"></span><h3 id="开启WSL下载内核"><a href="#开启WSL下载内核" class="headerlink" title="开启WSL下载内核"></a>开启WSL下载内核</h3><p>我们输入以下命令开启设备上的WSL</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure><p>开启成功之后，我们需要重新启动计算机。</p><p>接下来，我们去下载最新的Linux内核软件包</p><p><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">x64下载地址</a></p><p><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi">AMD64下载地址</a></p><p>切记要下载对应的指令集的更新包，关于二者的差别这里不展开讲，有兴趣的可以看看<a href="https://zh.wikipedia.org/zh-cn/X86-64">这个</a></p><p>下载完成之后，双击运行该文件。</p><h3 id="安装Linux"><a href="#安装Linux" class="headerlink" title="安装Linux"></a>安装Linux</h3><p>完成上面的步骤之后，我们现在去Microsoft store安装Linux发行版本，我这里选择的是Ubuntu18.04，个人可以随意选择，自己用着顺手就行。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/linux%E5%8F%91%E8%A1%8C%E7%89%88.1lks55li1tj4.png" alt="image"></p><p>下载完成之后，我们点击启动，创建用户和密码。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>我们输入<code>wsl -l -v </code>查看当前的版本，如果你的WSL处于1的话，我建议切换至2。因为我个人在安装Linux发行版的时候，当我点击启动Ubuntu打算创建用户和密码的时候，上面显示“当前的网络名已经不再可用”。如果你在过程中也遇到了这样的问题，那么请这样操作。</p><p><code>wsl --set-version Ubuntu-18.04 2</code></p><p>你也可以使用命令默认使用WSL2</p><p><code>wsl --set-default-version 2</code></p><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>启动Ubuntu的方式有两种，一是通过点击Ubuntu的图标使其运行，另一种就是使用wsl命令运行。因为接下来要与WindowsTerminal结合使用，所以我将会用wsl命令来启用Ubuntu。</p><hr><h3 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h3><p>注意：以下是关于Windows Terminal的相关的一些配置，可以选择跳过，不影响WSL2和Linux发行版的使用，但是如果希望把Windows Terminal作为一个命令行工具，那么下面的配置你可以考虑一下。</p><p><a href="https://github.com/microsoft/terminal">Windows Terminal</a>是一款集成了Windows上的<em>PowerShell、CMD以及Windows Linux</em>子系统的终端。<em>Windows</em>自身的命令控制台过于简陋，所以我们不妨使用<em>Windows Terminal</em>来替代<em>cmd和power shell</em>，只需要简单的配置一些功能，就能实现很多常用的<em>Linux</em>操作命令。</p><h4 id="vim配置"><a href="#vim配置" class="headerlink" title="vim配置"></a>vim配置</h4><p>Vim是一款优秀的Linux文本编辑器。我们在Windows下编辑一些一些配置文件的时候很有作用。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.首先，我建议先去下载一个Vim,安装的时候注意路径中不要包含中文路径。</span><br><span class="line">2.然后，配置环境变量。找到Vim.exe的二进制文件位置，例如我的Vim安装位置</span><br><span class="line">在C:\Program Files (x86)\Vim\vim82,</span><br><span class="line">然后到设置——系统——关于——高级系统设置——环境变量——path——编辑——新建。</span><br><span class="line">然后将Vim.exe的路径复制粘贴上去。（例如我的就是C:\Program Files (x86)\Vim\vim82）。</span><br><span class="line">然后重新打开Windows Terminal终端就可以了。</span><br></pre></td></tr></table></figure><h4 id="Git-Bash-配置"><a href="#Git-Bash-配置" class="headerlink" title="Git Bash 配置"></a>Git Bash 配置</h4><p><em>GitBash</em>是一个用于MicrosoftWindows环境的应用程序，被集成在git下面。更多资料——<a href="https://zh.wikipedia.org/zh-cn/Git">https://zh.wikipedia.org/zh-cn/Git</a></p><p>其实，我自己在网上看到很多的将Git Bash配置到Windows Terminal下都是通过修改Windows Terminal中的JSON文件来实现的。但是实际中，Windows Terminal已经精简了很多的冗长的代码，添加配置文件也变得更加的简单。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.首先，你需要去下载一个Git </span><br><span class="line">2.打开Windows Terminal终端，进入设置——添加配置文件。</span><br><span class="line">填写名称，选择文件路径（找到自己git bash.exe的二进制文件路径）</span><br><span class="line">例如我的git 的bash.exe在D:\BigDataTools\Git\Git\bin下。</span><br><span class="line">你可以添加一个图标（当然也可以不要）。之后重启终端就可以了。</span><br></pre></td></tr></table></figure><p>但是，完成相关的bash配置之后我们会发现，当我们使用命令浏览磁盘下具有中文的文件夹时会出现乱码现象。其实，这个很好解决，我们只需要在Git文件路径下找到bash.bashrc文件，例如我的路径D:\BigDataTools\Git\Git\etc。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/bash.bashrc.g42ff1ndx94.png" alt="image"></p><p>然后打开文件进行编辑，在文件后面添加</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export LANG=&quot;zh<span class="emphasis">_CN.UTF-8&quot;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">export LC_</span>ALL=&quot;zh<span class="emphasis">_CN.UTF-8&quot;</span></span><br></pre></td></tr></table></figure><p>之后，保存退出，重启终端，这个时候我们就会发现问题解决了。</p><p><font color='00dd00'>关于Windows Terminal的配置部分算是额外添加补充的，但是没有这些配置也不影响我使用WSL2以及Linux发行版。</font></p><p>完成这些配置之后，接下来我们就可以使用命令在Windows Terminal中来启动Ubuntu了实现操作文件的效果了。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl 启用Ubuntu</span><br><span class="line">exit 退出Ubuntu</span><br></pre></td></tr></table></figure><h3 id="WSL1和WSL2"><a href="#WSL1和WSL2" class="headerlink" title="WSL1和WSL2"></a>WSL1和WSL2</h3><p>WSL1和WSL2到底有哪些不一样呢？</p><p>WSL1的主要问题是</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文件 I/O 慢，尤其是在大量IO操作时，例如使用 git 克隆仓库；</span><br><span class="line">不支持内核程序；</span><br></pre></td></tr></table></figure><p>WSL2改进方面</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">相比较于 WSL 1 使用翻译层将 linux 系统调用转化成 windows 系统调用，</span><br><span class="line">WSL 2 使用了一个轻量级的、无需维护的虚拟机，并在这个虚拟机中运行了一个完整的 linux 内核。</span><br><span class="line">WSL 2 使用一个 VHD 虚拟磁盘文件作为 linux 发行版的根目录，</span><br><span class="line">其中使用 ext4文件系统格式，极大提升了IO性能。</span><br><span class="line">WSL 1 不支持，WSL2 支持可以运行例如 Docker 等程序</span><br></pre></td></tr></table></figure><p>还有许多的地方二者都有不一样的地方，以及什么情况下选择哪一种版本更加合适，内容太多我没有办法一一列举，我强烈建议阅读微软<a href="https://docs.microsoft.com/en-us/windows/wsl/compare-versions">官方文档</a>,上面对于二者的描述很详细，很清楚。</p><h3 id="在WSL2下安装Docker"><a href="#在WSL2下安装Docker" class="headerlink" title="在WSL2下安装Docker"></a>在WSL2下安装Docker</h3><p><a href="https://docs.docker.com/docker-for-windows/install/">Docker Desktop for Windows</a> 支持 64 位版本的 Windows 10 Pro，且必须开启 Hyper-V（若版本为 v1903 及以上则无需开启 Hyper-V），或者 64 位版本的 Windows 10 Home v1903 及以上版本。更多的详细情况可以参阅<a href="https://docs.docker.com/docker-for-windows/wsl/">官方文档</a></p><p>在安装好WSL2，并且没有问题出现之后，开始着手安装docker。在Docker Desktop官方下载地址下载好.exe文件。</p><p>双击.exe文件进行安装，勾选为WSL2添加需要的配置文件和创建开始菜单（看到两个勾就可以了），点击下一步开始安装。等待一会儿就会安装完成，点击close。</p><p>这个时候如果你能够正常打开docker那么是最好的，如果出现了报错的话，例如</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/docker3.214xyr1hpgkg.png" alt="图片来源于网络"></p><p>那么你就需要下载WSL2内核的更新包，前往上面给出的链接下载。</p><p>又或者是下面这个样子的。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/docker4.2q8jpr1aqra0.png" alt="image"></p><p>这里需要需要注意三点：</p><p>1.我们首先要保证该启用的功能都启用了。</p><p>2.我们需要使用的是WSL2版本来操作docker，所以你要先确定自己当前的版本。</p><p><code>wsl -l -v</code>  查看当前版本</p><p><code>wsl --set-default-version 2</code>  将WSL2设置为默认版本</p><p>3.输入在cmd中输入 bash 或者 wsl 都报错， 提示参考的对象类型不支持尝试的操作。</p><p>输入 <code>netsh winsock reset</code> ,使用管理员权限运行该命令。然后重新启动docker。</p><p>启动docker之后，我们需要对docker在WSL2下进行一些设置：</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/docker5.5l6xgvs3en80.png" alt="image"></p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/docker6.2gowp4df3jw0.png" alt="image"></p><p>默认的访问方式去访问官方仓库太慢了，我们需要配置一个镜像源。我们在docker engine registry-mirrors中配置镜像站点。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;https://hub-mirror.c.163.com&quot;,</span><br><span class="line">&quot;https://registry.cn-hangzhou.aliyuncs.com&quot;,</span><br><span class="line">&quot;https://05f073ad3c0010ea0f4bc00b7105ec20.mirror.swr.myhuaweicloud.com&quot;,</span><br><span class="line">&quot;http://f1361db2.m.daocloud.io&quot;</span><br></pre></td></tr></table></figure><p>这四个分别是网易源，阿里源，华为源，还有daocloud，可以根据自己的情况进行更换，只要保持相对应的格式就可以。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/docker8.788rmr8slcg0.png" alt="image"></p><p>完成这些配置之后，我们现在进行检查。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">检查wsl2下的安装docker是否成功</span><br><span class="line">输入wsl（一定要保证是wsl2),接着输入 docker version</span><br><span class="line">查看本地的镜像</span><br><span class="line">docker image ls ,如果没有结果就去点击docker上面的image,然后等待一会儿。</span><br><span class="line">检查镜像加速配置</span><br><span class="line">docker info</span><br></pre></td></tr></table></figure><p>关于更多docker操作命令，使用方法等，这里有一份<a href="https://yeasy.gitbook.io/docker_practice/">docker从入门到精通</a>的教程。</p><h3 id="VM虚拟机还是WSL2"><a href="#VM虚拟机还是WSL2" class="headerlink" title="VM虚拟机还是WSL2"></a>VM虚拟机还是WSL2</h3><p>就安装配置来说，WSL2的安装可比新建虚拟机导入ISO镜像文件来的快多了。而且WSL2启动快，资源占用也少一些，共享文件和网络系统，节省了不少的折腾时间。所以是不是意味着我们可以和VM虚拟机说byebye了？</p><p>这可不见得，对于是使用WSL2还是VM虚拟机，还得看自己的需求。</p><p>1.如果你是一个萌新,那么建议使用虚拟机，对于命令不熟悉的你，最好不要直接在Windows上直接操作，万一出现什么问题解决起来可能要比你新建虚拟机长不少时间。在VM虚拟机就无所谓了，快照谁用谁真香，万一有什么错误还可以通过快照恢复。而且VM虚拟机有着更加友好的GUI界面，这对于新手来说也是很重要的一点，但是WSL2就显得比较简陋了。</p><p>2.VM虚拟机中的系统是一个较为完整的系统，能够很大程度上模拟真实的环境。而WSL2就只有一个轻量级的Linux内核而已，所以二者在功能性上丰富程度是相差较大，在这一点上VM虚拟机完胜WSL2。所以，如果你想体验一个较为完整的Linux系统，建议VM虚拟机。</p><p>目前，微软正在与VM进行合作，现在的VMWorkstation16允许Hyper-V与VM虚拟机同时使用了。相信以后估计不用再为两者的二选一问题而伤脑筋了。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>1.<a href="https://blog.csdn.net/jun8148/article/details/97245249">解决idea Terminal配置git bash中文乱码</a></p><p>2.<a href="https://docs.microsoft.com/en-us/windows/wsl/">Windows Subsystem for Linux Documentation</a></p><p>3.<a href="https://docs.docker.com/docker-for-windows/wsl/">docker for windows_wsl</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;前段时间微软总算把Linux系统“搬到”Windows上来了。WSL2与之前的版本相比，提高了文件系统性能并增加系统调用的完全兼容性。所以，给人的感觉就是WSL2更加的成熟一些。但是你在使用WSL2服务的时候，你还是无法使用虚拟机的。下面我将介绍如何将WSL2与Windows Terminal结合使用。&lt;/p&gt;
&lt;p&gt;注意： WSL 2 仅适用于 Windows 10 版本18917或更高版本，如果你不清楚自己的版本号，那么你可以通过打开设置-系统-关于中的设备参数中查看，或者使用命令&lt;code&gt;systeminfo | find &amp;quot;System Type&amp;quot;&lt;/code&gt;输出自己PC的版本号。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://example.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="教程" scheme="https://example.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="WSL2" scheme="https://example.github.io/tags/WSL2/"/>
    
    <category term="Windows Terminal" scheme="https://example.github.io/tags/Windows-Terminal/"/>
    
  </entry>
  
  <entry>
    <title>如何挑选博客框架、在线博客平台</title>
    <link href="https://example.github.io/posts/d9786a43.html"/>
    <id>https://example.github.io/posts/d9786a43.html</id>
    <published>2021-07-01T14:48:46.000Z</published>
    <updated>2021-07-09T16:20:22.956Z</updated>
    
    <content type="html"><![CDATA[<p>在现在这个信息发达的时代，越来越多非程序员出身的人也想要一个自己的博客。目前也诞生了不少的在线博客网站和博客框架，博客大致分为主要分为动态博客和静态博客两大类。其实关于动态博客和静态博客的选择问题，这个问题的看法还是见仁见智。我在这里简单说说两种博客之间的优劣，以及一些比较友好的在线博客网站。</p><span id="more"></span><h3 id="动态博客"><a href="#动态博客" class="headerlink" title="动态博客"></a>动态博客</h3><p>动态博客，一个运行在服务器上的博客程序，一般提供一个在线的编辑器供使用者在线编写，多数都需要使用PHP+数据库。</p><h4 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h4><p><a href="https://wordpress.org/">Wordpress</a>:十分有名的动态博客框架，几乎有涵盖所有功能的插件，搭建自己的动态博客的首选，全球已经有40%的网站使用wordpress驱动。</p><p><a href="http://typecho.org/">Typecho</a>:这是在功能性可以和Wordpress相媲美的博客框架，但是他的程序本体要比后者更加简洁。</p><p><a href="https://www.wix.com/">Wix</a>这是一款以色列的一站式网站创建服务博客框架，不需要了解DNS对应、网页编程语言、服务器创建/租赁等事务，一切都由 Wix 自动化处理，让用户能专心在网页视觉与内容呈现上，更可以调整手机版的设计及版面。</p><p><a href="https://halo.run/">Halo</a>:是一款基于Java语言，使用Spring Boot开发的博客系统，致力于打造最好的 Java 博客系统，比较容易上手。</p><h4 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h4><blockquote><p>1.在线编写比较友好，不需要掌握过多的代码知识。<br>2.插件数量多，元素丰富。<br>3.响应式网页，交互性比较良好。<br>4.不显示后端处理过程，有利于保护自己的源代码</p></blockquote><h4 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h4><blockquote><p>1.由于使用了数据库和PHP等提高了性能，所以消耗的资源比较多。<br>2.后端部署较为繁琐，需要日常维护<br>3.可免费托管的平台较少<br>4.相较于静态博客，动态博客更加容易受到攻击和崩溃。</p></blockquote><hr><h3 id="静态博客"><a href="#静态博客" class="headerlink" title="静态博客"></a>静态博客</h3><p>所谓静态博客，即通过生成工具（eg： Hexo ； Hugo 等），直接将作者所书写的博文编译成最终的 html；css；js 等静态文件。作者/博主，只需将生成的文件部署在静态 server 上面即可被在互联网中访问。 用户通过浏览器访问服务器，直接就回获得已编译的静态资源。比如你现在看到的博客就是基于Hexo博客框架部署的静态博客。</p><h4 id="推荐-1"><a href="#推荐-1" class="headerlink" title="推荐"></a>推荐</h4><p><a href="https://gridea.dev/">Gridea</a>:Gridea 是一个静态博客写作客户端，帮助你更容易地构建并管理博客或任何静态站点。不过作者对于该项目的维护不那么积极，估计是要放弃了。</p><p><a href="https://jekyllrb.com/">Jekyll</a>:Jekyll 是一个简单的博客形态的静态站点生产机器，是GitHub官方推荐部署到GitHub Pages的博客框架，可谓是亲儿子。</p><p><a href="https://hexo.io/zh-cn/">Hexo</a>:Hexo 是一个基于Node.js的快速、简洁且高效的静态博客框架。Hexo 支持Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p><a href="https://www.gohugo.org/">Hugo</a>:Hugo是一种用Go语言编写的快速，现代的静态网站生成器，简单、易用、高效、易扩展、快速部署。</p><h4 id="优势-1"><a href="#优势-1" class="headerlink" title="优势"></a>优势</h4><blockquote><p>1.没有过多的元素，专注于内容写作。<br>2.主题大多都比较简约。<br>3.无其他干扰（主要体现在广告比较少）<br>4.占用的资源较少，访问速度快，可免费部署的网站多。<br>5.可高度定制化，可以自写逻辑，插件等。</p></blockquote><h4 id="不足-1"><a href="#不足-1" class="headerlink" title="不足"></a>不足</h4><blockquote><p>1.需要一定的编程经验才能自定义样式。<br>2.插件数量较少。<br>3.缺少评论插件，交互式内容比较难以实现。<br>4.数学公式的支持不是很好，技术资料极少而多为英语资料，门槛较高。</p></blockquote><hr><h3 id="在线平台"><a href="#在线平台" class="headerlink" title="在线平台"></a>在线平台</h3><p>除了上面利用博客框架搭建自己的博客之外，我们也可以寻找一个适合自己的在线平台来写作博客。</p><h4 id="Blogger"><a href="#Blogger" class="headerlink" title="Blogger"></a><a href="https://www.blogger.com/about/?bpli=1">Blogger</a></h4><p>Blogger提供免费主机Blogspot.com存放博客，用户不必写任何代码或者安装服务器软件或脚本，透过所见即所得界面轻松地创建、发布、维护和修改自己的网志。允许用户自定义自己的域名（但是后面需接.blogspot.com）。具有较为成熟的中文博客书写和发布功能，使用起来较为简单轻松，内置许多的主题模板，自定义程度较高。</p><h4 id="不足-2"><a href="#不足-2" class="headerlink" title="不足"></a>不足</h4><p>.blogspot.com域名被GFW所屏蔽，内陆地区用户访问较为困难，需要使用科学上网手段。</p><h4 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a><a href="https://github.com/">GitHub</a></h4><p>GitHub是当今世界上最流行，最大的代码托管网站和开源社区。如果你不想用GitHub Pages网页托管博客，那么你可以选择使用GitHub issues直接在GitHub上写自己的博客。只需要简单新建一个仓库，勾选添加issues，可以愉快的在GitHub issues上利用Markdown语法进行书写。不需要你掌握任何的代码能力，只需要简单掌握Markdown语法即可，支持本地内容预览，可以通过给issues加上不同的标签来进行分类。</p><h4 id="不足-3"><a href="#不足-3" class="headerlink" title="不足"></a>不足</h4><p>GFM（GitHub Flavored Markdown）语法对于在GitHub issues中编写中文的时候易出现标红，影响写作体验。对于HTML标签元素支持不够多。</p><h4 id="Notion"><a href="#Notion" class="headerlink" title="Notion"></a><a href="https://www.notion.so/">Notion</a></h4><p>Notion是一款提供笔记、任务、数据库、看板、维基、日历和提醒等组件的应用程序。用户可以将这些组件连接起来，来创建自己的系统，用于知识管理、笔记记录、数据管理、项目管理等，可以进行跨平台使用。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/notion.5xa5276cpmo0.png" alt="image"></p><h4 id="不足-4"><a href="#不足-4" class="headerlink" title="不足"></a>不足</h4><p>要想把Notion作为公开页面，需要一定的配置操作，Notion官方目前还没有提供自定义域名的服务（承诺日后提供），但是我们可以通过自己来进行实现公开页面的功能，以此来达到实现个人网站页面的效果。相关配置——<a href="https://sspai.com/post/58441">如何为Notion公开页面自定义域名</a></p><p>像Notion这类在线笔记服务其实有很多种，我很难一一列举，每个人的喜好也不完全相同，只要能实现个人网站效果就可以。</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>1.文中的博客框架我也没有办法亲自一一搭建体验，所以这只是一个参考方向，更何况每个人对于博客什么要求，自己什么需求，只有自己最清楚。</p><p>2.动态博客和静态博客各自的优缺点都很明显，按需，按能力选择就好。</p><p>3.无论你是使用自建博客，还是在线网站，亦或者是笔记服务，重要的是你有坚持写博客的毅力。平台重要，但不是最重要的因素。</p><hr><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>1.<a href="https://blog.csdn.net/weixin_42365530/article/details/107840934">七大开源blog框架介绍</a></p><p>2.<a href="https://zhuanlan.zhihu.com/p/164959395">静态博客是什么？常用的静态博客程序有哪些？静态博客的优缺点！</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在现在这个信息发达的时代，越来越多非程序员出身的人也想要一个自己的博客。目前也诞生了不少的在线博客网站和博客框架，博客大致分为主要分为动态博客和静态博客两大类。其实关于动态博客和静态博客的选择问题，这个问题的看法还是见仁见智。我在这里简单说说两种博客之间的优劣，以及一些比较友好的在线博客网站。&lt;/p&gt;</summary>
    
    
    
    <category term="分享" scheme="https://example.github.io/categories/%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="文字博客" scheme="https://example.github.io/tags/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="博客推荐" scheme="https://example.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客相关配置(3)</title>
    <link href="https://example.github.io/posts/fe973f8e.html"/>
    <id>https://example.github.io/posts/fe973f8e.html</id>
    <published>2021-06-30T07:47:45.000Z</published>
    <updated>2021-07-09T16:09:30.764Z</updated>
    
    <content type="html"><![CDATA[<p>自己这两天在对hexo博客进行相关主题配置中，发现网上的一些博客教程要么过了”保质期”,要么不够严谨。本来想避免踩坑的，结果被带到坑里面去了。为了避免以后再一头乱撞，先把最近伤脑筋的配置环节记录下来。</p><h2 id="添加背景图片"><a href="#添加背景图片" class="headerlink" title="添加背景图片"></a>添加背景图片</h2><p>当我想给自己的博客添加一张图片作为背景时，我看到网上大多数别人搭建博客的教程/笔记都是说让你去hexo\themes\主题名\source\css寻找一个_custom文件夹下面的styles.styl文件，然后添加修改文件，最后到主题的配置文件中找custom的相关配置，将/source/css_custom前面的注释去掉。我看到的大多数都是如此，刚开始的时候，我也是照着这样的方式来，但是很快我发现事情并非如此。</p><span id="more"></span><p>其实，这个next主题，GitHub上面有两个仓库</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/next.lxw6xs00akw.png" alt="next"></p><p>上面一个仓库现在已经停止维护了，下面一个仓库是目前在维护和发展的仓库，也是版本比较新的仓库。所以这就导致同样是next主题，但是在一些配置方面，新老版本的方法不一样，添加背景图片就是如此。如果你想从next V5迁移到next V7+,那么就参考这篇<a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/UPDATE-FROM-5.1.X.md">官方文档</a>，话不多说，下面开始操作。</p><p>首先，我们先去博客根目录下的source下新建一个_data文件夹以及一个styles.styl文件。接着将自己想要作为背景的图片放入themes/next/source/images里面，然后我们回到之前新建的styles.styl文件中，添加如下代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 添加背景图片</span><br><span class="line">body &#123;</span><br><span class="line">  background: url(/images/xxx.jpg);  //这里引入之前放在images中的图片名，也可以引入外链接</span><br><span class="line">  background-size: cover;</span><br><span class="line">  background-repeat: no-repeat;</span><br><span class="line">  background-attachment: fixed;</span><br><span class="line">  background-position: 50% 50%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 修改主体透明度</span><br><span class="line">.main-inner &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 修改菜单栏透明度</span><br><span class="line">.header-inner &#123;</span><br><span class="line">  opacity: 1.2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>透明度可以根据自己的喜好进行修改。之后，我们在主题的配置文件中找到custom_file_path，将下面style前面的#去掉即可。这样，博客的背景图片就添加完成了。</p><h2 id="对代码和超链接进行凸显"><a href="#对代码和超链接进行凸显" class="headerlink" title="对代码和超链接进行凸显"></a>对代码和超链接进行凸显</h2><p>在代码块的配置中，我们可以在主题配置文件中找到codelock</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/codelock.1u0jjztu5gps.png" alt="codelock"></p><p>对其中的highlight_theme,style可以自行选择想要的样式。</p><p>对于代码行，我们可以通过添加css文件来进行高亮显示，我们可以在上面的styles.styl文件中添加以下代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">code &#123;</span><br><span class="line"><span class="code">    color: #ff7600;</span></span><br><span class="line"><span class="code">    background: #fbf7f8;</span></span><br><span class="line"><span class="code">    margin: 2px;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><p>颜色可以根据自己的喜好来进行设置。而对于超链接，我们可以在themes\next\source\css\_common\components\post\post.styl中添加如下代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.post-body p a &#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line"><span class="code">    color: #fc6423;</span></span><br><span class="line"><span class="code">    border-bottom: none;</span></span><br><span class="line"><span class="code">    border-bottom: 1px solid #fc6423;</span></span><br><span class="line"><span class="code">  &#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure><p>颜色可以根据自己的喜好进行更改。通过这样的设置，我们文章中的超链接就会变得更加的显眼。</p><h2 id="配置Darkmode"><a href="#配置Darkmode" class="headerlink" title="配置Darkmode"></a>配置Darkmode</h2><p>在next主题的配置文件中，我们可以找到darkmode配置，将其改为true就可以启用darkmode(但是不能进行切换，而是根据系统偏好，是否是夜间模式来判断 是否启用)。但是我想实现的效果就是别人进入我的博客网站就是默认darkmode，并且有切换开关给访客自由切换。看到不少大佬的解决方案，但是大多数都让我觉得不太满意，最后我找到一个完美的解决方案。这位大佬在自己的博客中已经很详细的说明了每一步的操作，我就不赘述了。具体参考<a href="https://wdx.cool/2021/05/05/Hexo-Next8-x%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F/">大佬的博客</a>。我还是喜欢这个深色的模式，所以我没有给我的博客添加背景图片上去，但是上面的方法可行。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/darkmode.4n8lieq2unw0.png" alt="image"></p><h2 id="移除post-link"><a href="#移除post-link" class="headerlink" title="移除post_link"></a>移除post_link</h2><p>我之前在我的博客文章页作者署名下一行发现有一行post_link，指向的仓库的文章源文件，但是我并不想那么做。所以，我需要移除这个选项，可以进行如下操作：</p><p>在本地找到hemes\next\layout_partials\post\post-copyright.swig文件，将里面有关于post_link的&lt;li&gt;文件全部删除。这样，页面末尾就不会再出现post_link了。</p><h2 id="让红心跳动"><a href="#让红心跳动" class="headerlink" title="让红心跳动"></a>让红心跳动</h2><p>如果想要站底的红心跳动起来，我们只需要在主题配置文件中找到footer的icon，将其中的animated变为true即可。</p><h2 id="指定博客源文件的URL"><a href="#指定博客源文件的URL" class="headerlink" title="指定博客源文件的URL"></a>指定博客源文件的URL</h2><p>关于很多人出现过自己博客没有加载CSS文件的问题，其实根据报错基本都能够找到具体问题出在哪里。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/hexo%E6%A0%B7%E5%BC%8F.5ldq1x1vh080.jpg" alt="image"></p><p>但是对于博客的源文件地址没有指定正确的话，你是看不到任何的报错的，出现的效果就是上面这样。所以你在指定自己的博客源文件地址的时候一定要正确填写格式，要不然你可以选择不填写地址。</p><p><img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/url.60v4mg14sqg0.png" alt="image"></p><p>这个问题之前困扰了我很久，后来自己慢慢的才找到思路。</p><hr><h2 id="说在最后"><a href="#说在最后" class="headerlink" title="说在最后"></a>说在最后</h2><p>关于hexo的主题配置问题应该到这里就差不多告一段落了。自己其实看到有不少hexo布置的很漂亮，有些还添加了一个看板娘的，其实我开始的时候也想搞一个蕾姆模型的看板娘，但是考虑到资源加载，占用和博客访问速度问题，想想还是算了。对于我来说，博客资源的加载速度是优先级更高的，我自然就会舍弃那些动态背景和看板娘之类的，甚至连背景图片我也不想搞。这一切都只是锦上添花，没有加载速度，一切对于我来说没有意义。我觉得GitHub这个平台很不错，所以也没有自己购买域名的想法，况且我还没有对自己的博客进行SEO配置，也就没那个必要。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p>1.<a href="https://github.com/theme-next/hexo-theme-next/issues/973">how to change blog backgroud</a></p><p>2.<a href="https://wdx.cool/2021/05/05/Hexo-Next8-x%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F/">Hexo_Next8.x主题添加深色模式</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;自己这两天在对hexo博客进行相关主题配置中，发现网上的一些博客教程要么过了”保质期”,要么不够严谨。本来想避免踩坑的，结果被带到坑里面去了。为了避免以后再一头乱撞，先把最近伤脑筋的配置环节记录下来。&lt;/p&gt;
&lt;h2 id=&quot;添加背景图片&quot;&gt;&lt;a href=&quot;#添加背景图片&quot; class=&quot;headerlink&quot; title=&quot;添加背景图片&quot;&gt;&lt;/a&gt;添加背景图片&lt;/h2&gt;&lt;p&gt;当我想给自己的博客添加一张图片作为背景时，我看到网上大多数别人搭建博客的教程/笔记都是说让你去hexo\themes\主题名\source\css寻找一个_custom文件夹下面的styles.styl文件，然后添加修改文件，最后到主题的配置文件中找custom的相关配置，将/source/css_custom前面的注释去掉。我看到的大多数都是如此，刚开始的时候，我也是照着这样的方式来，但是很快我发现事情并非如此。&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://example.github.io/categories/Hexo/"/>
    
    
    <category term="教程" scheme="https://example.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="文字博客" scheme="https://example.github.io/tags/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="主题" scheme="https://example.github.io/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>免费激活Windows和office</title>
    <link href="https://example.github.io/posts/541ef572.html"/>
    <id>https://example.github.io/posts/541ef572.html</id>
    <published>2021-06-29T11:37:36.000Z</published>
    <updated>2021-07-10T04:08:41.173Z</updated>
    
    <content type="html"><![CDATA[<p>Windows系统和office办公软件都是我们现在学习，工作中很难离开的工具。由于各种各样的原因，可能有些人会出现Windows未被激活，office产品密钥过期等情况。所以，在这里列举一下如何免费的激活Windows和office。</p><h3 id="Windows激活"><a href="#Windows激活" class="headerlink" title="Windows激活"></a>Windows激活</h3><p>关于Windows的激活方式一般分为数字权利激活和KMS在线激活。</p><h4 id="数字权利激活"><a href="#数字权利激活" class="headerlink" title="数字权利激活"></a>数字权利激活</h4><p>数字权利激活会把当前电脑的硬件信息，上传至微软服务器。当用户重装系统后，设备会自动与服务器中存储的信息进行对比。如果相符，则自动激活。所以，这种激活方式对于用户来说是非常的方便的，有好的。</p><p>首先介绍一个专门用于激活Windows10的数字权利激活工具——云萌激活</p><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><p>以数字权利激活Windows10系统（涵盖各个版本）</p><span id="more"></span><p><font color='00dd00'>云萌激活</font>：</p><p><a href="https://cmwtat.cloudmoe.com/cn.html">云萌Windows 10激活工具 - 首页 </a></p><p><a href="https://github.com/TGSAN/CMWTAT_Digital_Edition">GitHub开源地址</a></p><p>这是一款开源免费的数字权利激活工具，你可以使用他免费激活windows10系统。只需要简单的几步操作就可以完成。</p><h5 id="激活步骤"><a href="#激活步骤" class="headerlink" title="激活步骤"></a>激活步骤</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">中文版</span><br><span class="line">下载 Releases 里的 .exe 发行文件。</span><br><span class="line"></span><br><span class="line">运行它。</span><br><span class="line"></span><br><span class="line">点按 Activate 按钮。</span><br><span class="line"></span><br><span class="line">完成~</span><br></pre></td></tr></table></figure><p>可以说是十分的简单易用。</p><h4 id="KMS服务器激活"><a href="#KMS服务器激活" class="headerlink" title="KMS服务器激活"></a>KMS服务器激活</h4><p>密钥管理服务（KMS）是微软为批量许可客户（组织，学校或政府）提供的一种正版激活方法。KMS激活期限最多可以长达180天（6个月），激活每7天自动进行更新（期限自动重置为180天），也就是说如果客户端可以一直连接到KMS主机服务器，那么是可以无限制的使用下去。</p><p>但是对于一些非Windows10系统的用户来说，上面的工具爱莫能助，所以我们需要一款更加强大的激活工具——HEU KMS Activator </p><p><a href="https://github.com/zbezj/HEU_KMS_Activator">GitHub发布地址</a></p><h5 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h5><p>支持KMS激活Microsoft Windows、Office； 2、支持数字许可永久激活、KMS38激活至2038年；  3、支持OEM激活Windows Vista, Windows 7, Windwos Server； 4、支持Microsoft Office  零售版转换为VL批量许可版； 5、支持备份和还原激活信息。 6、支持自定义搭建KMS服务器激活； —激活成功率高、执行速度快、支持几乎所有版本； —在Windows 7上无需依赖安装.NET Framework； —可以自行安装或搭建KMS服务器； —自动识别三种语言（简/繁/英）；  —带参数可静默运行且参数可根据需要自选； —可以一键自动激活、也可以根据需要自选； —包含KMS相关的功能（安装密钥、激活状态查询等）  —完全可离线激活，也可以连接网络服务器进行激活；</p><p>正因为这款激活工具几乎可以解决Windows电脑上所有的激活服务，所以在GitHub上也只是以文件的形式上传，并没有将工具代码开源，个人自行选择是否使用。</p><h5 id="激活步骤-1"><a href="#激活步骤-1" class="headerlink" title="激活步骤"></a>激活步骤</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.打开HEU KMS Activator 并选择一个激活方式(下面以数字激活为例)</span><br><span class="line">2.点击数字激活，点击“橘黄色按钮”，将激活 Windows 和 Office，智能识别最佳 的激活方式（优先顺序依次为数字许可证/KMS38/OEM/KMS），并自动跳过已经 永久激活的版本。</span><br><span class="line">3.完成(更多的激活方式自行选择和查询)</span><br></pre></td></tr></table></figure><h4 id="产品密钥激活"><a href="#产品密钥激活" class="headerlink" title="产品密钥激活"></a>产品密钥激活</h4><p>其实产品密钥激活算不上是另一种激活形式，只是换了一种激活方式。根据密钥的性质（数字权利还是KMS激活密钥）来决定你的设备激活状态。</p><p>如果你能确定自己的密钥是数字权利密钥，那么你可以直接打开设置-更新和安全-激活-更换产品密钥。将你手里面的密钥输入进入激活即可。</p><p>但是如果你是KMS密钥的话建议通过代码来进行激活，代码如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX(这里输入你自己的产品密钥)</span><br><span class="line">slmgr /skms kms.03k.org</span><br><span class="line">slmgr /ato</span><br></pre></td></tr></table></figure><p>这样用代码激活的好处就是，当激活使用时间达到180天后，他会自动帮你激活，这样你就不需要再通过手动激活了。</p><p>密钥获取处:<a href="https://t.me/getkeys">Windows与office激活密钥公益发布站</a></p><p>本着互联网“传递，共享，自由”的原则，我希望大家使用公益站发布的密钥之后，能给他一个关注。</p><hr><h3 id="office产品激活"><a href="#office产品激活" class="headerlink" title="office产品激活"></a>office产品激活</h3><p>office激活除了上面说到的HEU KMS Activator ，但是可能由于代码没有开源的缘故，可能让人觉得不太放心，那么下面的office tool plus也是一个不错的选择。</p><p><a href="https://otp.landian.vip/zh-cn/">Office Tool Plus 官方网站 - 一键部署 Office </a></p><p><a href="https://github.com/YerongAI/Office-Tool">GitHub开源地址</a></p><h4 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h4><p>一键生成配置，快速激活office,Office Tool Plus从微软服务器上获取office的版本信息以及安装文件，始终确保下载，安装的office为最新版本。</p><h4 id="激活步骤-2"><a href="#激活步骤-2" class="headerlink" title="激活步骤"></a>激活步骤</h4><p>下载Office Tool Plus之后，激活步骤请参考<a href="https://help.coolhub.top/zh-cn/activate/#%E6%BF%80%E6%B4%BB%E6%AD%A5%E9%AA%A4">官方文档</a>，有详细说明。</p><h3 id="其他方案"><a href="#其他方案" class="headerlink" title="其他方案"></a>其他方案</h3><p>也许你实在不想折腾那么多繁琐的步骤，那么你可以使用产品密钥激活(密钥寻找可以前往上面的telegram频道，如果你没有telegram，那就只能求助于万能的网友了)，或者暂时使用office的替代品。我这里推荐两个替代品：一个是<a href="https://www.wps.com/download/">WPS</a>,另一个是<a href="https://www.libreoffice.org/">Libre Office</a>(开源免费，与Office兼容)。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>1.<a href="https://zhuanlan.zhihu.com/p/349931246">Windows系统激活神器HEU KMS Activator v22.1.0激活工具</a></p><p>2.<a href="https://zhuanlan.zhihu.com/p/260014354">win10激活的几种方式及其原理</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Windows系统和office办公软件都是我们现在学习，工作中很难离开的工具。由于各种各样的原因，可能有些人会出现Windows未被激活，office产品密钥过期等情况。所以，在这里列举一下如何免费的激活Windows和office。&lt;/p&gt;
&lt;h3 id=&quot;Windows激活&quot;&gt;&lt;a href=&quot;#Windows激活&quot; class=&quot;headerlink&quot; title=&quot;Windows激活&quot;&gt;&lt;/a&gt;Windows激活&lt;/h3&gt;&lt;p&gt;关于Windows的激活方式一般分为数字权利激活和KMS在线激活。&lt;/p&gt;
&lt;h4 id=&quot;数字权利激活&quot;&gt;&lt;a href=&quot;#数字权利激活&quot; class=&quot;headerlink&quot; title=&quot;数字权利激活&quot;&gt;&lt;/a&gt;数字权利激活&lt;/h4&gt;&lt;p&gt;数字权利激活会把当前电脑的硬件信息，上传至微软服务器。当用户重装系统后，设备会自动与服务器中存储的信息进行对比。如果相符，则自动激活。所以，这种激活方式对于用户来说是非常的方便的，有好的。&lt;/p&gt;
&lt;p&gt;首先介绍一个专门用于激活Windows10的数字权利激活工具——云萌激活&lt;/p&gt;
&lt;h5 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h5&gt;&lt;p&gt;以数字权利激活Windows10系统（涵盖各个版本）&lt;/p&gt;</summary>
    
    
    
    <category term="文字博客" scheme="https://example.github.io/categories/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="教程" scheme="https://example.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Windows" scheme="https://example.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客相关配置（2）</title>
    <link href="https://example.github.io/posts/e863b3d6.html"/>
    <id>https://example.github.io/posts/e863b3d6.html</id>
    <published>2021-06-29T01:43:42.000Z</published>
    <updated>2021-07-09T16:12:41.645Z</updated>
    
    <content type="html"><![CDATA[<p>hexo博客主题配置过程中不仅有不少的踩坑问题，还比较的琐碎，需要不少的耐心。</p><h3 id="1-主题的标签，分类，关于页面的生成"><a href="#1-主题的标签，分类，关于页面的生成" class="headerlink" title="1.主题的标签，分类，关于页面的生成"></a>1.主题的标签，分类，关于页面的生成</h3><p>其实这一部分在next主题配置中还算简单的，也没有什么坑，主要是说说如何生成这些页面以及修改相关内容。</p><ul><li><p>标签页</p><p>想要生成标签页，我们首先需要在博客的根目录（例如我将整个博客放在D:\BigDataTools\hexo下，那么hexo文件下就是我的博客根目录）在当下目录输入</p><p><code>hexo new page tags</code></p><p>之后就会在hexo/source下生成相对应的文件夹和index文件，我们对其进行修改：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: all tags</span><br><span class="line">date: xxxx-xx-xx</span><br><span class="line">type: tags</span><br></pre></td></tr></table></figure></li><li><p>分类页</p><p>同样，我们在博客的根目录下输入</p><p><code>hexo new page  categories</code></p><span id="more"></span><p>对index文件进行如下修改：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: all categories</span><br><span class="line">date:  xxxx-xx-xx</span><br><span class="line">type: categories</span><br></pre></td></tr></table></figure></li><li><p>关于页</p><p>在博客的根目录下输入</p><p><code>hexo new page about</code></p><p>对其中的index文件进行如下编辑：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 关于</span><br><span class="line">date:</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">正文内容</span><br></pre></td></tr></table></figure></li></ul><p>然后找到主题的配置文件（hexo/themes/主题名/_config.yml)中的menu，将tags,categories,about对应前面的注释去掉即可。我们可以顺便将主题配置文件中tags_icon设置为true,这样你的博客标签将会以图标的方式展现出来而不再是#。</p><h3 id="2-添加社交方式"><a href="#2-添加社交方式" class="headerlink" title="2.添加社交方式"></a>2.添加社交方式</h3><p>其实主题中会内置一些社交的方式，我们只需要在主题配置文件中打开就可以（我以next主题为例）。我们首先来到主题配置文件中，找到social<img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/social.501i9rss0r40.png" alt="image"></p><p>将我们需要的打开，把后面的联系地址填上去就可以了。当然，也许这上面提供的联系方式不能满足你的要求，那么你可以自定义添加自己想要的联系方式。在这个<a href="https://fontawesome.com/v5.15/icons?d=gallery&p=2">图标网站</a>上你不需要复制链接，也不需要下载图标，你只需要在这个网站上找到对应联系方式的图标，确认没有错误就可以。然后我们回到配置文件中，添加自定义的联系方式（需要注意书写的格式）。网站只是帮助你确认联系方式的图标。</p><h3 id="3-博客文章置顶"><a href="#3-博客文章置顶" class="headerlink" title="3.博客文章置顶"></a>3.博客文章置顶</h3><p>比如说我想让进入这个网站的朋友最先看到的就是如何搭建hexo博客的文章，那么文章置顶对于我来说就很有必要的了。我们需要进行如下操作</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save(卸载原来的插件)</span><br><span class="line">npm install hexo-generator-index-pin-top --save(安装置顶插件)</span><br></pre></td></tr></table></figure><p>设置置顶标志：</p><p>进入/theme/主题名/layout/_macro/post.swig，找到</p><p><code>&lt;div class = &#39;post-meta&#39;&gt;</code>下面插入代码</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span><br><span class="line"><span class="code">    &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="code">    &lt;font color=&quot;RED&quot;&gt;置顶&lt;/font&gt; (置顶文字的颜色可以自行修改)</span></span><br><span class="line"><span class="code">    &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span></span><br><span class="line"><span class="code">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure><p>之后，我们只需要在编写一篇新的博客的时候在元数据中加入<code>top: true</code>就可以了。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://juejin.cn/post/6844904037465194503">hexo next主题设置文章置顶</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;hexo博客主题配置过程中不仅有不少的踩坑问题，还比较的琐碎，需要不少的耐心。&lt;/p&gt;
&lt;h3 id=&quot;1-主题的标签，分类，关于页面的生成&quot;&gt;&lt;a href=&quot;#1-主题的标签，分类，关于页面的生成&quot; class=&quot;headerlink&quot; title=&quot;1.主题的标签，分类，关于页面的生成&quot;&gt;&lt;/a&gt;1.主题的标签，分类，关于页面的生成&lt;/h3&gt;&lt;p&gt;其实这一部分在next主题配置中还算简单的，也没有什么坑，主要是说说如何生成这些页面以及修改相关内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;标签页&lt;/p&gt;
&lt;p&gt;想要生成标签页，我们首先需要在博客的根目录（例如我将整个博客放在D:\BigDataTools\hexo下，那么hexo文件下就是我的博客根目录）在当下目录输入&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hexo new page tags&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;之后就会在hexo/source下生成相对应的文件夹和index文件，我们对其进行修改：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;title: all tags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: xxxx-xx-xx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分类页&lt;/p&gt;
&lt;p&gt;同样，我们在博客的根目录下输入&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hexo new page  categories&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://example.github.io/categories/Hexo/"/>
    
    
    <category term="教程" scheme="https://example.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="文字博客" scheme="https://example.github.io/tags/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="主题" scheme="https://example.github.io/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客相关配置（1）</title>
    <link href="https://example.github.io/posts/fad61c38.html"/>
    <id>https://example.github.io/posts/fad61c38.html</id>
    <published>2021-06-26T05:08:42.000Z</published>
    <updated>2021-07-09T16:07:40.893Z</updated>
    
    <content type="html"><![CDATA[<p>今天在对hexo进行主题美化配置的过程中我发现了不少的问题。所以特地在这里列举一下问题以及相关的注意事项。可能一次性很难说完说全，因为我自己也是刚使用hexo博客不久（之前自己投入的是hugo的怀抱），所以有关于hexo博客的配置和注意事项我应该会写一个系列。而且我怕一篇文章太长，没有耐心看下去，所以还是选择少量多次的好。</p><h3 id="1-hexo-symbols-count-time下载报错"><a href="#1-hexo-symbols-count-time下载报错" class="headerlink" title="1.hexo-symbols-count-time下载报错"></a>1.hexo-symbols-count-time下载报错</h3><p>今天我想给自己的hexo博客上添加字数统计和阅读时间估计（我看到许多的hexo博客都使用了这个插件，而且自己也觉得很不错）。但是当我在终端输入</p><p><code>npm install hexo-symbols-count-time --save</code></p><p>时（npm下载慢的朋友可以使用cnpm），我发现我当前版本的一些js文件版本过低，我需要更新版本。<img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1.3lz4gml615w0.png" alt="image"></p><p>看到有人在issues中提交了和我一样问题的截图，有人给出的解答是先更新npm和node.js，于是我决定先将npm和node.js更新一下。输入以下代码：</p><span id="more"></span><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">首先查看当前版本</span><br><span class="line">node -v</span><br><span class="line">node -v </span><br><span class="line">然后更新版本</span><br><span class="line">npm install -g npm</span><br><span class="line">注意：接下来的操作仅适合Mac和Linux用户</span><br><span class="line">npm cache clean -f # 清除缓存</span><br><span class="line">npm install -g n # 安装n模块，Windows系统目前无法使用n模块，所以无法完成后面的操作</span><br><span class="line">n stable # 升级node.js到最新稳定版本,r如果出现升级错误，在命令前面加上sudo</span><br></pre></td></tr></table></figure><p>所以现在有一个问题，那么Windows用户该如何更新node.js呢。呃，这个嘛，可能需要重新安装一遍到原来的路径（<del>我也表示很无奈</del>)。当你完成两个地方的更新之后，你再去下载hexo-symbols-count-time这个插件。</p><h3 id="2-配置插件"><a href="#2-配置插件" class="headerlink" title="2.配置插件"></a>2.配置插件</h3><p>这个配置插件也是有知识点滴。首先我们需要在站点配置上（也就是博客根目录下的_config.yml文件）添加配置内容，内容如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># count<span class="emphasis">_time (名字随意)</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  symbols_</span>count<span class="emphasis">_time:</span></span></span><br><span class="line"><span class="emphasis"><span class="section"> #文章内是否显示</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  symbols: true # 文章字数</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  time: true  # 阅读时长</span></span></span><br><span class="line"><span class="emphasis"><span class="section"> # 网页底部是否显示</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  total_</span>symbols: false # 所有文章总字数</span></span><br><span class="line">  total<span class="emphasis">_time: false  # 所有文章总时长</span></span><br><span class="line"><span class="emphasis">  exclude_</span>codeblock: false # 代码框内不计入字数</span><br></pre></td></tr></table></figure><p>然后我们还需要在主题配置文件下进行修改（就是指themes-next-_config.yml文件），内容如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">symbols<span class="emphasis">_count_</span>time:</span><br><span class="line">  separated<span class="emphasis">_meta: true # 换行显示</span></span><br><span class="line"><span class="emphasis">  item_</span>text<span class="emphasis">_post: true # 是否显示说明文字</span></span><br><span class="line"><span class="emphasis">  item_</span>text<span class="emphasis">_total: false # 站底总字数统计，不显示</span></span><br><span class="line"><span class="emphasis">  awl: 5  # Average Word Length，也就是平均每个字所占字符长度，默认值为 4(中文占2个，英文单词占5个)</span></span><br><span class="line"><span class="emphasis">  wpm: 275  # Words Per Minute，也就是平均每分钟能读多少字，默认值为 275</span></span><br></pre></td></tr></table></figure><p>如果你发现你的字数统计和时间估计显示的是Na这样的样式，说明你的awl配置有问题，需要进行修改。特别注意，如果你的默认hello-world.md文件没有删除的话，可能就会影响你的站底字数统计。</p><h3 id="3-头像设置"><a href="#3-头像设置" class="headerlink" title="3.头像设置"></a>3.头像设置</h3><p>最后先说一个网站的头像设置问题，如果你想设置一个自己的头像的话，你只需要进行简单的设置就可以了。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Sidebar Avatar</span></span><br><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: /images/xxx.jpg</span><br><span class="line">  # If true, the avatar will be dispalyed in circle.</span><br><span class="line">  rounded: true # 表示头像采用圆形框，默认为方形（false)。</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  rotated: true # 头像会随着鼠标的移动而旋转</span><br></pre></td></tr></table></figure><p>顺便说一下，如果你想实现和我一样的文章内容只显示摘要而不显示全文的话，你只需要在自己Markdown工具上合适位置输入&lt;!—-more—-&gt;就可以了（这几个字符之间是没有任何的空格的）。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://zhuanlan.zhihu.com/p/75055816">Next网站配置——功能增添</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天在对hexo进行主题美化配置的过程中我发现了不少的问题。所以特地在这里列举一下问题以及相关的注意事项。可能一次性很难说完说全，因为我自己也是刚使用hexo博客不久（之前自己投入的是hugo的怀抱），所以有关于hexo博客的配置和注意事项我应该会写一个系列。而且我怕一篇文章太长，没有耐心看下去，所以还是选择少量多次的好。&lt;/p&gt;
&lt;h3 id=&quot;1-hexo-symbols-count-time下载报错&quot;&gt;&lt;a href=&quot;#1-hexo-symbols-count-time下载报错&quot; class=&quot;headerlink&quot; title=&quot;1.hexo-symbols-count-time下载报错&quot;&gt;&lt;/a&gt;1.hexo-symbols-count-time下载报错&lt;/h3&gt;&lt;p&gt;今天我想给自己的hexo博客上添加字数统计和阅读时间估计（我看到许多的hexo博客都使用了这个插件，而且自己也觉得很不错）。但是当我在终端输入&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install hexo-symbols-count-time --save&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;时（npm下载慢的朋友可以使用cnpm），我发现我当前版本的一些js文件版本过低，我需要更新版本。&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1.3lz4gml615w0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;看到有人在issues中提交了和我一样问题的截图，有人给出的解答是先更新npm和node.js，于是我决定先将npm和node.js更新一下。输入以下代码：&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://example.github.io/categories/Hexo/"/>
    
    
    <category term="教程" scheme="https://example.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="文字博客" scheme="https://example.github.io/tags/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="主题" scheme="https://example.github.io/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>如何快速搭建一个hexo博客</title>
    <link href="https://example.github.io/posts/4223bff5.html"/>
    <id>https://example.github.io/posts/4223bff5.html</id>
    <published>2021-06-24T02:08:18.000Z</published>
    <updated>2021-07-09T16:12:21.130Z</updated>
    
    <content type="html"><![CDATA[<p>hexo博客是一个Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。我将在这里说说自己是如何搭建hexo博客的。</p><h3 id="安装node-js和Git"><a href="#安装node-js和Git" class="headerlink" title="安装node.js和Git"></a>安装node.js和Git</h3><p>首先第一步，你需要首先下载<a href="https://nodejs.org/en/">Node.js</a>（安装的时候记得勾选add to path)和<a href="https://git-scm.com/">Git</a>,这两个是你搭建hexo博客必备的东西（Hexo是一款基于Node.js的静态博客框架），所以Node.js就是根本中的根本。当然，Git主要是为了完成博客的部署，提交问题而准备的。其实你可以下载一个已经集成了git bash的<a href="https://cmder.net/">cmder</a>,建议下载full版本的。之后可以在cmder上面进行博客的搭建，部署。接下来的命令将在cmder中进行，如果使用git bash的话，命令也是一样的。</p><p>完成安装之后，我们打开cmder分别输入</p><span id="more"></span><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v </span><br><span class="line">git --version(直接使用的cmder就省略这一步)</span><br></pre></td></tr></table></figure><p>如果看到有版本号输出的话，那就代表安装成功且环境变量没有问题。如果没有，那就建议看看是不是安装的时候忘记勾选add to path，建议查看node.js的环境变量（卸载重新安装node.js也可以）。</p><p>当你完成这些工具的下载，检查之后，你接着需要去<a href="https://github.com/">GitHub</a>注册一个账号，接下来我以hexo+github pages的部署为例。账号注册过程很简单，这里就不赘述了，不会的话建议自行百度或者Google。</p><p>注：其实上面这些工具完全可以不放入系统盘，就算放在其他硬盘，下载依赖的时候，依赖还是会默认下载到系统盘的。这是没什么影响的。我现在的博客就是这么操作的。</p><hr><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>下面开始正式的安装：</p><p>1.安装cnpm(国内由于众所周知的原因npm下载插件，依赖的时候比较慢，所以采用cnpm下载)</p><p>在cmder中输入</p><p><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p><p>检查：cnpm是否安装成功 <code>cnpm -v</code>  如果输出版本号就是成功了</p><p>2.安装hexo</p><p>在cmder中输入 </p><p><code>cnpm install hexo-cli -g</code></p><p>完成之后，在你电脑上选择一个位置新建一个文件夹用来保存hexo文件。例如我就是：D:\BigDataTools\hexo</p><p>现在使用cmder  cd 到你刚才新建的文件夹下面，然后执行</p><p><code>hexo init</code> </p><p>到<code>Install dependencies</code></p><p>的时候你可能会卡住，这是大多数人基本都会遇到的，我们只需要在这里的时候结束命令，按<code>Ctrl + c</code>就可以结束命令（我在安装的过程中并没有遇到，如果你遇到了，那么请执行上述操作）。</p><p>下一步执行<code>cnpm install</code> 完成初始化工作，等待完成结束之后，接下来输入<code>hexo s</code>在本地预览。按住ctrl单击<code>http://localhost:4000</code>就可以在本地实现预览效果了。</p><h3 id="配置hexo博客"><a href="#配置hexo博客" class="headerlink" title="配置hexo博客"></a>配置hexo博客</h3><h4 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h4><p>你可能觉得那个主题并不好看，所以现在我们去挑选一个自己喜欢的主题吧——<a href="https://hexo.io/themes/">hexo主题</a>，所有的主题都在这里了。在上面挑选一个自己喜欢的就好，<strong>不同的主题之间配置不尽相同，略有差异</strong>。下面我以<a href="https://github.com/theme-next/hexo-theme-next">next</a>主题为例,主题的下载你可以直接克隆，也可以下载压缩包解压出来。我这里就直接克隆了。直接在cmder中输入</p><p><code>git clone https://github.com/theme-next/hexo-theme-next.git themes/next</code> </p><p>简单解释一下：前面的git clone就是克隆命令 中间一段是主题的地址 后面是将其命名为next。</p><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>在博客的根目录下找到__config.yml文件，vi进去找到theme那一行，将原来的主题替换为next。然后执行<code>hexo s</code>在本地预览效果。默认是白色的背景，如果想要使用黑色的背景就在<strong>themes-next-_config.yml</strong>中找到darkmode，将false改为true即可，但是这里有一点我必须说明一下，next主题下的Darkmode会根据设备来自行决定是light还是dark，意思就是如果你的手机是深色模式，电脑是浅色模式，那么你在手机上看到的博客样式就是深色的，而在电脑上看到的就会是浅色的。（注意,博客根目录下的配置文件和主题下面的配置文件都是一样的名字_config.yml，千万不要混淆）</p><h4 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h4><p>博客页面默认是英文的，我们现在使用的是next主题（不同的主题之间可能有所不一样，前面我已经提到过了，若有差异则以你所使用的主题官方文档为准）我们需要进入根目录下的_config.yml，找到language,然后将其改为zh-CN。</p><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><h4 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h4><p>进入我们之前已经创建好账号的GitHub，在左侧新建一个仓库，仓库的命名格式为：你的用户名+github.io。例如我的GitHub用户名是Aegisprogram，那么对应的我的仓库名字就是Aegisprogram.github.io。添加仓库描述，勾选public，勾选add README，然后点击创建。</p><h4 id="接下来创建密钥"><a href="#接下来创建密钥" class="headerlink" title="接下来创建密钥"></a>接下来创建密钥</h4><p>打开cmder 输入<code>ssh-keygen -t rsa -C “your_email@youremail.com“</code>,然后接连按回车键，等到命令执行结束后我们输入<code>cat ~/.ssh/id_rsa.pub</code>,我们能看到一大串字母。我们把上面一大串密钥复制下，进入GitHub-点击头像-setting-SSH-New SSH Key，把之前复制的一大串字母添加进去。回到cmder，输入<code> ssh -T git@github.com</code>,接下来你会看到<code>Are you sure you want to continue connecting (yes/no/[fingerprint])? </code>,如果还有别的内容，那也就yes。现在去GitHub自己仓库上面点击code,切换到ssh然后将那一段地址复制下来。</p><h4 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h4><p>我们用cmder打开博客根目录下的_config.yml文件，找到deploy所在地方，修改添加信息。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="code">type: git</span></span><br><span class="line"><span class="code">repo: git@github.com:username/username.github.io.git</span></span><br><span class="line"><span class="code">branch: main(我们新建仓库的时候就是main，所以这里直接采用main分支)</span></span><br></pre></td></tr></table></figure><p>接着在博客根目录下执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &#x27;yourname&#x27;(github用户名)</span><br><span class="line">git config --global user.email &#x27;youremail&#x27;(注册github所用的邮箱)</span><br></pre></td></tr></table></figure><p>之后上传插件：cnpm install hexo-deployer-git –save</p><p>最后我们在博客根目录下执行hexo g -d就可以完成上传了。我们可以去自己的仓库看看文件是否上传成功，接着访问我们的网址就好了。</p><p>至此，hexo博客就搭建部署完成了。但是我想你已经迫不及待地想要开始写一篇自己地文章提交上去了吧。我们需要掌握一些博客的命令：</p><ul><li>新建博客<code>hexo new &#39;title&#39;</code>(hexo会直接在D:\BigDataTools\hexo\source_posts下生成.md文件)</li><li>新建博客页<code>hexo new page +name</code></li><li>清理缓存<code>hexo clean</code></li><li>本地预览<code>hexo s</code></li><li>提交博客<code>hexo g -d </code></li></ul><p>当然，这些都是十分简单的但是却很需要的命令，除此之外，使用静态博客你还需要对Markdown写作语法熟练，这是基本要求，顺带了解一下GitHub网站，最好能掌握一些HTML，CSS和JavaScript，当然如果你注重内容输出本身的话，那么掌握Markdown语法基本够用。</p><p>对于写作工具的话，我推荐使用<a href="https://typora.io/">Typora</a>，轻量写作神器，所见即所得。</p><p>hexo博客还有很多的内容需要自己去探索，在这里不可能一一讲解，不过，着重了解hexo的博客框架各部分的作用还是很有必要的。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://www.cnblogs.com/huanhao/p/hexobase.html">基础篇——hexo博客搭建教程</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;hexo博客是一个Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。我将在这里说说自己是如何搭建hexo博客的。&lt;/p&gt;
&lt;h3 id=&quot;安装node-js和Git&quot;&gt;&lt;a href=&quot;#安装node-js和Git&quot; class=&quot;headerlink&quot; title=&quot;安装node.js和Git&quot;&gt;&lt;/a&gt;安装node.js和Git&lt;/h3&gt;&lt;p&gt;首先第一步，你需要首先下载&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;（安装的时候记得勾选add to path)和&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;,这两个是你搭建hexo博客必备的东西（Hexo是一款基于Node.js的静态博客框架），所以Node.js就是根本中的根本。当然，Git主要是为了完成博客的部署，提交问题而准备的。其实你可以下载一个已经集成了git bash的&lt;a href=&quot;https://cmder.net/&quot;&gt;cmder&lt;/a&gt;,建议下载full版本的。之后可以在cmder上面进行博客的搭建，部署。接下来的命令将在cmder中进行，如果使用git bash的话，命令也是一样的。&lt;/p&gt;
&lt;p&gt;完成安装之后，我们打开cmder分别输入&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="https://example.github.io/categories/Hexo/"/>
    
    
    <category term="教程" scheme="https://example.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="文字博客" scheme="https://example.github.io/tags/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
