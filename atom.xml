<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Asgisprogram&#39;s blog</title>
  
  <subtitle>有人住高楼，有人在深渊；有人光万丈，有人一身锈。世人千万种，浮云莫去求。斯人若彩虹，遇上方知有。</subtitle>
  <link href="https://example.github.io/atom.xml" rel="self"/>
  
  <link href="https://example.github.io/"/>
  <updated>2021-06-26T06:53:07.244Z</updated>
  <id>https://example.github.io/</id>
  
  <author>
    <name>Aegisprogram</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo主题美化相关问题</title>
    <link href="https://example.github.io/2021/06/26/hexo%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    <id>https://example.github.io/2021/06/26/hexo%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</id>
    <published>2021-06-26T05:08:42.000Z</published>
    <updated>2021-06-26T06:53:07.244Z</updated>
    
    <content type="html"><![CDATA[<p>今天在对hexo进行主题美化配置的过程中我发现了不少的问题。所以特地在这里列举一下问题以及相关的注意事项。可能一次性很难说完说全，因为我自己也是刚使用hexo博客不久（之前自己投入的是hugo的怀抱），所以有关于hexo博客的配置和注意事项我应该会写一个系列。而且我怕一篇文章太长，没有耐心看下去，所以还是选择少量多次的好。</p><p>1.hexo-symbols-count-time下载报错：</p><p>今天我想给自己的hexo博客上添加字数统计和阅读时间估计（我看到许多的hexo博客都使用了这个插件，而且自己也觉得很不错）。但是当我在终端输入</p><p><code>npm install hexo-symbols-count-time --save</code></p><p>时（npm下载慢的朋友可以使用cnpm），我发现我当前版本的一些js文件版本过低，我需要更新版本。<img src="https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1.3lz4gml615w0.png" alt="image"></p><p>看到有人在issues中提交了和我一样问题的截图，有人给出的解答是先更新npm和node.js，于是我决定先将npm和node.js更新一下。输入以下代码：</p><span id="more"></span><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">首先查看当前版本</span><br><span class="line">node -v</span><br><span class="line">node -v </span><br><span class="line">然后更新版本</span><br><span class="line">npm install -g npm</span><br><span class="line">注意：接下来的操作仅适合Mac和Linux用户</span><br><span class="line">npm cache clean -f # 清除缓存</span><br><span class="line">npm install -g n # 安装n模块，Windows系统目前无法使用n模块，所以无法完成后面的操作</span><br><span class="line">n stable # 升级node.js到最新稳定版本,r如果出现升级错误，在命令前面加上sudo</span><br></pre></td></tr></table></figure><p>所以现在有一个问题，那么Windows用户该如何更新node.js呢。呃，这个嘛，可能需要重新安装一遍到原来的路径（<del>我也表示很无奈</del>)。当你完成两个地方的更新之后，你再去下载hexo-symbols-count-time这个插件。</p><p>2.配置插件：这个配置插件也是有知识点滴。首先我们需要在站点配置上（也就是博客根目录下的_config.yml文件）添加配置内容，内容如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># count<span class="emphasis">_time (名字随意)</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  symbols_</span>count<span class="emphasis">_time:</span></span></span><br><span class="line"><span class="emphasis"><span class="section"> #文章内是否显示</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  symbols: true # 文章字数</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  time: true  # 阅读时长</span></span></span><br><span class="line"><span class="emphasis"><span class="section"> # 网页底部是否显示</span></span></span><br><span class="line"><span class="emphasis"><span class="section">  total_</span>symbols: false # 所有文章总字数</span></span><br><span class="line">  total<span class="emphasis">_time: false  # 所有文章总时长</span></span><br><span class="line"><span class="emphasis">  exclude_</span>codeblock: false # 代码框内不计入字数</span><br></pre></td></tr></table></figure><p>然后我们还需要在主题配置文件下进行修改（就是指themes-next-_config.yml文件），内容如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">symbols<span class="emphasis">_count_</span>time:</span><br><span class="line">  separated<span class="emphasis">_meta: true # 换行显示</span></span><br><span class="line"><span class="emphasis">  item_</span>text<span class="emphasis">_post: true # 是否显示说明文字</span></span><br><span class="line"><span class="emphasis">  item_</span>text<span class="emphasis">_total: false # 站底总字数统计，不显示</span></span><br><span class="line"><span class="emphasis">  awl: 5  # Average Word Length，也就是平均每个字所占字符长度，默认值为 4(中文占2个，英文单词占5个)</span></span><br><span class="line"><span class="emphasis">  wpm: 275  # Words Per Minute，也就是平均每分钟能读多少字，默认值为 275</span></span><br></pre></td></tr></table></figure><p>如果你发现你的字数统计和时间估计显示的是Na这样的样式，说明你的awl配置有问题，需要进行修改。特别注意，如果你的默认hello-world.md文件没有删除的话，可能就会影响你的站底字数统计。</p><p>3.头像设置：最后先说一个网站的头像设置问题，如果你想设置一个自己的头像的话，你只需要进行简单的设置就可以了。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Sidebar Avatar</span></span><br><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: /images/xxx.jpg</span><br><span class="line">  # If true, the avatar will be dispalyed in circle.</span><br><span class="line">  rounded: true # 表示头像采用圆形框，默认为方形（false)。</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  rotated: true # 头像会随着鼠标的移动而旋转</span><br></pre></td></tr></table></figure><p>顺便说一下，如果你想实现和我一样的文章内容只显示摘要而不显示全文的话，你只需要在自己Markdown工具上合适位置输入&lt;!–more–&gt;就可以了（这几个字符之间是没有任何的空格的）。</p><p>PS：参考博客：<a href="https://zhuanlan.zhihu.com/p/75055816">Next网站配置——功能增添</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天在对hexo进行主题美化配置的过程中我发现了不少的问题。所以特地在这里列举一下问题以及相关的注意事项。可能一次性很难说完说全，因为我自己也是刚使用hexo博客不久（之前自己投入的是hugo的怀抱），所以有关于hexo博客的配置和注意事项我应该会写一个系列。而且我怕一篇文章太长，没有耐心看下去，所以还是选择少量多次的好。&lt;/p&gt;
&lt;p&gt;1.hexo-symbols-count-time下载报错：&lt;/p&gt;
&lt;p&gt;今天我想给自己的hexo博客上添加字数统计和阅读时间估计（我看到许多的hexo博客都使用了这个插件，而且自己也觉得很不错）。但是当我在终端输入&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install hexo-symbols-count-time --save&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;时（npm下载慢的朋友可以使用cnpm），我发现我当前版本的一些js文件版本过低，我需要更新版本。&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ilemonEllen/image_github@master/blog_image/%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1.3lz4gml615w0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;看到有人在issues中提交了和我一样问题的截图，有人给出的解答是先更新npm和node.js，于是我决定先将npm和node.js更新一下。输入以下代码：&lt;/p&gt;</summary>
    
    
    
    <category term="文字博客" scheme="https://example.github.io/categories/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="https://example.github.io/categories/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/Hexo/"/>
    
    
    <category term="教程" scheme="https://example.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="文字博客" scheme="https://example.github.io/tags/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>如何快速搭建一个hexo博客</title>
    <link href="https://example.github.io/2021/06/24/How-to-build-your-hexo-blog/"/>
    <id>https://example.github.io/2021/06/24/How-to-build-your-hexo-blog/</id>
    <published>2021-06-24T02:08:18.000Z</published>
    <updated>2021-06-28T04:18:46.059Z</updated>
    
    <content type="html"><![CDATA[<p>hexo博客是一个Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。我将在这里说说自己是如何搭建hexo博客的。</p><p>首先第一步，你需要首先下载<a href="https://nodejs.org/en/">Node.js</a>（安装的时候记得勾选add to path)和<a href="https://git-scm.com/">Git</a>,这两个是你搭建hexo博客必备的东西（Hexo是一款基于Node.js的静态博客框架），所以Node.js就是根本中的根本。当然，Git主要是为了完成博客的部署，提交问题而准备的。其实你可以下载一个已经集成了git bash的<a href="https://cmder.net/">cmder</a>,建议下载full版本的。之后可以在cmder上面进行博客的搭建，部署。接下来的命令将在cmder中进行，如果使用git bash的话，命令也是一样的。</p><p>完成安装之后，我们打开cmder分别输入</p><span id="more"></span><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v </span><br><span class="line">git --version(直接使用的cmder就省略这一步)</span><br></pre></td></tr></table></figure><p>如果看到有版本号输出的话，那就代表安装成功且环境变量没有问题。如果没有，那就建议看看是不是安装的时候忘记勾选add to path，建议查看node.js的环境变量（卸载重新安装node.js也可以）。</p><p>当你完成这些工具的下载，检查之后，你接着需要去<a href="https://github.com/">GitHub</a>注册一个账号，接下来我以hexo+github pages的部署为例。账号注册过程很简单，这里就不赘述了，不会的话建议自行百度或者Google。</p><p>注：其实上面这些工具完全可以不放入系统盘，就算放在其他硬盘，下载依赖的时候，依赖还是会默认下载到系统盘的。这是没什么影响的。我现在的博客就是这么操作的。</p><p>下面开始正式的安装：</p><p>1.安装cnpm(国内由于众所周知的原因npm下载插件，依赖的时候比较慢，所以采用cnpm下载)</p><p>在cmder中输入<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p><p>检查：cnpm是否安装成功 <code>cnpm -v</code>  如果输出版本号就是成功了</p><p>2.安装hexo</p><p>在cmder中输入 <code>cnpm install hexo-cli -g</code></p><p>完成之后，在你电脑上选择一个位置新建一个文件夹用来保存hexo文件。例如我就是：D:\BigDataTools\hexo</p><p>现在使用cmder  cd 到你刚才新建的文件夹下面，然后执行<code>hexo init</code> 到<code>Install dependencies</code>的时候你可能会卡住，这是大多数人基本都会遇到的，我们只需要在这里的时候结束命令，按<code>Ctrl + c</code>就可以结束命令（我在安装的过程中并没有遇到，如果你遇到了，那么请执行上述操作）。</p><p>下一步执行<code>cnpm install</code> 完成初始化工作，等待完成结束之后，接下来输入<code>hexo s</code>在本地预览。按住ctrl单击<code>http://localhost:4000</code>就可以在本地实现预览效果了。</p><p>3.更换主题</p><p>你可能觉得那个主题并不好看，所以现在我们去挑选一个自己喜欢的主题吧——<a href="https://hexo.io/themes/">hexo主题</a>，所有的主题都在这里了。在上面挑选一个自己喜欢的就好，<strong>不同的主题之间配置不尽相同，略有差异</strong>。下面我以<a href="https://github.com/theme-next/hexo-theme-next">next</a>主题为例,主题的下载你可以直接克隆，也可以下载压缩包解压出来。我这里就直接克隆了。直接在cmder中输入<code>git clone https://github.com/theme-next/hexo-theme-next.git themes/next</code> 简单解释一下：前面的git clone就是克隆命令 中间一段是主题的地址 后面是将其命名为next。</p><p>4.修改配置文件</p><p>在博客的根目录下找到__config.yml文件，vi进去找到theme那一行，将原来的主题替换为next。然后执行<code>hexo s</code>在本地预览效果。默认是白色的背景，如果想要使用黑色的背景就在<strong>themes-next-_config.yml</strong>中找到darkmode，将false改为true即可。（注意,博客根目录下的配置文件和主题下面的配置文件都是一样的名字_config.yml，千万不要混淆）</p><p>5.设置语言</p><p>博客页面默认是英文的，我们现在使用的是next主题（不同的主题之间可能有所不一样，前面我已经提到过了，若有差异则以你所使用的主题官方文档为准）我们需要进入根目录下的_config.yml，找到language,然后将其改为zh-CN。</p><p>6.部署到github</p><ul><li><p>新建仓库：进入我们之前已经创建好账号的GitHub，在左侧新建一个仓库，仓库的命名格式为：你的用户名+github.io。例如我的GitHub用户名是Aegisprogram，那么对应的我的仓库名字就是Aegisprogram.github.io。添加仓库描述，勾选public，勾选add README，然后点击创建。</p></li><li><p>接下来创建密钥：打开cmder 输入<code>ssh-keygen -t rsa -C “your_email@youremail.com“</code>,然后接连按回车键，等到命令执行结束后我们输入<code>cat ~/.ssh/id_rsa.pub</code>,我们能看到一大串字母。我们把上面一大串密钥复制下，进入GitHub-点击头像-setting-SSH-New SSH Key，把之前复制的一大串字母添加进去。回到cmder，输入<code> ssh -T git@github.com</code>,接下来你会看到<code>Are you sure you want to continue connecting (yes/no/[fingerprint])? </code>,如果还有别的内容，那也就yes。现在去GitHub自己仓库上面点击code,切换到ssh然后将那一段地址复制下来。</p></li><li><p>之后，我们用cmder打开博客根目录下的_config.yml文件，找到deploy所在地方，修改添加信息。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="code">type: git</span></span><br><span class="line"><span class="code">repo: git@github.com:username/username.github.io.git</span></span><br><span class="line"><span class="code">branch: main(我们新建仓库的时候就是main，所以这里直接采用main分支)</span></span><br></pre></td></tr></table></figure><p>接着在博客根目录下执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &#x27;yourname&#x27;(github用户名)</span><br><span class="line">git config --global user.email &#x27;youremail&#x27;(注册github所用的邮箱)</span><br></pre></td></tr></table></figure><p>之后上传插件：cnpm install hexo-deployer-git –save</p><p>最后我们在博客根目录下执行hexo g -d就可以完成上传了。我们可以去自己的仓库看看文件是否上传成功，接着访问我们的网址就好了。</p></li></ul><p>至此，hexo博客就搭建部署完成了。但是我想你已经迫不及待地想要开始写一篇自己地文章提交上去了吧。我们需要掌握一些博客的命令：</p><ul><li>新建博客<code>hexo new &#39;title&#39;</code>(hexo会直接在D:\BigDataTools\hexo\source_posts下生成.md文件)</li><li>新建博客页<code>hexo new page +name</code></li><li>提交博客<code>hexo g -d </code></li></ul><p>当然，这些都是十分简单的但是却很需要的命令，除此之外，使用静态博客你还需要对Markdown写作语法熟练，这是基本要求，顺带了解一下GitHub网站，最好能掌握一些HTML，CSS和JavaScript，当然如果你注重内容输出本身的话，那么掌握Markdown语法基本够用。</p><p>对于写作工具的话，我推荐使用<a href="https://typora.io/">Typora</a>，轻量写作神器，所见即所得。</p><p>hexo博客还有很多的内容需要自己去探索，在这里不可能一一讲解，不过，着重了解hexo的博客框架各部分的作用还是很有必要的。</p><p>PS：参考博客：<a href="https://www.cnblogs.com/huanhao/p/hexobase.html">基础篇——hexo博客搭建教程</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;hexo博客是一个Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。我将在这里说说自己是如何搭建hexo博客的。&lt;/p&gt;
&lt;p&gt;首先第一步，你需要首先下载&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;（安装的时候记得勾选add to path)和&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;,这两个是你搭建hexo博客必备的东西（Hexo是一款基于Node.js的静态博客框架），所以Node.js就是根本中的根本。当然，Git主要是为了完成博客的部署，提交问题而准备的。其实你可以下载一个已经集成了git bash的&lt;a href=&quot;https://cmder.net/&quot;&gt;cmder&lt;/a&gt;,建议下载full版本的。之后可以在cmder上面进行博客的搭建，部署。接下来的命令将在cmder中进行，如果使用git bash的话，命令也是一样的。&lt;/p&gt;
&lt;p&gt;完成安装之后，我们打开cmder分别输入&lt;/p&gt;</summary>
    
    
    
    <category term="文字博客" scheme="https://example.github.io/categories/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Hexo" scheme="https://example.github.io/categories/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/Hexo/"/>
    
    
    <category term="教程" scheme="https://example.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="文字博客" scheme="https://example.github.io/tags/%E6%96%87%E5%AD%97%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
