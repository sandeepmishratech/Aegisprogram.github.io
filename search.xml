<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>如何快速搭建一个hexo博客</title>
    <url>/2021/06/24/How-to-build-your-hexo-blog/</url>
    <content><![CDATA[<p>hexo博客是一个Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。我将在这里说说自己是如何搭建hexo博客的。</p>
<p>首先第一步，你需要首先下载<a href="https://nodejs.org/en/">Node.js</a>（安装的时候记得勾选add to path)和<a href="https://git-scm.com/">Git</a>,这两个是你搭建hexo博客必备的东西（Hexo是一款基于Node.js的静态博客框架），所以Node.js就是根本中的根本。当然，Git主要是为了完成博客的部署，提交问题而准备的。其实你可以下载一个已经集成了git bash的<a href="https://cmder.net/">cmder</a>,建议下载full版本的。之后可以在cmder上面进行博客的搭建，部署。接下来的命令将在cmder中进行，如果使用git bash的话，命令也是一样的。</p>
<p>完成安装之后，我们打开cmder分别输入</p>
<span id="more"></span>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">node -v </span><br><span class="line">git --version(直接使用的cmder就省略这一步)</span><br></pre></td></tr></table></figure>

<p>如果看到有版本号输出的话，那就代表安装成功且环境变量没有问题。如果没有，那就建议看看是不是安装的时候忘记勾选add to path，建议查看node.js的环境变量（卸载重新安装node.js也可以）。</p>
<p>当你完成这些工具的下载，检查之后，你接着需要去<a href="https://github.com/">GitHub</a>注册一个账号，接下来我以hexo+github pages的部署为例。账号注册过程很简单，这里就不赘述了，不会的话建议自行百度或者Google。</p>
<p>注：其实上面这些工具完全可以不放入系统盘，就算放在其他硬盘，下载依赖的时候，依赖还是会默认下载到系统盘的。这是没什么影响的。我现在的博客就是这么操作的。</p>
<p>下面开始正式的安装：</p>
<p>1.安装cnpm(国内由于众所周知的原因npm下载插件，依赖的时候比较慢，所以采用cnpm下载)</p>
<p>在cmder中输入<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p>
<p>检查：cnpm是否安装成功 <code>cnpm -v</code>  如果输出版本号就是成功了</p>
<p>2.安装hexo</p>
<p>在cmder中输入 <code>cnpm install hexo-cli -g</code></p>
<p>完成之后，在你电脑上选择一个位置新建一个文件夹用来保存hexo文件。例如我就是：D:\BigDataTools\hexo</p>
<p>现在使用cmder  cd 到你刚才新建的文件夹下面，然后执行<code>hexo init</code> 到<code>Install dependencies</code>的时候你可能会卡住，这是大多数人基本都会遇到的，我们只需要在这里的时候结束命令，按<code>Ctrl + c</code>就可以结束命令（我在安装的过程中并没有遇到，如果你遇到了，那么请执行上述操作）。</p>
<p>下一步执行<code>cnpm install</code> 完成初始化工作，等待完成结束之后，接下来输入<code>hexo s</code>在本地预览。按住ctrl单击<code>http://localhost:4000</code>就可以在本地实现预览效果了。</p>
<p>3.更换主题</p>
<p>你可能觉得那个主题并不好看，所以现在我们去挑选一个自己喜欢的主题吧——<a href="https://hexo.io/themes/">hexo主题</a>，所有的主题都在这里了。在上面挑选一个自己喜欢的就好，<strong>不同的主题之间配置不尽相同，略有差异</strong>。下面我以<a href="https://github.com/theme-next/hexo-theme-next">next</a>主题为例,主题的下载你可以直接克隆，也可以下载压缩包解压出来。我这里就直接克隆了。直接在cmder中输入<code>git clone https://github.com/theme-next/hexo-theme-next.git themes/next</code> 简单解释一下：前面的git clone就是克隆命令 中间一段是主题的地址 后面是将其命名为next。</p>
<p>4.修改配置文件</p>
<p>在博客的根目录下找到__config.yml文件，vi进去找到theme那一行，将原来的主题替换为next。然后执行<code>hexo s</code>在本地预览效果。默认是白色的背景，如果想要使用黑色的背景就在<strong>themes-next-_config.yml</strong>中找到darkmode，将false改为true即可。（注意,博客根目录下的配置文件和主题下面的配置文件都是一样的名字_config.yml，千万不要混淆）</p>
<p>5.设置语言</p>
<p>博客页面默认是英文的，我们现在使用的是next主题（不同的主题之间可能有所不一样，前面我已经提到过了，若有差异则以你所使用的主题官方文档为准）我们需要进入根目录下的_config.yml，找到language,然后将其改为zh-CN。</p>
<p>6.部署到github</p>
<ul>
<li><p>新建仓库：进入我们之前已经创建好账号的GitHub，在左侧新建一个仓库，仓库的命名格式为：你的用户名+github.io。例如我的GitHub用户名是Aegisprogram，那么对应的我的仓库名字就是Aegisprogram.github.io。添加仓库描述，勾选public，勾选add README，然后点击创建。</p>
</li>
<li><p>接下来创建密钥：打开cmder 输入<code>ssh-keygen -t rsa -C “your_email@youremail.com“</code>,然后接连按回车键，等到命令执行结束后我们输入<code>cat ~/.ssh/id_rsa.pub</code>,我们能看到一大串字母。我们把上面一大串密钥复制下，进入GitHub-点击头像-setting-SSH-New SSH Key，把之前复制的一大串字母添加进去。回到cmder，输入<code> ssh -T git@github.com</code>,接下来你会看到<code>Are you sure you want to continue connecting (yes/no/[fingerprint])? </code>,如果还有别的内容，那也就yes。现在去GitHub自己仓库上面点击code,切换到ssh然后将那一段地址复制下来。</p>
</li>
<li><p>之后，我们用cmder打开博客根目录下的_config.yml文件，找到deploy所在地方，修改添加信息。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="code">	type: git</span></span><br><span class="line"><span class="code">	repo: git@github.com:username/username.github.io.git</span></span><br><span class="line"><span class="code">	branch: main(我们新建仓库的时候就是main，所以这里直接采用main分支)</span></span><br></pre></td></tr></table></figure>

<p>接着在博客根目录下执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &#x27;yourname&#x27;(github用户名)</span><br><span class="line">git config --global user.email &#x27;youremail&#x27;(注册github所用的邮箱)</span><br></pre></td></tr></table></figure>

<p>之后上传插件：cnpm install hexo-deployer-git –save</p>
<p>最后我们在博客根目录下执行hexo g -d就可以完成上传了。我们可以去自己的仓库看看文件是否上传成功，接着访问我们的网址就好了。</p>
</li>
</ul>
<p>至此，hexo博客就搭建部署完成了。但是我想你已经迫不及待地想要开始写一篇自己地文章提交上去了吧。我们需要掌握一些博客的命令：</p>
<ul>
<li>新建博客<code>hexo new &#39;title&#39;</code>(hexo会直接在D:\BigDataTools\hexo\source_posts下生成.md文件)</li>
<li>新建博客页<code>hexo new page +name</code></li>
<li>提交博客<code>hexo g -d </code></li>
</ul>
<p>当然，这些都是十分简单的但是却很需要的命令，除此之外，使用静态博客你还需要对Markdown写作语法熟练，这是基本要求，顺带了解一下GitHub网站，最好能掌握一些HTML，CSS和JavaScript，当然如果你注重内容输出本身的话，那么掌握Markdown语法基本够用。</p>
<p>对于写作工具的话，我推荐使用<a href="https://typora.io/">Typora</a>，轻量写作神器，所见即所得。</p>
<p>hexo博客还有很多的内容需要自己去探索，在这里不可能一一讲解，不过，着重了解hexo的博客框架各部分的作用还是很有必要的。</p>
<p>PS：参考博客：<a href="https://www.cnblogs.com/huanhao/p/hexobase.html">基础篇——hexo博客搭建教程</a></p>
]]></content>
      <categories>
        <category>文字博客</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>文字博客</tag>
      </tags>
  </entry>
</search>
